openapi: 3.0.0
servers:
- url: /api
info:
  description: 'This is an online swagger codegen server.  You can find out more at
    https://github.com/swagger-api/swagger-codegen or on [irc.freenode.net, #swagger](http://swagger.io/irc/).'
  version: 3.0.0
  title: Swagger Generator
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
- name: developers
  description: Operations available to developers
- name: clients
- name: servers
paths:
  "/generate":
    get:
      tags:
      - clients
      - servers
      x-swagger-router-controller: io.swagger.v3.generator.online.GeneratorController
      operationId: generateFromURL
      summary: Generates and download code. GenerationRequest input provided as JSON
        available at URL specified in parameter codegenOptionsURL.
      parameters:
      - name: codegenOptionsURL
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    post:
      tags:
      - clients
      - servers
      x-swagger-router-controller: io.swagger.v3.generator.online.GeneratorController
      operationId: generate
      summary: Generates and download code. GenerationRequest input provided as request
        body.
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GenerationRequest"
      responses:
        '200':
          description: successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/clients":
    get:
      tags:
      - clients
      x-swagger-router-controller: io.swagger.v3.generator.online.GeneratorController
      operationId: clientLanguages
      summary: Gets languages supported by the client generator.
      parameters:
      - "$ref": "#/components/parameters/version"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  "/servers":
    get:
      tags:
      - servers
      x-swagger-router-controller: io.swagger.v3.generator.online.GeneratorController
      operationId: serverLanguages
      summary: Gets languages supported by the server generator.
      parameters:
      - "$ref": "#/components/parameters/version"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  "/options":
    get:
      x-swagger-router-controller: io.swagger.v3.generator.online.GeneratorController
      operationId: listOptions
      summary: Returns options for a given language (client or server)
      parameters:
      - name: language
        in: query
        description: language
        schema:
          type: string
      - "$ref": "#/components/parameters/version"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: "object"
                additionalProperties:
                  $ref: "#/components/schemas/CliOption"
components:
  parameters:
    version:
      name: version
      in: query
      description: generator version used by codegen engine
      schema:
        type: string
        enum:
        - v2
        - v3
  schemas:
    GenerationRequest:
      x-swagger-router-model: io.swagger.codegen.v3.service.GenerationRequest
      required:
      - spec
      - options
      properties:
        spec:
          type: object
          description: spec in json format. . Alternative to `specURL`
        specURL:
          type: string
          description: URL of the spec in json format. Alternative to `spec`
        type:
          type: string
          description: type of the spec (client or server)
          enum:
          - client
          - server
        codegenVersion:
          type: string
          description: codegen version to use
          enum:
          - v2
          - v3
        options:
          "$ref": "#/components/schemas/Options"
    AuthorizationValue:
      x-swagger-router-model: io.swagger.v3.parser.core.models.AuthorizationValue
      title: authorization
      description: adds authorization headers when fetching the open api definitions
        remotely. Pass in an authorizationValue object
      properties:
        value:
          type: string
          description: Authorization value
        keyName:
          type: string
          description: Authorization key
        type:
          type: string
          description: Authorization type
    Options:
      x-swagger-router-model: io.swagger.codegen.v3.service.Options
      required:
      - lang
      properties:
        lang:
          type: string
          title: language
          description: client language to generate (maybe class name in classpath,
            required)
          example: java
        auth:
          type: string
          title: authorization
          description: adds authorization headers when fetching the open api definitions
            remotely. Pass in a URL-encoded string of name:header with a comma separating
            multiple values
        authorizationValue:
          "$ref": "#/components/schemas/AuthorizationValue"
        apiPackage:
          type: string
          title: api package
          description: package for generated api classes
        templateVersion:
          type: string
          title: Template Version
          description: template version for generation
        modelPackage:
          type: string
          title: model package
          description: package for generated models
        modelNamePrefix:
          type: string
          title: model name prefix
          description: Prefix that will be prepended to all model names. Default is
            the empty string.
        modelNameSuffix:
          type: string
          title: model name suffix
          description: PrefixSuffix that will be appended to all model names. Default
            is the empty string.
        systemProperties:
          type: object
          additionalProperties:
            type: string
          title: System Properties
          description: sets specified system properties in key/value format
        instantiationTypes:
          type: object
          additionalProperties:
            type: string
          title: instantiation types
          description: 'sets instantiation type mappings in key/value format. For
            example (in Java): array=ArrayList,map=HashMap. In other words array types
            will get instantiated as ArrayList in generated code.'
        typeMappings:
          type: object
          additionalProperties:
            type: string
          title: type mappings
          description: 'sets mappings between swagger spec types and generated code
            types in key/value format. For example: array=List,map=Map,string=String.'
        additionalProperties:
          type: object
          additionalProperties:
            type: object
          title: additional properties
          description: sets additional properties that can be referenced by the mustache
            templates in key/value format.
        languageSpecificPrimitives:
          type: array
          items:
            type: string
          title: language specific primitives
          description: 'specifies additional language specific primitive types in
            the format of type1,type2,type3,type3. For example: String,boolean,Boolean,Double.
            You can also have multiple occurrences of this option.'
        importMappings:
          type: object
          additionalProperties:
            type: string
          title: import mappings
          description: specifies mappings between a given class and the import that
            should be used for that class in key/value format.
        invokerPackage:
          type: string
          title: invoker package
          description: root package for generated code
        groupId:
          type: string
          title: group id
          description: groupId in generated pom.xml
        artifactId:
          type: string
          title: artifact id
          description: artifactId in generated pom.xml
        artifactVersion:
          type: string
          title: artifact version
          description: artifact version generated in pom.xml
        library:
          type: string
          title: library
          description: library template (sub-template)
        gitUserId:
          type: string
          title: git user id
          description: Git user ID, e.g. swagger-api.
        gitRepoId:
          type: string
          title: git repo id
          description: Git repo ID, e.g. swagger-codegen.
        releaseNote:
          type: string
          title: release note
          description: Release note, default to 'Minor update'.
        httpUserAgent:
          type: string
          title: http user agent
          description: HTTP user agent, e.g. codegen_csharp_api_client, default to
            'Swagger-Codegen/{packageVersion}}/{language}'
        reservedWordsMappings:
          type: object
          additionalProperties:
            type: string
          title: reserved words mappings
          description: pecifies how a reserved name should be escaped to. Otherwise,
            the default _<name> is used. For example id=identifier.
        ignoreFileOverride:
          type: string
          title: ignore file override location
          description: Specifies an override location for the .swagger-codegen-ignore
            file. Most useful on initial generation.
        removeOperationIdPrefix:
          type: boolean
          title: remove prefix of the operationId
          description: Remove prefix of operationId, e.g. config_getId => getId
        skipOverride:
          type: boolean
    CliOption:
      type: "object"
      properties:
        optionName:
          type: "string"
        description:
          type: "string"
        type:
          type: "string"
          description: "Data type is based on the types supported by the JSON-Schema"
        enum:
          type: "object"
          additionalProperties:
            type: "string"
        default:
          type: "string"
