var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/DragBase.html",[0,1.135,1,1.943]],["body/interfaces/DragBase.html",[0,1.898,1,2.923,2,0.171,3,0.221,4,0.151,5,1.539,6,0.301,7,0.753,8,1.083,9,3.143,10,3.143,11,3.143,12,3.401,13,2.294,14,0.656,15,0.022,16,2.091,17,2.404,18,0.403,19,2.237,20,1.192,21,2.451,22,1.347,23,2.029,24,1.192,25,0.309,26,2.559,27,2.657,28,2.657,29,2.657,30,2.657,31,2.657,32,2.657,33,2.73,34,2.858,35,2.418,36,3.033,37,2.559,38,2.657,39,2.657,40,2.249,41,2.249,42,3.092,43,1.791,44,1.791,45,1.791,46,1.347,47,1.655,48,1.655,49,1.655,50,1.655,51,1.655,52,1.655,53,1.655,54,1.655,55,1.655,56,1.655,57,1.655,58,1.655,59,1.437,60,1.437,61,1.437,62,1.437,63,1.437,64,1.437,65,1.539,66,1.655,67,1.655,68,2.558,69,1.655,70,1.655,71,1.655,72,1.539,73,1.539,74,1.655,75,0.999,76,1.262,77,1.791,78,1.791,79,1.791,80,2.545,81,3.778,82,1.791,83,1.791,84,1.791,85,1.791,86,2.482,87,2.264,88,1.655,89,1.655,90,1.655,91,1.655,92,1.655,93,2.482,94,1.655,95,1.655,96,1.655,97,1.655,98,1.655,99,1.655,100,1.655,101,1.655,102,1.791,103,3.492,104,4.122,105,1.791,106,1.791,107,1.791,108,1.655,109,1.655,110,1.655,111,1.791,112,1.791,113,1.791,114,1.791,115,1.791,116,1.791,117,1.655,118,1.319,119,1.791,120,2.418,121,1.655,122,1.655,123,1.655,124,1.655,125,1.655,126,1.539,127,0.613,128,1.655,129,1.539,130,1.266,131,1.539,132,1.539,133,1.655,134,1.655,135,1.655,136,1.655,137,1.655,138,1.655,139,1.655,140,1.655,141,0.012,142,0.012]],["title/interfaces/Draggable.html",[0,1.135,86,1.815]],["body/interfaces/Draggable.html",[0,1.889,1,2.906,2,0.169,3,0.219,4,0.149,5,1.52,6,0.297,7,0.746,8,1.12,9,1.635,10,1.635,11,1.635,12,1.769,13,2.28,14,0.67,15,0.022,16,2.094,17,1.833,18,0.4,19,2.234,20,1.178,21,2.441,22,1.331,23,2.019,24,1.178,25,0.309,26,2.544,27,2.638,28,2.638,29,2.638,30,2.638,31,2.638,32,2.638,33,2.714,34,2.837,35,2.397,36,3.02,37,2.544,38,2.638,39,2.638,40,2.229,41,2.229,42,3.07,43,1.769,44,1.769,45,1.769,46,1.331,47,1.635,48,1.635,49,1.635,50,1.635,51,1.635,52,1.635,53,1.635,54,1.635,55,1.635,56,1.635,57,1.635,58,1.635,59,1.42,60,1.42,61,1.42,62,1.42,63,1.42,64,1.42,65,1.52,66,1.635,67,1.635,68,2.545,69,1.635,70,1.635,71,1.635,72,1.52,73,1.52,74,1.635,75,0.992,76,1.259,77,1.769,78,1.769,79,1.769,80,2.54,81,3.762,82,1.769,83,1.769,84,1.769,85,1.769,86,2.714,87,2.251,88,1.635,89,1.635,90,1.635,91,1.635,92,1.635,93,2.464,94,1.635,95,1.635,96,1.635,97,1.635,98,1.635,99,1.635,100,1.635,101,1.635,102,1.769,103,3.477,104,4.104,105,1.769,106,1.769,107,1.769,108,1.635,109,1.635,110,1.635,111,1.769,112,1.769,113,1.769,114,1.769,115,1.769,116,1.769,117,1.635,118,1.658,119,1.769,120,2.837,121,3.125,122,3.125,123,3.125,124,3.125,125,3.125,126,1.52,127,0.605,128,1.635,129,1.52,130,1.251,131,1.52,132,1.52,133,1.635,134,1.635,135,1.635,136,1.635,137,1.635,138,1.635,139,1.635,140,1.635,141,0.012,142,0.012]],["title/injectables/GridsterCompact.html",[143,1.268,144,2.466]],["body/injectables/GridsterCompact.html",[2,0.233,3,0.206,4,0.206,6,0.41,8,1.054,14,0.654,15,0.022,16,1.645,18,0.528,19,2.171,20,1.625,21,2.041,22,1.837,23,2.183,24,1.625,25,0.18,37,1.837,75,1.05,76,1.258,80,2.166,141,0.015,142,0.015,143,2.048,144,3.545,145,3.313,146,1.464,147,6.185,148,5.162,149,5.802,150,6.185,151,3.893,152,5.162,153,5.162,154,1.1,155,2.941,156,1.318,157,3.878,158,1.573,159,1.489,160,3.878,161,1.815,162,5.162,163,3.878,164,3.878,165,3.878,166,3.878,167,3.878,168,3.878,169,3.878,170,3.878,171,0.511,172,2.663,173,0.206,174,1.96,175,2.098,176,2.257,177,7.02,178,4.41,179,5.162,180,5.802,181,5.162,182,5.802,183,5.162,184,5.162,185,5.802,186,5.802,187,3.878,188,2.663,189,3.878,190,2.663,191,2.257,192,3.878,193,3.878,194,1.96]],["title/classes/GridsterComponentInterface.html",[23,1.268,173,0.191]],["body/classes/GridsterComponentInterface.html",[2,0.163,3,0.144,4,0.144,6,0.287,7,0.726,8,1.069,13,2.298,14,0.775,15,0.022,16,1.896,17,3.206,18,0.514,19,1.982,20,1.136,21,2.227,22,1.283,23,1.416,25,0.126,46,2.968,68,2.625,76,1.105,80,2.203,127,1.136,141,0.011,142,0.011,144,3.624,156,1.409,171,0.357,172,1.861,173,0.213,195,2.315,196,5.278,197,5.278,198,5.278,199,5.278,200,5.278,201,3.322,202,4.509,203,5.278,204,5.278,205,5.278,206,5.278,207,5.278,208,3.322,209,5.278,210,5.278,211,5.278,212,5.278,213,5.278,214,5.278,215,4.509,216,5.278,217,5.278,218,5.278,219,5.278,220,5.278,221,4.509,222,5.278,223,1.58,224,2.855,225,5.278,226,5.278,227,5.278,228,4.003,229,2.71,230,2.71,231,2.71,232,3.322,233,2.71,234,2.71,235,2.71,236,2.71,237,2.71,238,2.71,239,2.71,240,2.71,241,2.71,242,2.71,243,2.71,244,3.624,245,2.71,246,2.71,247,2.71,248,4.472,249,2.71,250,2.71,251,3.624,252,2.71,253,2.71,254,2.71,255,2.71,256,2.71,257,2.71,258,2.71,259,2.71,260,2.71,261,2.71,262,2.71,263,3.322,264,2.71,265,2.71,266,2.71,267,2.71,268,2.71,269,4.509,270,2.71,271,2.71,272,2.71,273,2.71,274,2.71,275,2.315,276,2.667,277,4.011,278,4.011,279,2.027,280,1.706]],["title/interfaces/GridsterConfigS.html",[0,1.135,46,1.701]],["body/interfaces/GridsterConfigS.html",[0,1.796,1,2.433,2,0.147,3,0.198,4,0.13,6,0.394,7,0.674,9,1.426,10,1.426,13,2.369,14,0.783,15,0.022,16,2.122,18,0.369,19,1.923,20,1.027,23,1.313,24,1.027,25,0.25,26,2.881,33,3.074,37,2.881,46,1.762,47,2.921,48,2.921,49,2.921,50,2.921,51,2.921,52,2.921,53,2.921,54,2.921,55,2.921,56,2.921,57,2.921,58,2.921,59,2.537,60,2.537,61,2.537,62,2.537,63,2.537,64,2.537,65,2.716,66,2.921,67,2.921,68,2.912,69,2.921,70,2.921,71,2.921,72,2.716,73,2.716,76,0.814,80,1.389,86,3.074,87,2.611,88,2.921,89,2.921,90,2.921,91,2.921,92,2.921,93,3.074,94,2.921,95,2.921,96,2.921,97,2.921,98,2.921,99,2.921,100,2.921,101,2.921,108,2.921,109,2.921,110,2.921,111,3.16,112,1.543,113,1.543,114,1.543,115,1.543,116,1.543,117,2.616,118,1.449,120,2.165,121,1.426,122,1.426,123,1.426,124,1.426,125,1.426,126,1.326,127,0.528,128,1.426,129,1.326,130,1.091,131,1.326,132,1.326,133,1.426,134,1.426,135,1.426,136,1.426,137,1.426,138,1.426,139,1.426,140,1.426,141,0.011,142,0.011,156,0.471,172,1.683,281,2.094,282,2.452,283,2.822]],["title/injectables/GridsterEmptyCell.html",[143,1.268,244,2.466]],["body/injectables/GridsterEmptyCell.html",[2,0.118,3,0.104,4,0.104,6,0.208,7,0.567,8,0.992,14,0.72,15,0.022,17,3.175,18,0.365,19,1.887,20,0.823,23,1.572,24,0.823,25,0.091,36,0.992,68,3.215,75,0.637,76,1.201,80,2.567,130,2.712,141,0.009,142,0.009,143,1.378,146,0.888,151,2.804,154,0.557,155,1.489,156,1.32,158,1.48,159,1.401,161,1.807,171,0.259,173,0.104,174,0.992,175,2.112,176,1.822,190,1.349,191,3.545,194,1.582,224,1.063,244,2.15,276,1.582,279,1.582,284,1.678,285,4.454,286,4.454,287,4.454,288,4.454,289,4.454,290,4.454,291,4.454,292,4.454,293,4.454,294,4.454,295,4.454,296,4.454,297,4.454,298,3.131,299,3.131,300,3.131,301,3.131,302,3.131,303,3.131,304,3.131,305,3.131,306,3.378,307,3.131,308,1.964,309,3.131,310,1.964,311,3.131,312,1.964,313,3.131,314,1.964,315,3.131,316,1.964,317,3.131,318,1.964,319,3.131,320,1.964,321,3.131,322,1.964,323,3.131,324,4.454,325,1.964,326,1.349,327,1.822,328,1.964,329,1.964,330,1.964,331,1.964,332,1.964,333,1.964,334,1.964,335,1.964,336,1.964,337,1.964,338,1.964,339,1.964,340,1.964,341,1.236,342,1.678,343,4.865,344,5.451,345,4.647,346,5.439,347,3.131,348,4.865,349,3.131,350,5.439,351,1.678,352,3.131,353,4.454,354,3.131,355,3.131,356,4.865,357,3.131,358,1.964,359,1.964,360,3.131,361,4.865,362,3.131,363,1.678,364,1.964,365,3.131,366,4.454,367,1.964,368,1.964,369,1.964,370,1.964,371,3.131,372,4.865,373,3.131,374,1.964,375,3.131,376,4.454,377,1.964,378,3.904,379,5.439,380,1.964,381,4.454,382,4.865,383,4.865,384,1.964,385,1.964,386,3.131,387,3.131,388,4.454,389,1.964,390,3.131,391,3.131,392,1.964,393,3.131,394,1.964,395,3.131,396,3.131,397,1.964,398,1.964,399,1.964,400,1.964,401,1.964,402,1.678,403,1.964,404,1.964,405,2.374,406,1.678,407,1.964,408,1.964,409,1.964,410,3.131,411,1.971,412,1.964,413,1.236,414,1.964,415,1.964,416,1.678,417,1.964,418,2.675,419,2.41,420,3.131,421,1.678,422,1.964,423,2.675,424,3.131,425,1.964,426,1.964,427,1.964,428,1.964,429,1.964]],["title/interfaces/GridsterItem.html",[0,1.135,19,1.135]],["body/interfaces/GridsterItem.html",[0,1.709,2,0.25,3,0.221,4,0.221,6,0.572,7,0.979,8,1.261,13,2.372,14,0.769,15,0.021,16,1.998,17,2.406,18,0.341,19,1.898,21,2.137,22,1.97,25,0.193,59,3.212,60,3.212,61,3.212,62,3.212,63,3.212,64,3.212,74,3.699,76,0.753,80,1.553,81,2.619,117,3.145,118,1.451,141,0.015,142,0.015,156,0.799,224,3.439,276,3.212,279,3.212,413,4.001,430,3.554,431,5.431,432,5.431,433,5.431,434,4.16]],["title/components/GridsterItemComponent.html",[435,0.65,436,1.075]],["body/components/GridsterItemComponent.html",[2,0.131,3,0.116,4,0.116,6,0.23,7,0.615,8,0.579,13,2.012,14,0.698,15,0.022,16,1.744,18,0.464,19,2.012,20,0.912,21,1.65,22,1.031,25,0.101,59,1.1,60,1.1,61,1.1,62,1.1,63,1.1,64,1.1,75,1.328,76,1.168,80,2.246,87,1.976,127,1.015,141,0.01,142,0.01,146,0.963,154,0.617,156,1.334,158,0.863,159,1.23,161,1.709,171,0.287,173,0.116,175,2.258,176,1.975,191,2.743,194,2.382,208,3.218,223,1.694,224,1.837,228,3.165,263,3.41,269,4.028,276,1.715,279,1.715,280,2.968,306,3.575,327,3.837,341,1.37,342,1.859,405,2.574,411,1.37,413,2.137,419,2.931,431,1.859,432,1.859,433,1.859,435,0.926,436,1.412,437,0.813,438,0.86,439,0.86,440,1.859,441,1.342,442,1.749,443,3.566,444,0.688,445,2.9,446,2.9,447,2.164,448,2.574,449,3.395,450,1.423,451,3.395,452,3.684,453,4.715,454,4.108,455,4.028,456,3.165,457,3.72,458,3.684,459,4.028,460,4.028,461,2.9,462,4.028,463,4.028,464,1.976,465,4.028,466,4.715,467,1.864,468,2.9,469,4.028,470,1.85,471,3.395,472,2.176,473,2.176,474,2.176,475,3.395,476,3.566,477,2.176,478,1.859,479,2.176,480,2.176,481,2.176,482,2.176,483,2.176,484,2.176,485,2.176,486,3.575,487,2.176,488,2.176,489,2.176,490,2.176,491,2.176,492,2.176,493,2.176,494,3.575,495,2.176,496,2.176,497,2.176,498,2.9,499,1.859,500,1.859,501,1.859,502,1.65,503,0.86,504,1.859,505,1.859,506,4.174,507,3.395,508,2.331,509,2.176,510,3.395,511,3.395,512,2.176,513,2.176,514,2.176,515,2.176,516,2.176,517,2.176,518,2.176,519,2.176,520,1.859,521,1.65,522,2.176,523,1.859,524,1.859,525,1.859,526,2.176,527,4.174,528,2.9,529,4.174,530,2.9,531,4.174,532,4.174,533,3.395,534,2.176,535,2.176,536,2.176,537,2.176,538,2.176,539,2.176,540,3.395,541,3.395,542,2.176,543,2.176,544,2.176,545,2.176,546,2.176,547,2.176,548,2.176,549,3.395,550,2.176,551,3.395,552,2.176,553,3.395,554,2.176,555,3.395,556,2.176,557,2.176,558,2.176,559,2.176,560,2.176,561,2.176,562,2.176,563,2.176,564,2.9,565,3.395,566,2.176,567,3.395,568,2.176,569,0.617,570,1.342,571,1.268,572,0.691,573,1.864,574,0.86,575,0.86,576,0.86,577,0.688,578,0.86,579,0.727,580,1.373,581,1.342,582,0.688,583,2.431,584,0.813,585,0.86,586,0.688,587,0.813,588,0.86,589,0.688,590,0.688,591,0.86,592,0.688,593,0.727,594,0.86,595,0.688,596,0.86,597,0.688,598,0.86,599,0.688,600,0.86,601,0.688,602,0.86,603,0.688,604,0.727,605,0.813,606,0.553,607,1.491,608,0.86,609,0.553,610,0.86,611,0.553,612,0.86,613,0.553,614,0.584,615,0.86]],["title/classes/GridsterItemComponentInterface.html",[21,1.42,173,0.191]],["body/classes/GridsterItemComponentInterface.html",[2,0.226,3,0.2,4,0.2,6,0.398,7,0.915,13,2.242,14,0.771,15,0.021,16,1.807,17,3.156,18,0.523,19,2.183,20,1.575,21,1.998,23,2.156,24,1.575,25,0.174,75,1.242,76,1.106,80,2.545,87,2.559,141,0.014,142,0.014,156,1.399,171,0.495,173,0.269,208,3.844,223,1.828,263,3.844,275,3.21,280,3.844,306,4.631,452,3.844,454,4.631,455,5.217,457,4.193,458,3.844,459,5.217,460,5.217,461,5.217,462,5.217,465,5.217,476,3.21,478,3.21,486,4.631,494,4.631,500,3.21,501,3.21,616,3.21,617,3.757,618,3.757,619,3.757,620,3.757,621,3.757,622,3.757,623,3.757,624,3.757,625,3.757,626,3.757,627,3.757,628,3.757,629,3.757,630,3.757,631,3.757,632,3.757,633,3.757,634,3.757]],["title/modules/GridsterModule.html",[635,1.135,636,2.466]],["body/modules/GridsterModule.html",[2,0.286,3,0.253,4,0.253,15,0.021,18,0.574,25,0.31,141,0.017,142,0.017,171,0.628,173,0.253,436,2.196,470,2.32,502,3.615,569,1.351,577,2.211,635,1.863,636,5.038,637,2.257,638,3.721,639,3.428,640,3.428,641,4.072,642,4.072,643,4.072,644,3.428,645,2.773,646,2.773,647,4.766,648,3.709,649,2.773,650,3.428,651,4.766,652,4.766]],["title/components/GridsterPreviewComponent.html",[435,0.65,577,1.135]],["body/components/GridsterPreviewComponent.html",[2,0.21,3,0.186,4,0.186,6,0.37,7,0.872,8,0.821,14,0.658,15,0.021,16,1.561,18,0.395,25,0.162,75,1.426,76,1.074,127,1.277,141,0.014,142,0.014,146,1.366,154,0.993,156,1.234,158,1.225,159,1.497,161,1.293,171,0.461,173,0.186,175,2.979,176,2.802,208,3.914,221,4.115,223,1.971,263,4.045,280,3.032,326,2.404,344,4.115,345,4.115,435,1.126,436,1.048,437,1.307,438,1.384,439,1.384,441,1.904,443,4.704,444,1.107,445,4.115,446,4.115,447,2.301,448,3.652,456,4.175,463,5.066,468,4.115,469,5.066,470,2.12,498,4.115,499,2.991,502,2.655,504,4.115,505,2.991,520,4.115,521,3.652,523,2.991,524,2.991,525,2.991,569,0.993,570,1.904,571,1.798,572,0.98,573,2.344,574,1.384,575,1.384,576,1.384,577,1.875,578,1.384,579,1.169,580,1.67,581,1.904,582,1.107,583,2.722,584,1.307,585,1.384,586,1.107,587,1.307,588,1.384,589,1.107,590,1.107,591,1.384,592,1.107,593,1.169,594,1.384,595,1.107,596,1.384,597,1.107,598,1.384,599,1.107,600,1.384,601,1.107,602,1.384,603,1.107,604,1.169,605,1.307,606,0.89,607,1.875,608,1.384,609,0.89,610,1.384,611,0.89,612,1.384,613,0.89,614,0.94,615,1.384,653,2.991,654,4.816,655,4.816,656,4.816,657,3.501,658,4.816,659,3.501,660,3.501,661,3.501,662,3.501,663,3.501,664,3.501]],["title/injectables/GridsterRenderer.html",[143,1.268,251,2.466]],["body/injectables/GridsterRenderer.html",[2,0.156,3,0.138,4,0.138,6,0.274,8,0.88,13,1.834,14,0.546,15,0.022,18,0.423,19,1.632,20,1.086,23,1.822,24,1.086,25,0.12,26,1.227,65,2.793,68,2.582,75,0.789,76,0.935,80,1.736,118,1.661,141,0.011,142,0.011,143,1.641,146,1.1,151,3.249,154,0.734,155,1.964,156,1.114,158,1.312,159,1.242,161,1.615,171,0.341,172,1.779,173,0.138,174,1.309,175,1.401,176,1.507,191,3.216,194,2.793,208,1.63,223,1.392,251,2.663,263,3.249,276,1.96,279,1.96,405,5.078,416,3.313,418,3.313,421,4.41,423,3.313,452,3.981,458,3.981,528,5.284,530,5.284,564,3.313,665,2.213,666,3.878,667,3.878,668,5.162,669,3.878,670,2.59,671,2.59,672,3.878,673,2.59,674,6.185,675,3.878,676,2.59,677,2.59,678,3.878,679,2.59,680,6.623,681,2.59,682,4.649,683,6.951,684,2.59,685,2.213,686,2.59,687,4.649,688,3.878,689,3.313,690,2.59,691,2.59,692,2.59,693,5.162,694,5.162,695,2.59,696,2.59,697,4.649,698,2.59,699,2.59,700,6.324,701,6.185,702,6.185,703,6.185,704,5.802,705,5.138,706,6.015,707,6.015,708,6.015,709,5.162,710,2.59,711,2.59,712,5.162,713,2.59,714,2.59,715,2.59,716,2.59,717,2.59]],["title/interfaces/GridsterResizeEventType.html",[0,1.135,718,2.466]],["body/interfaces/GridsterResizeEventType.html",[0,1.974,2,0.315,3,0.279,4,0.279,6,0.555,7,1.13,14,0.73,15,0.021,16,2.105,25,0.243,129,3.734,130,3.071,131,3.734,132,3.734,141,0.018,142,0.018,718,4.287,719,4.479]],["title/injectables/GridsterSwap.html",[143,1.268,720,2.724]],["body/injectables/GridsterSwap.html",[2,0.197,3,0.174,4,0.174,6,0.347,7,0.833,8,0.784,13,1.455,14,0.642,15,0.022,18,0.436,19,1.99,21,2.781,22,1.552,23,2.035,24,1.374,25,0.152,75,1.173,76,1.255,141,0.013,142,0.013,143,1.877,146,1.304,151,3.628,154,0.929,156,1.305,158,1.17,159,1.107,161,1.69,171,0.432,173,0.174,175,2.876,176,2.677,191,3.839,194,3.434,276,2.325,279,2.325,327,3.662,411,2.063,503,2.651,720,3.489,721,2.8,722,5.764,723,4.601,724,5.764,725,5.764,726,5.764,727,5.764,728,4.601,729,4.601,730,4.601,731,3.278,732,3.278,733,3.278,734,3.278,735,3.278,736,3.278,737,3.278,738,3.278,739,3.278,740,4.601,741,3.278,742,6.598,743,3.278,744,3.278,745,3.278,746,5.764,747,5.764,748,4.601,749,4.601,750,3.278,751,4.601,752,3.278,753,3.278,754,3.278,755,3.278,756,3.278,757,3.278,758,5.764,759,4.601,760,3.278,761,4.601,762,4.601,763,5.316,764,4.601,765,5.316,766,4.601,767,5.316,768,4.601,769,5.316,770,3.278,771,3.278,772,3.278,773,3.278,774,3.278,775,3.278]],["title/injectables/GridsterUtils.html",[143,1.268,341,2.261]],["body/injectables/GridsterUtils.html",[2,0.185,3,0.164,4,0.164,6,0.326,7,0.931,8,1.083,13,2.091,14,0.718,15,0.022,16,1.75,17,2.641,18,0.362,23,2.243,24,1.293,25,0.143,68,1.373,75,0.897,76,1.074,118,1.381,126,2.782,130,2.827,141,0.013,142,0.013,143,1.815,146,1.25,156,1.22,158,1.615,159,1.529,161,1.92,171,0.406,173,0.164,188,3.027,191,2.992,194,1.559,276,2.227,279,2.227,283,4.254,327,1.795,341,2.774,402,4.393,406,3.765,411,3.237,419,3.035,776,2.636,777,7.2,778,4.408,779,4.408,780,4.408,781,4.408,782,4.408,783,4.408,784,4.408,785,4.408,786,5.934,787,5.61,788,3.085,789,4.408,790,3.085,791,4.408,792,3.085,793,4.408,794,3.085,795,4.408,796,5.142,797,3.085,798,4.408,799,5.61,800,3.085,801,3.085,802,4.408,803,5.61,804,3.085,805,4.408,806,3.085,807,5.61,808,3.085,809,3.085,810,2.636,811,4.408,812,3.085,813,3.085,814,5.142,815,2.636,816,4.408,817,2.636,818,3.085,819,3.085,820,3.085,821,3.085,822,4.408,823,3.085,824,3.085,825,3.085,826,3.085,827,3.085,828,3.085,829,3.085,830,3.085,831,5.61,832,5.61,833,4.408,834,4.408,835,3.085,836,3.085,837,3.085,838,3.085,839,4.408,840,3.085,841,3.085]],["title/directives/NgxGaugeAppend.html",[572,0.731,606,0.913]],["body/directives/NgxGaugeAppend.html",[2,0.306,3,0.27,4,0.27,15,0.021,18,0.417,25,0.317,141,0.018,142,0.018,171,0.67,173,0.363,444,1.607,447,2.21,572,1.445,580,1.877,606,1.673,607,2.21,609,1.558,611,1.558,613,1.558,614,1.365,842,2.958,843,3.2,844,4.209,845,4.691,846,3.491,847,3.2]],["title/classes/NgxGaugeError.html",[173,0.191,848,2.724]],["body/classes/NgxGaugeError.html",[2,0.324,3,0.286,4,0.286,8,0.919,14,0.57,15,0.021,25,0.25,118,1.811,120,3.692,141,0.018,142,0.018,154,1.528,156,1.035,158,1.37,159,1.297,173,0.337,842,3.692,848,4.812,849,4.603,850,5.421,851,6.345,852,5.388,853,5.421,854,5.388,855,5.388]],["title/directives/NgxGaugeLabel.html",[572,0.731,609,0.913]],["body/directives/NgxGaugeLabel.html",[2,0.306,3,0.27,4,0.27,15,0.021,18,0.417,25,0.317,141,0.018,142,0.018,171,0.67,173,0.363,444,1.607,447,2.21,572,1.445,580,1.877,606,1.558,607,2.21,609,1.673,611,1.558,613,1.558,614,1.365,842,2.958,843,3.2,844,3.491,845,4.691,846,3.491,847,3.858]],["title/modules/NgxGaugeModule.html",[635,1.135,856,2.261]],["body/modules/NgxGaugeModule.html",[2,0.265,3,0.235,4,0.235,15,0.021,18,0.551,25,0.301,141,0.016,142,0.016,171,0.582,173,0.235,569,1.252,572,0.898,579,2.426,606,1.847,609,1.847,611,1.847,613,1.847,635,1.776,637,2.091,638,3.594,639,2.569,640,2.569,644,3.268,645,2.569,646,2.569,648,3.535,649,2.569,650,3.268,856,4.672,857,3.772,858,3.772,859,3.772,860,4.415,861,4.415,862,5.616]],["title/directives/NgxGaugePrepend.html",[572,0.731,611,0.913]],["body/directives/NgxGaugePrepend.html",[2,0.306,3,0.27,4,0.27,15,0.021,18,0.417,25,0.317,141,0.018,142,0.018,171,0.67,173,0.363,444,1.607,447,2.21,572,1.445,580,1.877,606,1.558,607,2.21,609,1.558,611,1.673,613,1.558,614,1.365,842,2.958,843,3.2,844,3.491,845,4.691,846,4.209,847,3.2]],["title/directives/NgxGaugeValue.html",[572,0.731,613,0.913]],["body/directives/NgxGaugeValue.html",[2,0.306,3,0.27,4,0.27,15,0.021,18,0.417,25,0.317,141,0.018,142,0.018,171,0.67,173,0.363,444,1.607,447,2.21,572,1.445,580,1.877,606,1.558,607,2.21,609,1.558,611,1.558,613,1.673,614,1.646,842,2.958,843,3.2,844,3.491,845,4.691,846,3.491,847,3.2]],["title/interfaces/PushDirections.html",[0,1.135,93,1.815]],["body/interfaces/PushDirections.html",[0,1.904,1,2.671,2,0.173,3,0.222,4,0.153,5,1.553,6,0.304,7,0.758,9,1.67,10,1.67,11,1.67,12,1.807,13,2.285,14,0.658,15,0.022,16,2.105,18,0.405,19,2.24,20,1.203,21,2.457,22,1.36,23,2.036,24,1.203,25,0.31,26,2.57,27,2.671,28,2.671,29,2.671,30,2.671,31,2.671,32,2.671,33,2.742,34,2.873,35,2.434,36,3.043,37,2.57,38,2.671,39,2.671,40,2.264,41,2.264,42,3.108,43,1.807,44,1.807,45,1.807,46,1.36,47,1.67,48,1.67,49,1.67,50,1.67,51,1.67,52,1.67,53,1.67,54,1.67,55,1.67,56,1.67,57,1.67,58,1.67,59,1.451,60,1.451,61,1.451,62,1.451,63,1.451,64,1.451,65,1.553,66,1.67,67,1.67,68,2.567,69,1.67,70,1.67,71,1.67,72,1.553,73,1.553,74,1.67,75,1.004,76,1.263,77,1.807,78,1.807,79,1.807,80,2.55,81,3.79,82,1.807,83,1.807,84,1.807,85,1.807,86,2.495,87,2.274,88,1.67,89,1.67,90,1.67,91,1.67,92,1.67,93,2.742,94,1.67,95,1.67,96,1.67,97,1.67,98,1.67,99,1.67,100,1.67,101,1.67,102,1.807,103,3.503,104,4.135,105,1.807,106,1.807,107,1.807,108,1.67,109,1.67,110,1.67,111,1.807,112,1.807,113,1.807,114,1.807,115,1.807,116,1.807,117,1.67,118,1.326,119,1.807,120,2.434,121,1.67,122,1.67,123,1.67,124,1.67,125,1.67,126,1.553,127,0.618,128,1.67,129,1.553,130,1.278,131,1.553,132,1.553,133,1.67,134,1.67,135,1.67,136,1.67,137,3.157,138,3.157,139,3.157,140,3.157,141,0.012,142,0.012]],["title/interfaces/Resizable.html",[0,1.135,87,1.505]],["body/interfaces/Resizable.html",[0,1.915,1,2.959,2,0.176,3,0.225,4,0.155,5,1.58,6,0.309,7,0.767,8,0.722,9,1.699,10,1.699,11,1.699,12,1.838,13,2.289,14,0.641,15,0.022,16,2.089,18,0.409,19,2.245,20,1.224,21,2.471,22,1.383,23,2.05,24,1.224,25,0.311,26,2.591,27,2.698,28,2.698,29,2.698,30,2.698,31,2.698,32,2.698,33,2.764,34,2.901,35,2.465,36,3.061,37,2.591,38,2.698,39,2.698,40,2.292,41,2.292,42,3.139,43,1.838,44,1.838,45,1.838,46,1.383,47,1.699,48,1.699,49,1.699,50,1.699,51,1.699,52,1.699,53,1.699,54,1.699,55,1.699,56,1.699,57,1.699,58,1.699,59,1.476,60,1.476,61,1.476,62,1.476,63,1.476,64,1.476,65,1.58,66,1.699,67,1.699,68,2.585,69,1.699,70,1.699,71,1.699,72,1.58,73,1.58,74,1.699,75,1.014,76,1.267,77,1.838,78,1.838,79,1.838,80,2.558,81,3.813,82,1.838,83,1.838,84,1.838,85,1.838,86,2.52,87,2.434,88,1.699,89,1.699,90,1.699,91,1.699,92,1.699,93,2.52,94,1.699,95,1.699,96,1.699,97,1.699,98,1.699,99,1.699,100,1.699,101,1.699,102,1.838,103,3.524,104,4.16,105,1.838,106,1.838,107,1.838,108,1.699,109,1.699,110,1.699,111,1.838,112,1.838,113,1.838,114,1.838,115,1.838,116,1.838,117,1.699,118,1.339,119,1.838,120,2.901,121,1.699,122,1.699,123,1.699,124,1.699,125,1.699,126,1.58,127,0.629,128,3.182,129,1.58,130,1.3,131,1.58,132,1.58,133,1.699,134,1.699,135,1.699,136,1.699,137,1.699,138,1.699,139,1.699,140,1.699,141,0.012,142,0.012,283,3.213]],["title/components/WCDashboardHeaderComponent.html",[435,0.65,582,1.135]],["body/components/WCDashboardHeaderComponent.html",[2,0.212,3,0.188,4,0.188,6,0.374,7,0.878,8,0.827,14,0.682,15,0.021,18,0.29,25,0.164,75,0.986,76,1.002,118,1.599,127,1.282,141,0.014,142,0.014,146,1.375,154,1.569,156,1.325,158,1.233,159,1.502,161,1.675,171,0.466,173,0.316,223,1.058,435,1.13,436,1.058,437,1.32,438,1.398,439,1.398,441,1.917,442,2.319,444,1.118,447,2.303,450,2.032,464,2.496,467,2.467,470,1.118,503,2.548,569,1.002,570,1.917,571,1.81,572,0.986,573,2.354,574,1.398,575,1.398,576,1.398,577,1.118,578,1.398,579,1.181,580,1.675,581,1.917,582,1.883,583,2.812,584,2.33,585,1.398,586,1.118,587,1.32,588,1.398,589,1.118,590,1.118,591,1.398,592,1.118,593,1.181,594,1.398,595,1.118,596,1.398,597,1.118,598,1.398,599,1.118,600,1.398,601,1.118,602,1.398,603,1.118,604,1.181,605,1.32,606,0.899,607,1.883,608,1.398,609,0.899,610,1.398,611,0.899,612,1.398,613,0.899,614,1.731,615,1.398,863,3.02,864,4.849,865,4.849,866,3.8,867,3.483,868,3.63,869,4.849,870,4.849,871,4.849,872,3.535,873,1.482,874,3.535,875,1.573,876,2.225,877,3.535,878,2.225,879,2.428,880,3.535,881,2.428,882,1.674,883,2.225,884,2.428,885,3.02,886,3.052,887,2.032,888,3.02,889,3.02,890,3.33,891,3.02]],["title/components/WCDataCounterComponent.html",[435,0.65,586,1.135]],["body/components/WCDataCounterComponent.html",[2,0.184,3,0.163,4,0.163,6,0.324,7,0.795,8,0.954,14,0.725,15,0.022,18,0.252,25,0.142,75,0.893,76,1.072,118,1.881,127,1.205,141,0.013,142,0.013,146,1.244,154,1.453,156,1.366,158,1.422,159,1.526,161,1.773,171,0.404,173,0.297,223,0.918,435,1.072,436,0.918,437,1.145,438,1.212,439,1.212,441,1.735,442,2.148,444,0.969,447,2.267,450,1.839,464,2.345,467,2.507,470,0.969,503,2.708,569,0.869,570,1.735,571,1.639,572,0.893,573,2.212,574,1.212,575,1.212,576,1.212,577,0.969,578,1.212,579,1.024,580,1.59,581,1.735,582,0.969,583,2.752,584,1.145,585,1.212,586,1.769,587,2.21,588,1.212,589,0.969,590,0.969,591,1.212,592,0.969,593,1.024,594,1.212,595,0.969,596,1.212,597,0.969,598,1.212,599,0.969,600,1.212,601,0.969,602,1.212,603,0.969,604,1.024,605,1.145,606,0.78,607,1.769,608,1.212,609,0.78,610,1.212,611,0.78,612,1.212,613,0.78,614,1.892,615,1.212,866,3.519,867,3.226,868,3.444,873,1.839,875,1.365,876,1.93,878,1.93,879,2.106,881,2.106,882,1.452,883,1.93,884,2.106,886,2.762,887,2.345,890,3.013,892,2.62,893,4.388,894,4.388,895,4.378,896,3.887,897,4.378,898,4.388,899,4.388,900,4.388,901,4.388,902,4.388,903,3.066,904,3.066,905,3.013,906,3.066,907,3.066,908,3.066,909,3.066,910,2.325,911,3.066,912,2.325,913,2.62,914,3.066,915,2.62,916,2.62,917,2.62,918,2.325,919,2.325,920,2.62,921,2.62,922,2.62,923,3.328,924,2.62,925,2.62,926,3.749,927,2.62]],["title/components/WCGaugeComponent.html",[435,0.65,589,1.135]],["body/components/WCGaugeComponent.html",[2,0.181,3,0.16,4,0.16,6,0.318,7,0.784,8,0.945,14,0.722,15,0.022,18,0.247,25,0.139,75,0.88,76,1.064,118,1.876,127,1.194,141,0.012,142,0.012,146,1.227,154,1.438,156,1.363,158,1.41,159,1.517,161,1.765,171,0.396,173,0.295,223,0.9,435,1.064,436,0.9,437,1.123,438,1.189,439,1.189,441,1.711,442,2.125,444,0.951,447,2.262,450,1.814,464,2.324,467,2.493,470,0.951,503,2.698,569,0.853,570,1.711,571,1.616,572,0.88,573,2.192,574,1.189,575,1.189,576,1.189,577,0.951,578,1.189,579,1.005,580,1.578,581,1.711,582,0.951,583,2.743,584,1.123,585,1.189,586,0.951,587,1.123,588,1.189,589,1.753,590,0.951,591,1.189,592,0.951,593,1.005,594,1.189,595,0.951,596,1.189,597,0.951,598,1.189,599,0.951,600,1.189,601,0.951,602,1.189,603,0.951,604,1.005,605,1.123,606,0.765,607,1.935,608,1.189,609,0.765,610,1.189,611,0.765,612,1.189,613,0.765,614,1.887,615,1.189,866,3.481,867,3.191,868,3.419,873,1.814,875,1.339,876,1.893,878,1.893,879,2.065,881,2.065,882,1.424,883,1.893,884,2.065,886,2.724,887,2.324,890,2.972,895,4.331,896,3.845,897,4.331,905,2.972,910,2.281,912,2.281,913,2.57,915,2.57,916,2.57,917,2.57,918,2.281,919,2.281,920,2.57,921,2.57,922,2.57,923,3.282,924,2.57,925,2.57,926,3.698,927,2.57,928,6.089,929,2.57,930,4.328,931,4.328,932,4.328,933,4.328,934,4.328,935,4.328,936,3.008,937,3.008,938,3.008,939,3.008,940,3.008,941,3.008,942,3.008,943,3.008]],["title/components/WCGridButtonEditorComponent.html",[435,0.65,590,1.135]],["body/components/WCGridButtonEditorComponent.html",[2,0.148,3,0.131,4,0.131,6,0.26,7,0.675,8,0.97,13,2.135,14,0.738,15,0.022,18,0.202,25,0.114,75,0.759,76,1.129,103,2.17,118,1.707,127,1.311,141,0.011,142,0.011,146,1.057,154,1.277,156,1.386,158,1.446,159,1.5,161,1.827,171,0.324,173,0.131,201,2.836,223,0.736,435,1.07,436,0.736,437,0.918,438,0.972,439,0.972,441,1.474,442,1.888,444,0.777,447,2.204,450,1.563,464,2.107,467,2.464,470,0.777,503,2.726,508,2.561,569,0.697,570,1.474,571,1.392,572,0.759,573,1.988,574,0.972,575,0.972,576,0.972,577,0.777,578,0.972,579,0.821,580,1.451,581,1.474,582,0.777,583,2.646,584,0.918,585,0.972,586,0.777,587,0.918,588,0.972,589,0.777,590,1.59,591,0.972,592,0.777,593,0.821,594,0.972,595,0.777,596,0.972,597,0.777,598,0.972,599,0.777,600,0.972,601,0.777,602,0.972,603,0.777,604,0.821,605,0.918,606,0.625,607,1.59,608,0.972,609,0.625,610,0.972,611,0.625,612,0.972,613,0.625,614,1.88,615,0.972,873,1.03,875,1.094,882,1.164,887,2.384,896,3.416,910,1.865,912,1.865,923,2.828,944,6.178,945,2.101,946,3.729,947,3.729,948,3.729,949,3.848,950,4.505,951,4.505,952,4.505,953,4.505,954,5.028,955,5.028,956,4.505,957,4.505,958,4.505,959,4.505,960,5.404,961,3.729,962,3.729,963,3.729,964,3.729,965,3.729,966,3.729,967,3.729,968,3.729,969,3.729,970,5.404,971,2.459,972,2.459,973,2.459,974,2.459,975,2.459,976,2.459,977,2.459,978,2.459,979,2.459,980,2.459,981,2.459,982,2.459,983,2.459,984,2.459,985,2.459,986,2.459,987,2.459,988,2.459,989,2.459,990,2.101,991,2.459,992,2.101,993,2.459,994,2.459,995,2.459,996,2.459,997,2.459,998,2.459,999,2.459,1000,2.459,1001,2.459,1002,2.459,1003,2.101,1004,2.459,1005,2.459,1006,2.459,1007,2.459,1008,2.459,1009,3.729,1010,2.459,1011,2.459,1012,4.505,1013,2.459,1014,2.459,1015,4.505,1016,2.459,1017,2.101,1018,3.186,1019,2.101,1020,2.459,1021,2.101,1022,2.459,1023,3.729,1024,2.459,1025,2.459,1026,2.459,1027,3.093,1028,2.459,1029,2.459,1030,2.459,1031,2.459,1032,3.729]],["title/components/WCGridCellCommandComponent.html",[435,0.65,592,1.135]],["body/components/WCGridCellCommandComponent.html",[2,0.189,3,0.167,4,0.167,6,0.333,7,0.809,8,0.886,14,0.676,15,0.021,18,0.366,25,0.146,75,0.909,76,0.941,118,1.808,127,1.543,141,0.013,142,0.013,146,1.266,154,0.891,156,1.293,158,1.321,159,1.494,161,1.605,171,0.588,173,0.167,174,1.588,175,2.416,223,2.117,232,3.561,435,1.082,436,0.941,437,1.174,438,1.242,439,1.242,441,1.766,442,2.177,444,0.994,447,2.274,450,1.872,464,2.371,467,2.363,470,0.994,503,2.455,569,0.891,570,1.766,571,1.668,572,0.909,573,2.237,574,1.242,575,1.242,576,1.242,577,0.994,578,1.242,579,1.05,580,1.605,581,1.766,582,0.994,583,2.763,584,1.174,585,1.242,586,0.994,587,1.174,588,1.242,589,0.994,590,0.994,591,1.242,592,1.789,593,2.362,594,1.242,595,0.994,596,1.242,597,0.994,598,1.242,599,0.994,600,1.242,601,0.994,602,1.242,603,0.994,604,1.05,605,1.174,606,0.799,607,1.789,608,1.242,609,0.799,610,1.242,611,0.799,612,1.242,613,0.799,614,1.667,615,1.242,873,1.317,875,1.399,882,1.488,887,1.872,1033,5.821,1034,4.679,1035,2.685,1036,3.387,1037,4.466,1038,5.195,1039,4.438,1040,5.976,1041,4.438,1042,2.158,1043,4.466,1044,3.067,1045,4.466,1046,4.466,1047,3.143,1048,3.143,1049,3.143,1050,3.143,1051,3.143,1052,2.685,1053,3.143,1054,2.685,1055,3.143,1056,2.685,1057,3.143,1058,4.466,1059,3.067,1060,3.143,1061,2.685,1062,3.816,1063,2.685]],["title/components/WCGridCellComponent.html",[435,0.65,595,1.135]],["body/components/WCGridCellComponent.html",[2,0.163,3,0.144,4,0.144,6,0.287,7,0.727,8,0.961,13,2.059,14,0.699,15,0.022,16,0.769,18,0.462,25,0.126,75,0.817,76,1.02,118,0.728,127,1.568,141,0.012,142,0.012,146,1.138,154,0.769,156,1.356,158,1.433,159,1.509,161,1.814,171,0.529,173,0.144,174,1.371,201,3.008,223,1.202,224,2.585,232,3.324,435,1.02,436,0.812,437,1.013,438,1.073,439,1.073,441,1.587,442,2.003,444,0.858,447,2.233,450,1.682,464,2.213,467,2.414,470,0.858,503,2.644,569,0.769,570,1.587,571,1.499,572,0.817,573,2.088,574,1.073,575,1.073,576,1.073,577,0.858,578,1.073,579,0.906,580,1.513,581,1.587,582,0.858,583,2.695,584,1.013,585,1.073,586,0.858,587,2.432,588,1.073,589,0.858,590,0.858,591,1.073,592,1.269,593,1.882,594,1.073,595,1.67,596,1.073,597,0.858,598,1.073,599,0.858,600,1.073,601,0.858,602,1.073,603,0.858,604,0.906,605,1.013,606,0.69,607,1.67,608,1.073,609,0.69,610,1.073,611,0.69,612,1.073,613,0.69,614,1.513,615,1.073,875,1.207,882,1.285,887,2.473,949,4.082,990,2.318,992,2.318,1003,2.318,1017,2.318,1018,4.082,1019,2.318,1021,3.429,1027,2.757,1034,1.863,1042,1.863,1044,2.757,1059,1.863,1064,6.059,1065,2.318,1066,4.014,1067,3.624,1068,3.624,1069,4.082,1070,4.778,1071,4.778,1072,4.631,1073,4.014,1074,4.014,1075,4.014,1076,4.014,1077,4.014,1078,2.713,1079,2.713,1080,2.713,1081,3.548,1082,2.713,1083,2.713,1084,2.713,1085,2.057,1086,2.713,1087,2.057,1088,2.057,1089,2.713,1090,2.057,1091,2.318,1092,2.713,1093,2.318,1094,2.713,1095,2.057,1096,2.318,1097,2.713,1098,2.713,1099,2.318,1100,2.713,1101,3.044,1102,2.713,1103,1.863,1104,3.044,1105,2.057,1106,2.713,1107,3.044,1108,2.713,1109,2.057,1110,1.468,1111,2.713,1112,2.713,1113,2.318,1114,4.082,1115,2.318,1116,2.713,1117,2.713]],["title/classes/WCGridColumnDef.html",[173,0.191,1081,2.261]],["body/classes/WCGridColumnDef.html",[2,0.302,3,0.267,4,0.267,6,0.533,7,1.103,8,1.208,14,0.759,15,0.021,16,1.727,25,0.282,42,3.168,118,1.828,141,0.017,142,0.017,156,1.307,159,1.577,173,0.324,419,2.723,847,4.124,873,2.109,1036,3.817,1081,3.835,1095,4.968,1118,3.817,1119,6.551,1120,5.033,1121,5.033,1122,5.033,1123,5.033,1124,4.3,1125,5.033,1126,5.033,1127,5.033,1128,5.033]],["title/components/WCGridComponent.html",[435,0.65,597,1.135]],["body/components/WCGridComponent.html",[2,0.188,3,0.167,4,0.167,6,0.332,7,0.807,8,1.018,14,0.632,15,0.022,18,0.464,25,0.145,75,0.907,76,0.939,127,1.405,141,0.013,142,0.013,146,1.264,154,0.889,156,1.321,158,1.518,159,1.57,161,1.752,171,0.587,173,0.167,174,1.584,223,0.939,232,3.557,248,3.88,413,1.973,435,1.081,436,0.939,437,1.171,438,1.239,439,1.239,441,1.763,442,2.174,444,0.991,447,2.273,450,1.869,464,2.368,467,2.36,470,0.991,503,2.453,569,0.889,570,1.763,571,1.665,572,0.907,573,2.36,574,1.239,575,1.239,576,1.239,577,0.991,578,1.239,579,1.047,580,1.603,581,1.763,582,0.991,583,2.762,584,1.171,585,1.239,586,0.991,587,2.513,588,1.239,589,0.991,590,0.991,591,1.239,592,0.991,593,1.047,594,1.239,595,0.991,596,1.239,597,1.787,598,1.239,599,1.41,600,1.239,601,0.991,602,1.239,603,0.991,604,1.047,605,1.171,606,0.797,607,1.787,608,1.239,609,0.797,610,1.239,611,0.797,612,1.239,613,0.797,614,0.842,615,1.239,875,1.395,882,1.485,887,2.368,1027,3.061,1042,2.153,1044,3.061,1059,2.153,1067,3.935,1068,3.935,1072,4.84,1085,2.377,1087,2.377,1088,2.377,1090,2.377,1101,3.381,1103,2.153,1104,3.381,1105,2.377,1107,3.381,1109,2.377,1110,1.696,1129,5.925,1130,2.678,1131,4.458,1132,4.458,1133,4.458,1134,4.458,1135,4.458,1136,4.458,1137,3.135,1138,3.135,1139,3.135,1140,3.135,1141,3.135,1142,3.557,1143,3.135,1144,3.135,1145,3.135,1146,3.135,1147,2.678,1148,2.678,1149,2.678,1150,2.678,1151,2.678,1152,2.678,1153,2.678,1154,3.135,1155,3.135,1156,3.135,1157,3.135,1158,3.135,1159,4.458]],["title/classes/WCGridConfiguration.html",[173,0.191,1142,2.261]],["body/classes/WCGridConfiguration.html",[2,0.329,3,0.291,4,0.291,6,0.58,7,1.16,14,0.58,15,0.021,18,0.45,25,0.254,141,0.018,142,0.018,156,1.053,173,0.341,201,4.276,248,4.401,1081,4.035,1142,4.035,1160,4.684,1161,5.482,1162,5.482]],["title/components/WCGridRowComponent.html",[435,0.65,599,1.135]],["body/components/WCGridRowComponent.html",[2,0.183,3,0.162,4,0.162,6,0.322,7,0.79,8,0.951,13,1.866,14,0.65,15,0.021,18,0.457,25,0.141,75,0.888,76,1.01,127,1.565,141,0.013,142,0.013,146,1.238,154,0.863,156,1.335,158,1.418,159,1.523,161,1.699,171,0.575,173,0.162,174,1.538,223,0.911,224,3.194,232,3.51,248,2.998,435,1.069,436,0.911,437,1.137,438,1.203,439,1.203,441,1.726,442,2.139,444,0.962,447,2.265,450,1.83,464,2.337,467,2.429,470,0.962,503,2.606,569,0.863,570,1.726,571,1.63,572,0.888,573,2.204,574,1.203,575,1.203,576,1.203,577,0.962,578,1.203,579,1.017,580,1.585,581,1.726,582,0.962,583,2.749,584,1.137,585,1.203,586,0.962,587,2.417,588,1.203,589,0.962,590,0.962,591,1.203,592,0.962,593,1.017,594,1.203,595,1.38,596,1.203,597,0.962,598,1.203,599,1.763,600,1.203,601,0.962,602,1.203,603,0.962,604,1.017,605,1.137,606,0.774,607,1.763,608,1.203,609,0.774,610,1.203,611,0.774,612,1.203,613,0.774,614,1.371,615,1.203,875,1.355,882,1.442,887,2.474,1027,2.998,1042,2.09,1044,2.998,1059,2.09,1067,3.871,1068,3.871,1069,4.361,1072,4.799,1085,2.309,1087,2.309,1088,2.309,1090,2.309,1091,2.601,1093,2.601,1099,2.601,1101,3.311,1103,2.09,1104,3.311,1105,2.309,1107,3.311,1109,2.309,1110,1.647,1113,2.601,1114,3.73,1115,2.601,1142,3.51,1148,2.601,1149,2.601,1150,2.601,1151,2.601,1152,2.601,1153,2.601,1163,5.979,1164,2.601,1165,4.365,1166,4.365,1167,4.365,1168,4.365,1169,4.365,1170,3.044,1171,3.044,1172,3.044,1173,3.044,1174,3.044,1175,3.044,1176,3.044,1177,2.601]],["title/components/WCPanelComponent.html",[435,0.65,601,1.135]],["body/components/WCPanelComponent.html",[2,0.213,3,0.189,4,0.189,6,0.376,7,0.88,8,0.829,14,0.683,15,0.021,18,0.291,25,0.165,75,0.989,76,1.004,118,1.602,127,1.284,141,0.014,142,0.014,146,1.379,154,1.573,156,1.326,158,1.236,159,1.504,161,1.678,171,0.468,173,0.317,223,1.063,435,1.131,436,1.063,437,1.326,438,1.404,439,1.404,441,1.922,442,2.325,444,1.123,447,2.304,448,3.688,450,2.038,464,2.5,467,2.47,470,1.123,503,2.551,569,1.007,570,1.922,571,1.816,572,0.989,573,2.358,574,1.404,575,1.404,576,1.404,577,1.123,578,1.404,579,1.186,580,1.678,581,1.922,582,1.123,583,2.842,584,1.326,585,1.404,586,1.123,587,1.326,588,1.404,589,1.123,590,1.123,591,1.404,592,1.123,593,1.186,594,1.404,595,1.123,596,1.404,597,1.123,598,1.404,599,1.123,600,1.404,601,1.886,602,1.404,603,1.123,604,1.186,605,1.326,606,0.903,607,1.886,608,1.404,609,0.903,610,1.404,611,0.903,612,1.404,613,0.903,614,1.678,615,1.404,866,3.809,867,3.491,868,3.636,875,1.58,876,2.235,878,2.235,879,2.438,881,2.438,883,2.235,884,2.438,885,3.033,886,3.061,887,2.038,888,3.033,889,3.033,890,3.339,891,3.033,1178,3.033,1179,4.863,1180,4.863,1181,4.863,1182,4.863,1183,4.863,1184,4.863,1185,3.55,1186,3.55,1187,3.55,1188,3.55]],["title/components/WCSwitchButton.html",[435,0.65,603,1.135]],["body/components/WCSwitchButton.html",[2,0.19,3,0.168,4,0.168,6,0.335,7,0.812,8,0.889,14,0.704,15,0.021,16,1.698,18,0.259,25,0.147,75,0.913,76,1.027,118,1.811,127,1.222,141,0.013,142,0.013,146,1.272,154,1.478,156,1.343,158,1.326,159,1.498,161,1.718,171,0.417,173,0.168,188,2.172,223,0.947,435,1.085,436,0.947,437,1.181,438,1.25,439,1.25,441,1.774,442,2.185,444,1,447,2.275,450,1.88,464,2.378,467,2.46,470,1,503,2.629,569,0.897,570,1.774,571,1.675,572,0.913,573,2.243,574,1.25,575,1.25,576,1.25,577,1,578,1.25,579,1.056,580,1.609,581,1.774,582,1,583,2.766,584,1.181,585,1.25,586,1,587,1.181,588,1.25,589,1,590,1,591,1.25,592,1,593,1.056,594,1.25,595,1,596,1.25,597,1,598,1.25,599,1,600,1.25,601,1,602,1.25,603,1.794,604,2.404,605,1.947,606,0.804,607,1.794,608,1.25,609,0.804,610,1.25,611,0.804,612,1.25,613,0.804,614,1.756,615,1.25,867,3.282,868,3.485,873,1.325,875,1.408,876,1.991,878,1.991,882,1.498,883,1.991,886,2.824,887,2.185,918,2.398,919,2.398,1039,4.454,1041,4.454,1052,2.702,1054,2.702,1056,2.702,1061,2.702,1062,3.832,1063,2.702,1189,6.014,1190,2.702,1191,4.486,1192,5.213,1193,5.213,1194,4.486,1195,4.486,1196,4.486,1197,4.486,1198,3.163,1199,3.163,1200,3.163,1201,3.163,1202,3.163,1203,3.163,1204,3.163,1205,3.163,1206,3.163,1207,3.163,1208,4.486,1209,3.163]],["title/injectables/WCToasterService.html",[143,1.268,1210,2.724]],["body/injectables/WCToasterService.html",[2,0.33,3,0.186,4,0.186,6,0.369,8,1.247,14,0.657,15,0.022,18,0.394,25,0.162,76,1.125,118,1.926,141,0.014,142,0.014,143,1.941,146,1.363,154,0.99,156,1.233,158,1.579,159,1.495,161,1.668,171,0.46,173,0.186,174,1.764,326,4.067,456,5.414,580,0.938,850,4.107,853,5.81,868,4.19,905,3.301,1210,3.646,1211,2.983,1212,5.498,1213,4.807,1214,3.491,1215,5.06,1216,3.491,1217,5.352,1218,3.491,1219,3.491,1220,3.491,1221,5.923,1222,5.879,1223,6.8,1224,3.491,1225,3.491,1226,3.491,1227,3.491,1228,3.491,1229,3.491,1230,3.491,1231,3.491,1232,3.491,1233,3.491,1234,7.139,1235,3.491,1236,5.923,1237,5.923,1238,3.491,1239,3.491,1240,3.491,1241,3.491,1242,3.491,1243,3.491,1244,3.491,1245,3.491,1246,3.491]],["title/modules/WebConsoleUIKitDataModule.html",[635,1.135,1247,2.466]],["body/modules/WebConsoleUIKitDataModule.html",[2,0.277,3,0.245,4,0.245,15,0.022,18,0.569,25,0.306,141,0.017,142,0.017,171,0.607,173,0.245,569,1.307,586,2.309,589,2.309,635,1.825,637,2.183,638,3.665,639,2.682,640,3.358,644,3.358,645,2.682,646,2.682,648,3.632,649,2.682,650,3.358,856,4.43,1110,2.494,1247,4.992,1248,3.938,1249,3.938,1250,3.938,1251,3.165,1252,2.494,1253,3.496,1254,4.609,1255,4.609,1256,4.609,1257,4.609,1258,4.609,1259,4.609]],["title/modules/WebConsoleUIKitGridModule.html",[635,1.135,1260,2.466]],["body/modules/WebConsoleUIKitGridModule.html",[2,0.262,3,0.232,4,0.232,15,0.022,18,0.57,25,0.3,127,1.322,141,0.016,142,0.016,171,0.575,173,0.232,223,1.306,569,1.237,592,2.292,593,1.457,595,2.292,597,2.292,599,2.292,635,1.762,637,2.066,638,3.573,639,2.538,640,2.538,644,3.242,645,2.538,646,2.538,648,3.508,649,2.538,650,3.242,1034,2.995,1096,3.726,1110,2.36,1147,3.726,1177,3.726,1251,2.995,1252,2.36,1253,3.308,1260,5.055,1261,3.726,1262,3.726,1263,3.726,1264,4.362,1265,4.362,1266,4.362,1267,4.362,1268,4.362,1269,4.362]],["title/modules/WebConsoleUIKitModule.html",[635,1.135,1270,2.466]],["body/modules/WebConsoleUIKitModule.html",[2,0.259,3,0.229,4,0.229,15,0.022,18,0.576,25,0.299,141,0.016,142,0.016,171,0.569,173,0.229,569,1.224,580,1.159,582,2.289,590,2.289,601,2.289,603,2.289,604,1.442,635,1.75,637,2.045,638,3.556,639,2.512,640,3.221,644,3.221,645,2.512,646,2.512,648,3.485,649,2.512,650,3.221,1110,2.336,1215,4.73,1217,3.274,1251,2.965,1252,2.336,1270,5.049,1271,3.688,1272,3.688,1273,3.688,1274,4.317,1275,4.317,1276,4.317,1277,4.317,1278,4.317,1279,4.317,1280,4.317,1281,4.317,1282,4.317]],["title/modules/WebConsoleUIKitModuleKendoProvider.html",[635,1.135,1283,2.724]],["body/modules/WebConsoleUIKitModuleKendoProvider.html",[2,0.307,3,0.272,4,0.272,15,0.021,18,0.583,25,0.285,127,1.101,141,0.018,142,0.018,171,0.674,173,0.272,635,1.617,650,3.579,1110,2.767,1251,3.512,1252,2.767,1253,3.879,1283,4.665,1284,5.115,1285,5.115,1286,6.597,1287,5.636,1288,5.003,1289,4.37,1290,6.597,1291,5.115,1292,5.115,1293,6.597,1294,6.597,1295,4.37]],["title/coverage.html",[1296,4.187]],["body/coverage.html",[0,2.132,1,2.24,4,0.15,5,3.102,14,0.299,15,0.022,17,3.079,19,0.894,21,1.118,23,0.999,46,1.96,72,1.53,73,1.53,86,2.092,87,1.735,93,2.092,127,1.054,141,0.012,142,0.012,143,2.322,144,1.942,145,2.417,173,0.305,194,3.807,195,2.417,223,0.847,244,1.942,251,1.942,281,4.898,284,2.417,341,1.781,430,2.417,435,1.243,436,0.847,440,2.417,470,0.894,486,2.145,494,2.145,508,1.942,572,1.096,577,0.894,579,0.945,582,0.894,586,0.894,589,0.894,590,0.894,592,0.894,593,0.945,595,0.894,597,0.894,599,0.894,601,0.894,603,0.894,604,0.945,606,0.719,609,0.719,611,0.719,613,0.719,616,2.417,653,2.417,665,2.417,718,1.942,719,2.417,720,2.145,721,2.417,776,2.417,842,3.336,843,3.392,848,2.145,849,2.417,863,2.417,873,1.186,892,2.417,928,2.417,929,2.417,944,2.417,945,2.417,1033,2.417,1034,1.942,1035,2.417,1064,2.417,1065,2.417,1081,1.781,1118,2.145,1129,2.417,1130,2.417,1142,1.781,1160,2.417,1163,2.417,1164,2.417,1178,2.417,1189,2.417,1190,2.417,1210,2.145,1211,2.417,1296,2.417,1297,2.829,1298,2.829,1299,2.829,1300,5.99,1301,5.388,1302,2.829,1303,2.829,1304,2.829,1305,2.417,1306,5.114,1307,2.417,1308,7.307,1309,5.734,1310,4.14,1311,2.829,1312,5.388,1313,2.829,1314,2.829,1315,2.829,1316,2.829,1317,2.829,1318,4.14,1319,2.829,1320,4.14,1321,2.829,1322,2.829,1323,2.829,1324,2.829,1325,2.829,1326,2.829,1327,2.829,1328,5.385,1329,3.536,1330,2.417,1331,2.417,1332,2.417,1333,2.417,1334,2.417,1335,2.145,1336,2.417,1337,2.417,1338,2.417,1339,2.417,1340,2.417,1341,2.417,1342,2.417,1343,2.417,1344,2.417,1345,2.417,1346,4.896,1347,2.829,1348,4.898,1349,2.417,1350,2.417,1351,2.417,1352,2.417,1353,2.417,1354,3.139,1355,2.829,1356,2.829,1357,2.829,1358,2.829]],["title/dependencies.html",[637,2.046,1359,2.999]],["body/dependencies.html",[15,0.022,25,0.22,127,1.022,141,0.017,142,0.017,171,0.626,419,2.569,467,1.877,580,1.275,587,1.773,605,1.773,637,2.784,649,2.763,685,5.7,873,1.99,1217,3.601,1252,2.569,1287,6.288,1288,5.506,1289,4.057,1295,4.057,1360,4.748,1361,4.748,1362,6.385,1363,4.057,1364,4.748,1365,4.748,1366,6.385,1367,4.748,1368,4.748,1369,4.748,1370,4.748,1371,4.748,1372,4.748,1373,4.748,1374,4.748,1375,4.748,1376,4.748,1377,4.748,1378,6.987,1379,5.878,1380,4.057,1381,4.748,1382,4.748,1383,5.878,1384,4.748]],["title/miscellaneous/enumerations.html",[1385,1.516,1386,3.69]],["body/miscellaneous/enumerations.html",[5,2.756,6,0.539,15,0.018,26,2.906,27,3.32,28,3.32,29,3.32,30,3.32,31,3.32,32,3.32,33,3.101,34,3.57,35,2.964,36,3.454,37,2.906,38,3.32,39,3.32,40,2.756,41,2.756,43,3.207,44,3.207,45,3.207,141,0.018,142,0.018,419,2.756,614,2.003,873,2.135,1036,3.863,1095,4.654,1118,3.863,1124,4.352,1385,2.574,1386,4.352,1387,5.626,1388,5.094]],["title/miscellaneous/functions.html",[17,1.922,1385,1.516]],["body/miscellaneous/functions.html",[6,0.448,8,1.193,14,0.701,15,0.02,16,1.551,17,1.886,75,0.862,87,2.293,130,2.434,141,0.016,142,0.016,158,1.779,159,1.684,326,3.756,327,4.293,452,3.443,454,4.148,457,3.756,458,3.443,614,1.779,1328,3.213,1329,5.798,1330,5.175,1331,5.175,1332,5.175,1333,5.175,1334,5.175,1335,4.148,1336,4.673,1337,4.673,1348,3.62,1349,4.673,1350,4.673,1351,4.673,1352,4.673,1353,4.673,1385,2.141,1389,6.091,1390,6.627,1391,4.237,1392,6.786,1393,6.786,1394,5.47,1395,4.237,1396,5.47,1397,4.237,1398,4.237,1399,4.673,1400,4.673,1401,4.237,1402,4.237,1403,5.47,1404,4.237,1405,4.237]],["title/index.html",[6,0.317,11,1.745,1406,2.999]],["body/index.html",[15,0.019,141,0.019,142,0.019,190,3.945,437,2.145,635,1.816,1252,3.108,1288,4.357,1380,4.908,1407,5.745,1408,4.908]],["title/modules.html",[635,1.55]],["body/modules.html",[15,0.018,141,0.018,142,0.018,635,1.73,636,3.756,856,3.443,1247,3.756,1260,3.756,1270,3.756,1283,4.148,1409,7.129,1410,7.129,1411,7.129,1412,7.221,1413,5.47,1414,4.673]],["title/overview.html",[1415,4.187]],["body/overview.html",[0,1.145,15,0.021,25,0.168,141,0.014,142,0.014,143,1.279,173,0.192,435,0.656,436,1.989,470,2.1,569,1.027,572,0.737,577,1.772,579,2.218,582,2.1,586,2.1,589,2.1,590,2.1,592,2.1,595,2.1,597,2.1,599,2.1,601,2.1,603,2.1,606,1.689,609,1.689,611,1.689,613,1.689,635,1.559,636,4.76,637,1.715,638,2.107,639,2.107,640,2.107,641,3.094,642,3.094,643,3.094,644,2.868,645,2.107,646,2.107,856,4.608,857,3.094,858,3.094,859,3.094,1247,4.707,1248,3.094,1249,3.094,1250,3.094,1260,4.902,1261,3.094,1262,3.094,1263,3.094,1270,4.902,1271,3.094,1272,3.094,1273,3.094,1408,3.094,1415,3.094,1416,3.622,1417,3.094,1418,3.094,1419,3.622,1420,3.622]],["title/miscellaneous/typealiases.html",[1385,1.516,1421,4.319]],["body/miscellaneous/typealiases.html",[5,2.784,6,0.545,14,0.545,15,0.021,26,3.132,27,2.784,28,2.784,29,2.784,30,2.784,31,2.784,32,2.784,33,3.342,34,2.994,35,2.994,36,3.12,37,3.132,38,2.784,39,2.784,40,2.784,41,2.784,141,0.018,142,0.018,1354,3.903,1385,2.6,1387,5.651,1422,5.146,1423,6.614,1424,5.274,1425,6.614,1426,5.146,1427,4.396,1428,5.146,1429,4.396,1430,5.146]],["title/miscellaneous/variables.html",[1306,3.276,1385,1.516]],["body/miscellaneous/variables.html",[3,0.102,6,0.203,8,0.328,9,1.791,10,3.138,11,3.26,12,3.03,13,2.089,14,0.663,15,0.022,16,0.873,19,1.705,26,2.28,27,2.778,28,1.04,29,1.04,30,2.918,31,1.04,32,1.04,33,0.971,36,0.971,37,0.91,38,1.04,39,1.04,40,1.04,41,1.04,46,1.457,47,2.239,48,2.239,49,1.118,50,1.118,51,1.118,52,1.118,53,1.118,54,1.118,55,1.118,56,1.118,57,1.791,58,1.791,59,0.971,60,0.971,61,0.971,62,0.971,63,0.971,64,0.971,65,3.032,66,1.118,67,1.118,68,1.958,69,1.118,70,1.118,71,1.118,72,2.604,73,2.38,74,1.118,75,0.391,77,1.21,78,1.21,79,1.21,80,2.688,82,1.21,83,1.21,84,1.21,85,1.21,86,1.555,87,2.584,88,1.118,89,1.118,90,1.118,91,1.118,92,1.118,93,0.971,94,1.118,95,1.118,96,1.118,97,1.118,98,1.118,99,1.118,100,1.118,101,1.118,102,1.21,103,3.363,105,1.21,106,1.21,107,1.21,108,1.118,109,1.118,110,1.118,119,1.937,121,1.118,122,1.791,123,1.791,124,1.118,125,1.118,126,1.04,127,1.411,128,1.118,129,1.04,130,0.855,131,1.04,132,1.04,133,1.118,134,1.118,135,1.118,136,1.118,137,1.118,138,1.118,139,1.118,140,1.118,141,0.009,142,0.009,151,1.21,161,1.033,173,0.164,178,1.642,188,4.604,190,1.32,194,2.432,201,3.527,202,1.642,215,2.629,224,3.545,228,1.458,276,0.971,279,1.555,280,4.086,327,3.925,351,3.759,363,4.387,411,4.125,413,3.395,419,3.032,436,1.317,452,3.395,457,2.113,458,3.395,470,1.217,508,1.32,521,1.458,571,0.718,572,0.391,584,0.718,593,2.023,604,0.642,614,1.033,637,0.91,689,2.629,705,1.642,718,2.113,810,2.629,815,2.629,817,5.268,873,2.422,887,1.844,905,1.32,1103,3.848,1222,1.642,1252,1.04,1305,1.642,1306,1.458,1307,3.288,1328,1.458,1335,3.337,1338,3.288,1339,3.288,1340,3.288,1341,3.288,1342,3.288,1343,3.288,1344,3.288,1345,3.288,1354,1.458,1363,1.642,1385,0.971,1389,5.064,1399,3.759,1400,4.387,1414,2.629,1417,1.642,1418,2.629,1424,1.642,1427,1.642,1429,1.642,1431,1.922,1432,3.849,1433,1.922,1434,1.922,1435,3.077,1436,1.922,1437,1.922,1438,1.922,1439,1.922,1440,1.922,1441,3.849,1442,1.922,1443,3.077,1444,1.922,1445,3.077,1446,1.922,1447,1.922,1448,3.077,1449,3.077,1450,3.077,1451,3.849,1452,3.849,1453,1.922,1454,1.922,1455,1.922,1456,1.922,1457,1.922,1458,3.077,1459,4.4,1460,3.077,1461,4.813,1462,3.077,1463,1.922,1464,3.077,1465,1.922,1466,1.922,1467,4.4,1468,4.4,1469,1.922,1470,1.922,1471,4.813,1472,1.922,1473,6.492,1474,3.849,1475,3.849,1476,1.922,1477,3.077,1478,1.922,1479,5.928,1480,3.077,1481,1.922,1482,1.922,1483,1.922,1484,3.077,1485,1.922,1486,3.077,1487,1.922,1488,1.922,1489,1.922,1490,1.922,1491,1.922,1492,3.077,1493,3.077,1494,3.077,1495,3.077,1496,3.077,1497,3.077,1498,1.922,1499,3.077,1500,3.077,1501,1.922,1502,3.077,1503,1.922,1504,1.922,1505,1.922,1506,3.077,1507,4.4,1508,4.813,1509,1.922,1510,1.922,1511,1.922,1512,1.922,1513,1.922,1514,3.077,1515,1.922,1516,1.922,1517,1.922,1518,1.922,1519,1.922,1520,1.922,1521,1.922,1522,1.922,1523,1.922,1524,1.922]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":194,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["0.1",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.2.1",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["0/37",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["0/44",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["0/45",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["0/50",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["0/53",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["0/55",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["0/62",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1300,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1347,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":419,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"injectables/GridsterUtils.html":{},"classes/WCGridColumnDef.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1418,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":1420,"title":{},"body":{"overview.html":{}}}],["136",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":1416,"title":{},"body":{"overview.html":{}}}],["150",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["162",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":685,"title":{},"body":{"injectables/GridsterRenderer.html":{},"dependencies.html":{}}}],["2.0.0",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["224",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["250",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2500",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1417,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1419,"title":{},"body":{"overview.html":{}}}],["50",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1408,"title":{},"body":{"index.html":{},"overview.html":{}}}],["6.0.0",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["640",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.8.0",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":1021,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellComponent.html":{}}}],["_caption",{"_index":1038,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["_caption:str",{"_index":1055,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["_check",{"_index":1192,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["_checked:boolean=fals",{"_index":1206,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["_class",{"_index":866,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{}}}],["_class:str",{"_index":884,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{}}}],["_column",{"_index":949,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellComponent.html":{}}}],["_column:numb",{"_index":1003,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellComponent.html":{}}}],["_columnindex",{"_index":950,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_columnindex:numb",{"_index":1002,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_configur",{"_index":1067,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["_configuration:wcgridcolumndef",{"_index":1098,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["_configuration:wcgridconfigur",{"_index":1149,"title":{},"body":{"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["_counterclass",{"_index":895,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["_counterclass:str",{"_index":917,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["_data",{"_index":1068,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["_data:ani",{"_index":1097,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["_data:array",{"_index":1148,"title":{},"body":{"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["_dataitem",{"_index":951,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_dataitem:ani",{"_index":1000,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_id",{"_index":1039,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCSwitchButton.html":{}}}],["_id:str",{"_index":1056,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCSwitchButton.html":{}}}],["_mainclass",{"_index":952,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_mainclass:str",{"_index":1004,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_row",{"_index":1069,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridRowComponent.html":{}}}],["_row:numb",{"_index":1099,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridRowComponent.html":{}}}],["_rowindex",{"_index":953,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_rowindex:numb",{"_index":1001,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_titl",{"_index":867,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["_title:str",{"_index":883,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["_valu",{"_index":896,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{}}}],["_value:ani",{"_index":916,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["_value:str",{"_index":1005,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["a.i",{"_index":839,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["abstract",{"_index":275,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["accept",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessor",{"_index":875,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["actual_compon",{"_index":615,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["addclass",{"_index":700,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["additem",{"_index":196,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["adjac",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alias",{"_index":1422,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alway",{"_index":34,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["amount",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":1288,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{},"dependencies.html":{},"index.html":{}}}],["angular/common",{"_index":649,"title":{},"body":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":171,"title":{},"body":{"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1291,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["anoth",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":111,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["append",{"_index":844,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{}}}],["append'},{'nam",{"_index":608,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["appli",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arch",{"_index":1429,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arg",{"_index":816,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["argument",{"_index":817,"title":{},"body":{"injectables/GridsterUtils.html":{},"miscellaneous/variables.html":{}}}],["arr",{"_index":1156,"title":{},"body":{"components/WCGridComponent.html":{}}}],["array",{"_index":248,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{}}}],["auto",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avail",{"_index":1414,"title":{},"body":{"modules.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":796,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["b.i",{"_index":840,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["b.x",{"_index":841,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["background",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background_color",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["block",{"_index":523,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["boolean",{"_index":16,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"components/GridsterPreviewComponent.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterUtils.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCSwitchButton.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":639,"title":{},"body":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"overview.html":{}}}],["bottom",{"_index":688,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["brows",{"_index":1412,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1409,"title":{},"body":{"modules.html":{}}}],["browser/anim",{"_index":1292,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["browseranimationsmodul",{"_index":1290,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["btn",{"_index":947,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["butt",{"_index":1427,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":605,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"dependencies.html":{}}}],["button.compon",{"_index":1281,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{}}}],["button.component.html",{"_index":1191,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.t",{"_index":1190,"title":{},"body":{"components/WCSwitchButton.html":{},"coverage.html":{}}}],["button.component.ts:10",{"_index":1199,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:11",{"_index":1200,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:12",{"_index":1194,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:16",{"_index":1198,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:19",{"_index":1201,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:23",{"_index":1197,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:27",{"_index":1202,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:31",{"_index":1196,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:35",{"_index":1204,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:39",{"_index":1195,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["calculateitemposit",{"_index":1393,"title":{},"body":{"miscellaneous/functions.html":{}}}],["calculatelayoutdebounc",{"_index":197,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["call",{"_index":1103,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canbedrag",{"_index":459,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["canberes",{"_index":460,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["cancel",{"_index":1329,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cancel/approv",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelhorizont",{"_index":1330,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["canceln",{"_index":1331,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cancelscrol",{"_index":1332,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cancelvert",{"_index":1333,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cancelw",{"_index":1334,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cap",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caption",{"_index":1040,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["caption():str",{"_index":1060,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["caption(value:str",{"_index":1057,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["cd",{"_index":1044,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["cdref",{"_index":198,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["cell",{"_index":593,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitGridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cell.compon",{"_index":1177,"title":{},"body":{"components/WCGridRowComponent.html":{},"modules/WebConsoleUIKitGridModule.html":{}}}],["cell.component.html",{"_index":1066,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.t",{"_index":1065,"title":{},"body":{"components/WCGridCellComponent.html":{},"coverage.html":{}}}],["cell.component.ts:14",{"_index":1083,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:15",{"_index":1082,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:16",{"_index":1084,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:17",{"_index":1073,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:21",{"_index":1080,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:25",{"_index":1086,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:29",{"_index":1076,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:37",{"_index":1089,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:41",{"_index":1075,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:47",{"_index":1079,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:51",{"_index":1092,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:55",{"_index":1077,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:60",{"_index":1094,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:64",{"_index":1074,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell.component.ts:68",{"_index":1078,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cell/wc",{"_index":1176,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["cell]'},{'nam",{"_index":596,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["cellid",{"_index":1070,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["cellid():str",{"_index":1116,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["chang",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changedetectorref",{"_index":232,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["check",{"_index":1193,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["checkcollis",{"_index":199,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["checkcompact",{"_index":147,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["checkcompactitem",{"_index":148,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["checkcompactitem(item",{"_index":162,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["checkcompactleft",{"_index":149,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["checkcompactup",{"_index":150,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["checkcontentclass",{"_index":778,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["checkcontentclass(target",{"_index":785,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["checkcontentclassforemptycellclickev",{"_index":779,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["checkcontentclassforemptycellclickevent(gridst",{"_index":789,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["checkcontentclassforev",{"_index":780,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["checkcontentclassforevent(gridst",{"_index":791,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["checked():boolean",{"_index":1207,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["checked(value:boolean",{"_index":1209,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["checkgridcollis",{"_index":200,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["checkitemchang",{"_index":461,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["checkitemchanges(newvalu",{"_index":475,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["checkswap",{"_index":723,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["checkswap(pushedbi",{"_index":730,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["checkswapback",{"_index":724,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["checktouchev",{"_index":781,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["checktouchevent(",{"_index":793,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["clamp",{"_index":1349,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["clamp(valu",{"_index":1398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":173,"title":{"classes/GridsterComponentInterface.html":{},"classes/GridsterItemComponentInterface.html":{},"classes/NgxGaugeError.html":{},"classes/WCGridColumnDef.html":{},"classes/WCGridConfiguration.html":{}},"body":{"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["class():ani",{"_index":889,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCPanelComponent.html":{}}}],["class():str",{"_index":920,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["class(value:ani",{"_index":891,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCPanelComponent.html":{}}}],["class(value:str",{"_index":921,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["clear",{"_index":1212,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["clear():void",{"_index":1245,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["cleartimeout(timeout",{"_index":820,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["click",{"_index":351,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"miscellaneous/variables.html":{}}}],["cluster_gridstermodul",{"_index":641,"title":{},"body":{"modules/GridsterModule.html":{},"overview.html":{}}}],["cluster_gridstermodule_declar",{"_index":642,"title":{},"body":{"modules/GridsterModule.html":{},"overview.html":{}}}],["cluster_gridstermodule_export",{"_index":643,"title":{},"body":{"modules/GridsterModule.html":{},"overview.html":{}}}],["cluster_ngxgaugemodul",{"_index":857,"title":{},"body":{"modules/NgxGaugeModule.html":{},"overview.html":{}}}],["cluster_ngxgaugemodule_declar",{"_index":858,"title":{},"body":{"modules/NgxGaugeModule.html":{},"overview.html":{}}}],["cluster_ngxgaugemodule_export",{"_index":859,"title":{},"body":{"modules/NgxGaugeModule.html":{},"overview.html":{}}}],["cluster_webconsoleuikitdatamodul",{"_index":1248,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{},"overview.html":{}}}],["cluster_webconsoleuikitdatamodule_declar",{"_index":1249,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{},"overview.html":{}}}],["cluster_webconsoleuikitdatamodule_export",{"_index":1250,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{},"overview.html":{}}}],["cluster_webconsoleuikitgridmodul",{"_index":1261,"title":{},"body":{"modules/WebConsoleUIKitGridModule.html":{},"overview.html":{}}}],["cluster_webconsoleuikitgridmodule_declar",{"_index":1262,"title":{},"body":{"modules/WebConsoleUIKitGridModule.html":{},"overview.html":{}}}],["cluster_webconsoleuikitgridmodule_export",{"_index":1263,"title":{},"body":{"modules/WebConsoleUIKitGridModule.html":{},"overview.html":{}}}],["cluster_webconsoleuikitmodul",{"_index":1271,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{},"overview.html":{}}}],["cluster_webconsoleuikitmodule_declar",{"_index":1272,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{},"overview.html":{}}}],["cluster_webconsoleuikitmodule_export",{"_index":1273,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{},"overview.html":{}}}],["coercebooleanproperti",{"_index":1350,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["coercebooleanproperty(valu",{"_index":1401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coercenumberproperti",{"_index":1351,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["coercenumberproperty(valu",{"_index":1402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["col",{"_index":413,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"components/WCGridComponent.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":201,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridConfiguration.html":{},"miscellaneous/variables.html":{}}}],["column():numb",{"_index":1017,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellComponent.html":{}}}],["column(value:numb",{"_index":1019,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellComponent.html":{}}}],["column.nam",{"_index":1159,"title":{},"body":{"components/WCGridComponent.html":{}}}],["columnindex",{"_index":956,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["columnindex():numb",{"_index":1014,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["columnindex(value:numb",{"_index":1016,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["columns:array",{"_index":1162,"title":{},"body":{"classes/WCGridConfiguration.html":{}}}],["command",{"_index":1036,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"classes/WCGridColumnDef.html":{},"miscellaneous/enumerations.html":{}}}],["command'},{'nam",{"_index":594,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["command.compon",{"_index":1096,"title":{},"body":{"components/WCGridCellComponent.html":{},"modules/WebConsoleUIKitGridModule.html":{}}}],["command.component.html",{"_index":1037,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["command.component.t",{"_index":1035,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"coverage.html":{}}}],["command.component.ts:11",{"_index":1048,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["command.component.ts:12",{"_index":1043,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["command.component.ts:16",{"_index":1047,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["command.component.ts:19",{"_index":1045,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["command.component.ts:24",{"_index":1050,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["command.component.ts:28",{"_index":1046,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["command.component.ts:33",{"_index":1053,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["commonmodul",{"_index":648,"title":{},"body":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{}}}],["compact",{"_index":202,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"miscellaneous/variables.html":{}}}],["compacten",{"_index":431,"title":{},"body":{"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{}}}],["compactleft",{"_index":39,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["compactleft&up",{"_index":41,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["compactleftandup",{"_index":45,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{}}}],["compacttyp",{"_index":37,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["compacttype.compactleft",{"_index":181,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["compacttype.compactleftandup",{"_index":184,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["compacttype.compactup",{"_index":179,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["compacttype.compactupandleft",{"_index":183,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["compacttype.non",{"_index":178,"title":{},"body":{"injectables/GridsterCompact.html":{},"miscellaneous/variables.html":{}}}],["compactup",{"_index":38,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["compactup&left",{"_index":40,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["compactupandleft",{"_index":44,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{}}}],["compareitem",{"_index":782,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["compareitems(a",{"_index":795,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["compat",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":435,"title":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":574,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["components/commons/dashboardheader/wcdashboardheadercompon",{"_index":1278,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{}}}],["components/commons/switchbutton/wc",{"_index":1280,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{}}}],["components/containers/panel/wcpanelcompon",{"_index":1277,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{}}}],["components/data/counter/wcdatacountercompon",{"_index":1255,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{}}}],["components/data/gauge/wc",{"_index":1256,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{}}}],["components/data/nxgauge/ngx",{"_index":1258,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{}}}],["components/grid",{"_index":1275,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{}}}],["components/grid/cel",{"_index":1269,"title":{},"body":{"modules/WebConsoleUIKitGridModule.html":{}}}],["components/grid/cell/wc",{"_index":1268,"title":{},"body":{"modules/WebConsoleUIKitGridModule.html":{}}}],["components/grid/row/wc",{"_index":1267,"title":{},"body":{"modules/WebConsoleUIKitGridModule.html":{}}}],["components/grid/wc",{"_index":1265,"title":{},"body":{"modules/WebConsoleUIKitGridModule.html":{}}}],["configur",{"_index":1072,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["configuration():wcgridcolumndef",{"_index":1106,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["configuration():wcgridconfigur",{"_index":1152,"title":{},"body":{"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["configuration(configuration:wcgridcolumndef",{"_index":1108,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["configuration(configuration:wcgridconfigur",{"_index":1153,"title":{},"body":{"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["conflict",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consol",{"_index":1252,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["console.log",{"_index":1027,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["console.log(\"wctoasterservic",{"_index":1233,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["const",{"_index":191,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{}}}],["constructor",{"_index":154,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"classes/NgxGaugeError.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{}}}],["constructor(cd",{"_index":1042,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["constructor(el",{"_index":468,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["constructor(gridst",{"_index":155,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"injectables/GridsterRenderer.html":{}}}],["constructor(gridsteritem",{"_index":728,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["constructor(messag",{"_index":851,"title":{},"body":{"classes/NgxGaugeError.html":{}}}],["constructor(priv",{"_index":174,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"injectables/GridsterRenderer.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"injectables/WCToasterService.html":{}}}],["constructor(toastr",{"_index":1214,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["contain",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["content",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contentclass",{"_index":787,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["context",{"_index":815,"title":{},"body":{"injectables/GridsterUtils.html":{},"miscellaneous/variables.html":{}}}],["contextmenu",{"_index":358,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["control",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copycollisioni",{"_index":764,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["copycollisionx",{"_index":762,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["copyi",{"_index":768,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["copyx",{"_index":766,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["core",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["counter",{"_index":893,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["counter'},{'nam",{"_index":588,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["counter.component.html",{"_index":894,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["counterclass",{"_index":897,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["counterclass():str",{"_index":925,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["counterclass(value:str",{"_index":927,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["coverag",{"_index":1296,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cssunit",{"_index":1352,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cssunit(valu",{"_index":1404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["curcolwidth",{"_index":203,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["curheight",{"_index":204,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["current",{"_index":786,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["currowheight",{"_index":205,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["curwidth",{"_index":206,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["dashboard",{"_index":584,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":587,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"dependencies.html":{}}}],["data():ani",{"_index":1100,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["data():array",{"_index":1150,"title":{},"body":{"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["data(data:ani",{"_index":1102,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["data(data:array",{"_index":1151,"title":{},"body":{"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["data.module.t",{"_index":1254,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{}}}],["dataitem",{"_index":957,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["dataitem():ani",{"_index":1008,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["dataitem(value:ani",{"_index":1010,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["dateinput",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["debounc",{"_index":783,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["debounce(func",{"_index":798,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["declar",{"_index":638,"title":{},"body":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"overview.html":{}}}],["default",{"_index":873,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCSwitchButton.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defaultitemcol",{"_index":57,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["defaultitemrow",{"_index":58,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":156,"title":{},"body":{"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"classes/NgxGaugeError.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{}}}],["delay",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delaystart",{"_index":9,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["delet",{"_index":175,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"components/WCGridCellCommandComponent.html":{}}}],["depend",{"_index":637,"title":{"dependencies.html":{}},"body":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["descript",{"_index":1221,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["destroy",{"_index":151,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"miscellaneous/variables.html":{}}}],["destroycallback",{"_index":77,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["dimens",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":572,"title":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["directives.t",{"_index":843,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"coverage.html":{}}}],["disabl",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disableautopositiononconflict",{"_index":92,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["disablepushondrag",{"_index":90,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["disablepushonres",{"_index":91,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["disablewarn",{"_index":96,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["disablewindowres",{"_index":95,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":521,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"miscellaneous/variables.html":{}}}],["displaygrid",{"_index":33,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["displaygrid.ondragandres",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":438,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["drag",{"_index":280,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"components/GridsterPreviewComponent.html":{},"miscellaneous/variables.html":{}}}],["dragbas",{"_index":1,"title":{"interfaces/DragBase.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{}}}],["dragen",{"_index":432,"title":{},"body":{"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{}}}],["dragend",{"_index":370,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["draggabl",{"_index":86,"title":{"interfaces/Draggable.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["draghandleclass",{"_index":123,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["draginprogress",{"_index":207,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["dragov",{"_index":367,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["draw",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["drop",{"_index":363,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"miscellaneous/variables.html":{}}}],["dropdown",{"_index":1295,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{},"dependencies.html":{}}}],["dropdownsmodul",{"_index":1294,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["dropoveritem",{"_index":124,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["dropoveritemscallback",{"_index":125,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":130,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterUtils.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["e.changedtouch",{"_index":826,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["e.changedtouches.length",{"_index":827,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["e.changedtouches[0].clienti",{"_index":829,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["e.changedtouches[0].clientx",{"_index":828,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["e.clienti",{"_index":406,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"injectables/GridsterUtils.html":{}}}],["e.clientx",{"_index":402,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"injectables/GridsterUtils.html":{}}}],["e.currenttarget",{"_index":832,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["e.datatransfer.dropeffect",{"_index":386,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["e.preventdefault",{"_index":382,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["e.stoppropag",{"_index":383,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["e.touch",{"_index":822,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["e.touches.length",{"_index":823,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["e.touches[0].clienti",{"_index":825,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["e.touches[0].clientx",{"_index":824,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["each",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["east",{"_index":138,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["edg",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["edit",{"_index":1124,"title":{},"body":{"classes/WCGridColumnDef.html":{},"miscellaneous/enumerations.html":{}}}],["editor",{"_index":946,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor'},{'nam",{"_index":591,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["editor.component.html",{"_index":948,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcompon",{"_index":1276,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{}}}],["editor/wcgridbuttoneditorcomponent.t",{"_index":945,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"coverage.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:10",{"_index":977,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:11",{"_index":979,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:12",{"_index":976,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:13",{"_index":975,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:14",{"_index":978,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:15",{"_index":980,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:18",{"_index":971,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:20",{"_index":963,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:24",{"_index":972,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:27",{"_index":982,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:31",{"_index":966,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:35",{"_index":985,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:39",{"_index":968,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:43",{"_index":988,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:47",{"_index":965,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:51",{"_index":991,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:55",{"_index":964,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:59",{"_index":995,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:63",{"_index":997,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:67",{"_index":967,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:71",{"_index":999,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:75",{"_index":969,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:80",{"_index":974,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:85",{"_index":973,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["el",{"_index":208,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{}}}],["el.nativeel",{"_index":505,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["element",{"_index":571,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"miscellaneous/variables.html":{}}}],["elementref",{"_index":469,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["empti",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emptycel",{"_index":209,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["emptycellclick",{"_index":285,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellclickcallback",{"_index":102,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["emptycellclickcb",{"_index":298,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellclickcb(",{"_index":309,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellclicktouch",{"_index":286,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellcontextmenu",{"_index":287,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellcontextmenucallback",{"_index":105,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["emptycellcontextmenucb",{"_index":299,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellcontextmenucb(",{"_index":311,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycelldrag",{"_index":288,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycelldragcallback",{"_index":107,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["emptycelldragdrop",{"_index":300,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycelldragdrop(",{"_index":313,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycelldragmaxcol",{"_index":108,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["emptycelldragmaxrow",{"_index":109,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["emptycelldragov",{"_index":301,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycelldragover(",{"_index":315,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycelldragtouch",{"_index":289,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycelldrop",{"_index":290,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycelldropcallback",{"_index":106,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["emptycellexit",{"_index":291,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellmmov",{"_index":292,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellmmovetouch",{"_index":293,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellmousedown",{"_index":302,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellmousedown(",{"_index":317,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellmousemov",{"_index":303,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellmousemove(",{"_index":319,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellmouseup",{"_index":304,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellmouseup(",{"_index":321,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellmov",{"_index":294,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycellup",{"_index":295,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["emptycelluptouch",{"_index":296,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["enabl",{"_index":10,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["enable/dis",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enableemptycellclick",{"_index":98,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["enableemptycellcontextmenu",{"_index":99,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["enableemptycelldrag",{"_index":101,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["enableemptycelldrop",{"_index":100,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["encapsul",{"_index":445,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["enum",{"_index":42,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"classes/WCGridColumnDef.html":{}}}],["enumer",{"_index":1386,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":850,"title":{},"body":{"classes/NgxGaugeError.html":{},"injectables/WCToasterService.html":{}}}],["error(messag",{"_index":1219,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["error(message:str",{"_index":1241,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["error.t",{"_index":849,"title":{},"body":{"classes/NgxGaugeError.html":{},"coverage.html":{}}}],["error.ts:1",{"_index":852,"title":{},"body":{"classes/NgxGaugeError.html":{}}}],["event",{"_index":103,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCGridButtonEditorComponent.html":{},"miscellaneous/variables.html":{}}}],["eventemitt",{"_index":970,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["excel",{"_index":1363,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":25,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"dependencies.html":{},"overview.html":{}}}],["exporta",{"_index":845,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{}}}],["extend",{"_index":120,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"classes/NgxGaugeError.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["fallbackvalu",{"_index":1403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fals",{"_index":188,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterUtils.html":{},"components/WCSwitchButton.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"coverage.html":{}}}],["finditemswithitem",{"_index":210,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["finditemwithitem",{"_index":211,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["fit",{"_index":27,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fix",{"_index":30,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fixedcolwidth",{"_index":47,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["fixedrowheight",{"_index":48,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["foreground_color",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":1428,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["func",{"_index":801,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["func.apply(context",{"_index":819,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["function",{"_index":17,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"classes/GridsterComponentInterface.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"classes/GridsterItemComponentInterface.html":{},"injectables/GridsterUtils.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gap",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gaug",{"_index":607,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["gauge'},{'nam",{"_index":581,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["gauge.compon",{"_index":1257,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{}}}],["gauge.component.html",{"_index":930,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.t",{"_index":929,"title":{},"body":{"components/WCGaugeComponent.html":{},"coverage.html":{}}}],["gauge.component.ts:10",{"_index":939,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:11",{"_index":938,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:12",{"_index":937,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:13",{"_index":931,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:17",{"_index":936,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:20",{"_index":940,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:24",{"_index":934,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:28",{"_index":941,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:32",{"_index":932,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:36",{"_index":942,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:40",{"_index":935,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:44",{"_index":943,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:48",{"_index":933,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.modul",{"_index":1259,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{}}}],["gauge.module.t",{"_index":861,"title":{},"body":{"modules/NgxGaugeModule.html":{}}}],["gauge/gaug",{"_index":862,"title":{},"body":{"modules/NgxGaugeModule.html":{}}}],["get",{"_index":1406,"title":{"index.html":{}},"body":{}}],["getcapt",{"_index":1049,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["getcheck",{"_index":1203,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["getclass",{"_index":879,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{}}}],["getcolumn",{"_index":990,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellComponent.html":{}}}],["getcolumnindex",{"_index":987,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["getconfigur",{"_index":1088,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["getcounterclass",{"_index":913,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["getdata",{"_index":1085,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["getdataitem",{"_index":981,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["getfirstpossibleposit",{"_index":115,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["getgridcolumnstyl",{"_index":666,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["getgridcolumnstyle(i",{"_index":672,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["getgridrowstyl",{"_index":667,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["getgridrowstyle(i",{"_index":675,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["getid",{"_index":1052,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCSwitchButton.html":{}}}],["getlastpossibleposit",{"_index":116,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["getmainclass",{"_index":996,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["getnextpossibleposit",{"_index":113,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["getrow",{"_index":1091,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridRowComponent.html":{}}}],["getrowid",{"_index":994,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["getrowindex",{"_index":984,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["gettitl",{"_index":876,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["getvaliditemfromev",{"_index":305,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["getvaliditemfromevent(",{"_index":323,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["getvalu",{"_index":910,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{}}}],["graph",{"_index":1413,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":127,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["grid'},{'nam",{"_index":598,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["grid.compon",{"_index":1266,"title":{},"body":{"modules/WebConsoleUIKitGridModule.html":{}}}],["grid.component.html",{"_index":1131,"title":{},"body":{"components/WCGridComponent.html":{}}}],["grid.component.t",{"_index":1130,"title":{},"body":{"components/WCGridComponent.html":{},"coverage.html":{}}}],["grid.component.ts:13",{"_index":1143,"title":{},"body":{"components/WCGridComponent.html":{}}}],["grid.component.ts:14",{"_index":1134,"title":{},"body":{"components/WCGridComponent.html":{}}}],["grid.component.ts:18",{"_index":1137,"title":{},"body":{"components/WCGridComponent.html":{}}}],["grid.component.ts:22",{"_index":1144,"title":{},"body":{"components/WCGridComponent.html":{}}}],["grid.component.ts:26",{"_index":1136,"title":{},"body":{"components/WCGridComponent.html":{}}}],["grid.component.ts:33",{"_index":1145,"title":{},"body":{"components/WCGridComponent.html":{}}}],["grid.component.ts:37",{"_index":1135,"title":{},"body":{"components/WCGridComponent.html":{}}}],["grid.component.ts:43",{"_index":1141,"title":{},"body":{"components/WCGridComponent.html":{}}}],["grid.component.ts:52",{"_index":1139,"title":{},"body":{"components/WCGridComponent.html":{}}}],["grid.module.t",{"_index":1264,"title":{},"body":{"modules/WebConsoleUIKitGridModule.html":{}}}],["gridcolumn",{"_index":212,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["gridcompon",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gridmodul",{"_index":1293,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["gridrender",{"_index":213,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["gridrow",{"_index":214,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["gridsizechangedcallback",{"_index":78,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["gridster",{"_index":75,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["gridster'},{'nam",{"_index":575,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["gridster.$options.draggable.draghandleclass",{"_index":833,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["gridster.$options.draggable.ignorecont",{"_index":830,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["gridster.$options.draggable.ignorecontentclass",{"_index":834,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["gridster.compon",{"_index":502,"title":{},"body":{"components/GridsterItemComponent.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{}}}],["gridster.interfac",{"_index":24,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"classes/GridsterItemComponentInterface.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["gridstercompact",{"_index":144,"title":{"injectables/GridsterCompact.html":{}},"body":{"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"coverage.html":{}}}],["gridstercompact.servic",{"_index":273,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["gridstercompon",{"_index":470,"title":{},"body":{"components/GridsterItemComponent.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["gridstercomponentinterfac",{"_index":23,"title":{"classes/GridsterComponentInterface.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"classes/GridsterItemComponentInterface.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{}}}],["gridsterconfig",{"_index":46,"title":{"interfaces/GridsterConfigS.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gridsterconfig.interfac",{"_index":172,"title":{},"body":{"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterRenderer.html":{}}}],["gridsterconfigs.interfac",{"_index":271,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["gridsterconfigservic",{"_index":1307,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gridsterdragg",{"_index":486,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"coverage.html":{}}}],["gridsterdraggable(thi",{"_index":509,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["gridsterdraggable.servic",{"_index":500,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["gridsterel",{"_index":1338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gridsteremptycel",{"_index":244,"title":{"injectables/GridsterEmptyCell.html":{}},"body":{"classes/GridsterComponentInterface.html":{},"injectables/GridsterEmptyCell.html":{},"coverage.html":{}}}],["gridsteremptycell.servic",{"_index":272,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["gridsteritem",{"_index":19,"title":{"interfaces/GridsterItem.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gridsteritem.compon",{"_index":651,"title":{},"body":{"modules/GridsterModule.html":{}}}],["gridsteritem.css",{"_index":449,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["gridsteritem.gridst",{"_index":741,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["gridsteritem.html",{"_index":451,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["gridsteritem.interfac",{"_index":20,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"injectables/GridsterRenderer.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["gridsteritemcollid",{"_index":761,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["gridsteritemcollide.$item.i",{"_index":765,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["gridsteritemcollide.$item.x",{"_index":763,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["gridsteritemcollide.item.i",{"_index":773,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["gridsteritemcollide.item.x",{"_index":772,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["gridsteritemcollide.sets",{"_index":775,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["gridsteritemcollis",{"_index":758,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["gridsteritemcollision.canbedrag",{"_index":760,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["gridsteritemcompon",{"_index":436,"title":{"components/GridsterItemComponent.html":{}},"body":{"components/GridsterItemComponent.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["gridsteritemcomponent.interfac",{"_index":22,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"injectables/GridsterSwap.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["gridsteritemcomponentinterfac",{"_index":21,"title":{"classes/GridsterItemComponentInterface.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"injectables/GridsterSwap.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{}}}],["gridsteritem{x",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gridstermodul",{"_index":636,"title":{"modules/GridsterModule.html":{}},"body":{"modules/GridsterModule.html":{},"modules.html":{},"overview.html":{}}}],["gridsterpreview.compon",{"_index":652,"title":{},"body":{"modules/GridsterModule.html":{}}}],["gridsterpreview.css",{"_index":655,"title":{},"body":{"components/GridsterPreviewComponent.html":{}}}],["gridsterpreviewcompon",{"_index":577,"title":{"components/GridsterPreviewComponent.html":{}},"body":{"components/GridsterItemComponent.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"coverage.html":{},"overview.html":{}}}],["gridsterpush",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["gridsterpushres",{"_index":1325,"title":{},"body":{"coverage.html":{}}}],["gridsterrender",{"_index":251,"title":{"injectables/GridsterRenderer.html":{}},"body":{"classes/GridsterComponentInterface.html":{},"injectables/GridsterRenderer.html":{},"coverage.html":{}}}],["gridsterrenderer.servic",{"_index":274,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["gridsterresiz",{"_index":494,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"coverage.html":{}}}],["gridsterresizable(thi",{"_index":512,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["gridsterresizable.servic",{"_index":501,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["gridsterresizeeventtyp",{"_index":718,"title":{"interfaces/GridsterResizeEventType.html":{}},"body":{"interfaces/GridsterResizeEventType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gridsterswap",{"_index":720,"title":{"injectables/GridsterSwap.html":{}},"body":{"injectables/GridsterSwap.html":{},"coverage.html":{}}}],["gridsterutil",{"_index":341,"title":{"injectables/GridsterUtils.html":{}},"body":{"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"injectables/GridsterUtils.html":{},"coverage.html":{}}}],["gridsterutils.checkcontentclass(e.target",{"_index":831,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["gridsterutils.checkcontentclass(target.parentnod",{"_index":838,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["gridsterutils.checkcontentclassforemptycellclickevent(this.gridst",{"_index":378,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["gridsterutils.checktouchevent(",{"_index":399,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["gridsterutils.merge(obj1[p",{"_index":812,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["gridsterutils.merge(this.$item",{"_index":515,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["gridsterutils.servic",{"_index":342,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{}}}],["gridtyp",{"_index":26,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterRenderer.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gridtype.fit",{"_index":705,"title":{},"body":{"injectables/GridsterRenderer.html":{},"miscellaneous/variables.html":{}}}],["gridtype.fix",{"_index":708,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["gridtype.horizontalfix",{"_index":711,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["gridtype.scrollhorizont",{"_index":707,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["gridtype.scrollvert",{"_index":706,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["gridtype.verticalfix",{"_index":710,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["handl",{"_index":128,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["handler",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["header",{"_index":864,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["header'},{'nam",{"_index":585,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["header.component.html",{"_index":865,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["height",{"_index":452,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"injectables/GridsterRenderer.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["horizontalfix",{"_index":32,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":498,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["html",{"_index":570,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["html5",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/scttcper/ngx",{"_index":1223,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["https://scttcper.github.io/ngx",{"_index":1230,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["i=0;i",{"_index":1157,"title":{},"body":{"components/WCGridComponent.html":{}}}],["id",{"_index":1041,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCSwitchButton.html":{}}}],["id():str",{"_index":1063,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCSwitchButton.html":{}}}],["id(value:str",{"_index":1061,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCSwitchButton.html":{}}}],["identifi",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignorecont",{"_index":122,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["ignorecontentclass",{"_index":121,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["ignoremargininrow",{"_index":110,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":441,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexof(contentclass",{"_index":837,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["info(messag",{"_index":1224,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["info(message:str",{"_index":1239,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["init",{"_index":453,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["initcallback",{"_index":74,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterItem.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["initi",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialitem",{"_index":297,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["inject",{"_index":143,"title":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"injectables/WCToasterService.html":{}},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"injectables/WCToasterService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":467,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"dependencies.html":{}}}],["interact",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"interfaces/GridsterResizeEventType.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"interfaces/GridsterResizeEventType.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{},"overview.html":{}}}],["interv",{"_index":1342,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["interval",{"_index":1340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["intervaldur",{"_index":1339,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["intervaln",{"_index":1341,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["intervalw",{"_index":1343,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["intl",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["iscommandcel",{"_index":1071,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["iscommandcell():boolean",{"_index":1111,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["isnumb",{"_index":1353,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnumber(valu",{"_index":1405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["item",{"_index":80,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"injectables/GridsterRenderer.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["item'},{'nam",{"_index":576,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["item.col",{"_index":416,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"injectables/GridsterRenderer.html":{}}}],["item.i",{"_index":423,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"injectables/GridsterRenderer.html":{}}}],["item.row",{"_index":421,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"injectables/GridsterRenderer.html":{}}}],["item.x",{"_index":418,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"injectables/GridsterRenderer.html":{}}}],["itemchang",{"_index":462,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["itemchangecallback",{"_index":79,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["itemcompon",{"_index":81,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterItem.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["iteminitcallback",{"_index":83,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["itemremovedcallback",{"_index":84,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["itemresizecallback",{"_index":82,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["itemvalidatecallback",{"_index":85,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["keep",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keepfixedheightinmobil",{"_index":49,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["keepfixedwidthinmobil",{"_index":50,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["kendo",{"_index":1284,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["kit",{"_index":1253,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["kit.module.t",{"_index":1274,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{}}}],["l",{"_index":192,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["l10n",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["label",{"_index":847,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"classes/WCGridColumnDef.html":{}}}],["label'},{'nam",{"_index":610,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["label?:str",{"_index":1126,"title":{},"body":{"classes/WCGridColumnDef.html":{}}}],["lastmous",{"_index":1392,"title":{},"body":{"miscellaneous/functions.html":{}}}],["later",{"_index":818,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["latest",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":454,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"miscellaneous/functions.html":{}}}],["legend",{"_index":569,"title":{},"body":{"components/GridsterItemComponent.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"modules/NgxGaugeModule.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"overview.html":{}}}],["limit",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["listen",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["liter",{"_index":283,"title":{},"body":{"interfaces/GridsterConfigS.html":{},"injectables/GridsterUtils.html":{},"interfaces/Resizable.html":{}}}],["log",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mainclass",{"_index":958,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["mainclass():str",{"_index":1022,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["mainclass(value:str",{"_index":1024,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["margin",{"_index":65,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterRenderer.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["marginbottom",{"_index":693,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["marginright",{"_index":694,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["match",{"_index":142,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor",{"_index":410,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["math.min(math.abs(olditem.i",{"_index":422,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["math.min(math.abs(olditem.x",{"_index":417,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["math.round(this.gridster.curcolwidth",{"_index":690,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["math.round(this.gridster.currowheight",{"_index":691,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["max",{"_index":1400,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["maxcol",{"_index":54,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxitemarea",{"_index":64,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["maxitemcol",{"_index":59,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["maxitemrow",{"_index":60,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["maxrow",{"_index":56,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["menu",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merg",{"_index":784,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["merge(obj1",{"_index":802,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["messag",{"_index":853,"title":{},"body":{"classes/NgxGaugeError.html":{},"injectables/WCToasterService.html":{}}}],["metadata",{"_index":444,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["method",{"_index":146,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{}}}],["millisecond",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":1399,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mincol",{"_index":53,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["minimum",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minitemarea",{"_index":63,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["minitemcol",{"_index":61,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["minitemrow",{"_index":62,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["minrow",{"_index":55,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["miscellan",{"_index":1385,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misplac",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mobil",{"_index":215,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"miscellaneous/variables.html":{}}}],["mobilebreakpoint",{"_index":52,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["modul",{"_index":635,"title":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"modules.html":{}},"body":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["motif",{"_index":1407,"title":{},"body":{"index.html":{}}}],["mous",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mousedown",{"_index":374,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["mouseev",{"_index":104,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["mousemov",{"_index":389,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["mouseup",{"_index":394,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["move",{"_index":190,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["movelefttillcollis",{"_index":152,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["movelefttillcollision(item",{"_index":167,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["moveuptillcollis",{"_index":153,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["moveuptillcollision(item",{"_index":169,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["movingitem",{"_index":216,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["much",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multipl",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["n",{"_index":131,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterResizeEventType.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":159,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"classes/NgxGaugeError.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"miscellaneous/functions.html":{}}}],["name:str",{"_index":1125,"title":{},"body":{"classes/WCGridColumnDef.html":{}}}],["ne",{"_index":134,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":508,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newitem",{"_index":114,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["newvalu",{"_index":478,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["newvalue.col",{"_index":550,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["newvalue.i",{"_index":554,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["newvalue.row",{"_index":548,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["newvalue.x",{"_index":552,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["ngmodul",{"_index":650,"title":{},"body":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["ngondestroy",{"_index":463,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["ngoninit",{"_index":464,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["ngx",{"_index":580,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitModule.html":{},"dependencies.html":{}}}],["ngxgaug",{"_index":579,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"modules/NgxGaugeModule.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"coverage.html":{},"overview.html":{}}}],["ngxgaugeappend",{"_index":606,"title":{"directives/NgxGaugeAppend.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"coverage.html":{},"overview.html":{}}}],["ngxgaugecap",{"_index":1423,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngxgaugeerror",{"_index":848,"title":{"classes/NgxGaugeError.html":{}},"body":{"classes/NgxGaugeError.html":{},"coverage.html":{}}}],["ngxgaugelabel",{"_index":609,"title":{"directives/NgxGaugeLabel.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"coverage.html":{},"overview.html":{}}}],["ngxgaugemodul",{"_index":856,"title":{"modules/NgxGaugeModule.html":{}},"body":{"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxgaugeprepend",{"_index":611,"title":{"directives/NgxGaugePrepend.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"coverage.html":{},"overview.html":{}}}],["ngxgaugetyp",{"_index":1425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngxgaugevalu",{"_index":613,"title":{"directives/NgxGaugeValue.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"coverage.html":{},"overview.html":{}}}],["ngzone",{"_index":269,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"components/GridsterItemComponent.html":{}}}],["nolimit",{"_index":278,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["none",{"_index":36,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["north",{"_index":137,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["notplac",{"_index":455,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["null",{"_index":68,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterUtils.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":13,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridRowComponent.html":{},"miscellaneous/variables.html":{}}}],["nw",{"_index":136,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["obj1",{"_index":805,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["obj1[p",{"_index":811,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["obj2",{"_index":803,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["obj2[p",{"_index":807,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["object",{"_index":810,"title":{},"body":{"injectables/GridsterUtils.html":{},"miscellaneous/variables.html":{}}}],["object.keys(data",{"_index":1158,"title":{},"body":{"components/WCGridComponent.html":{}}}],["objectkey",{"_index":1132,"title":{},"body":{"components/WCGridComponent.html":{}}}],["objectkeys(data",{"_index":1138,"title":{},"body":{"components/WCGridComponent.html":{}}}],["olditem",{"_index":324,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["olditem.i",{"_index":427,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["olditem.x",{"_index":425,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["oldvalu",{"_index":476,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["oldvalue.col",{"_index":551,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["oldvalue.i",{"_index":555,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["oldvalue.row",{"_index":549,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["oldvalue.x",{"_index":553,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["oncancel",{"_index":961,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["oncancel:eventemitt",{"_index":1007,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["onconfirm",{"_index":962,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["onconfirmation:eventemitt",{"_index":1006,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["ondestroy",{"_index":443,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["ondrag&res",{"_index":35,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ondragandres",{"_index":43,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{}}}],["oninit",{"_index":442,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["onkopress",{"_index":954,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["onkopressed():void",{"_index":1030,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["onokpress",{"_index":955,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["onokpressed():void",{"_index":1028,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["option",{"_index":8,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"classes/NgxGaugeError.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options?:any):void",{"_index":1237,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["optionschang",{"_index":112,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["out",{"_index":646,"title":{},"body":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"overview.html":{}}}],["outer",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outermargin",{"_index":66,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["outermarginbottom",{"_index":70,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["outermarginleft",{"_index":71,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["outermarginright",{"_index":69,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["outermargintop",{"_index":67,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":960,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["over",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overrid",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":1415,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":806,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["packag",{"_index":1359,"title":{"dependencies.html":{}},"body":{}}],["panel",{"_index":1179,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["panel'},{'nam",{"_index":602,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["panel.component.css",{"_index":1180,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["panel.component.html",{"_index":1181,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["param",{"_index":1234,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["paramet",{"_index":158,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"classes/NgxGaugeError.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"miscellaneous/functions.html":{}}}],["peer",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["pixelstopositioni",{"_index":218,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["pixelstopositionx",{"_index":217,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["place",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["popup",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["posit",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["position/s",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["positionxtopixel",{"_index":219,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["positionytopixel",{"_index":220,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["prepar",{"_index":1109,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["prepend",{"_index":846,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{}}}],["prepend'},{'nam",{"_index":612,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["preview",{"_index":654,"title":{},"body":{"components/GridsterPreviewComponent.html":{}}}],["preview'},{'nam",{"_index":578,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["previewstyl",{"_index":221,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"components/GridsterPreviewComponent.html":{}}}],["previewstyle(drag",{"_index":658,"title":{},"body":{"components/GridsterPreviewComponent.html":{}}}],["privat",{"_index":503,"title":{},"body":{"components/GridsterItemComponent.html":{},"injectables/GridsterSwap.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["progress/kendo",{"_index":1287,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{},"dependencies.html":{}}}],["promis",{"_index":119,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"components/GridsterPreviewComponent.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["properties.hasownproperty(p",{"_index":808,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["properties[p",{"_index":813,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["propnam",{"_index":117,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{}}}],["provid",{"_index":640,"title":{},"body":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"overview.html":{}}}],["providedin",{"_index":1231,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["provider.module.t",{"_index":1285,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["public",{"_index":456,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"injectables/WCToasterService.html":{}}}],["push",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pushdirect",{"_index":93,"title":{"interfaces/PushDirections.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pushedbi",{"_index":732,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["pushedby.$item.i",{"_index":769,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["pushedby.$item.x",{"_index":767,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["pushedby.item.i",{"_index":771,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["pushedby.item.x",{"_index":770,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["pushitem",{"_index":89,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["pushresizeitem",{"_index":94,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["px",{"_index":683,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["queri",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["rc.0",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["recalcul",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rect",{"_index":400,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["rect.left",{"_index":404,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["rect.top",{"_index":408,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["refresh",{"_index":1105,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["remov",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["removeclass1",{"_index":701,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["removeclass2",{"_index":702,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["removeclass3",{"_index":703,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["removeitem",{"_index":222,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["render",{"_index":223,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitGridModule.html":{},"coverage.html":{}}}],["renderer.setstyle(el",{"_index":680,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["renderer2",{"_index":263,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{}}}],["renderers/command/wc",{"_index":1034,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"modules/WebConsoleUIKitGridModule.html":{},"coverage.html":{}}}],["reset",{"_index":645,"title":{},"body":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"overview.html":{}}}],["resiz",{"_index":87,"title":{"interfaces/Resizable.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["resizeen",{"_index":433,"title":{},"body":{"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{}}}],["resizeev",{"_index":1344,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resizeeventscrolltyp",{"_index":1394,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resizeeventtyp",{"_index":1345,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["restoreswapitem",{"_index":725,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["result",{"_index":141,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":161,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"miscellaneous/variables.html":{}}}],["rgba(0",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["right",{"_index":689,"title":{},"body":{"injectables/GridsterRenderer.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":1232,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["round",{"_index":1426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["roundingmethod",{"_index":277,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["row",{"_index":224,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridRowComponent.html":{},"miscellaneous/variables.html":{}}}],["row():numb",{"_index":1113,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridRowComponent.html":{}}}],["row(value:numb",{"_index":1115,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridRowComponent.html":{}}}],["row.compon",{"_index":1147,"title":{},"body":{"components/WCGridComponent.html":{},"modules/WebConsoleUIKitGridModule.html":{}}}],["row.component.html",{"_index":1165,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["row.component.t",{"_index":1164,"title":{},"body":{"components/WCGridRowComponent.html":{},"coverage.html":{}}}],["row.component.ts:14",{"_index":1172,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["row.component.ts:15",{"_index":1171,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["row.component.ts:16",{"_index":1166,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["row.component.ts:20",{"_index":1170,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["row.component.ts:24",{"_index":1173,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["row.component.ts:28",{"_index":1168,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["row.component.ts:36",{"_index":1174,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["row.component.ts:40",{"_index":1167,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["row.component.ts:46",{"_index":1175,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["row.component.ts:50",{"_index":1169,"title":{},"body":{"components/WCGridRowComponent.html":{}}}],["row/wc",{"_index":1146,"title":{},"body":{"components/WCGridComponent.html":{}}}],["row]'},{'nam",{"_index":600,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["rowid",{"_index":993,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["rowid():str",{"_index":1020,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["rowindex",{"_index":959,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["rowindex():numb",{"_index":1011,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["rowindex(value:numb",{"_index":1013,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["rowvalu",{"_index":1133,"title":{},"body":{"components/WCGridComponent.html":{}}}],["rowvalues(data",{"_index":1140,"title":{},"body":{"components/WCGridComponent.html":{}}}],["rowvalues(data:any):array",{"_index":1154,"title":{},"body":{"components/WCGridComponent.html":{}}}],["rxj",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":129,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterResizeEventType.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["same",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scroll",{"_index":1335,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["scroll(gridst",{"_index":1391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scrollabl",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scrollhorizont",{"_index":29,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["scrollsensit",{"_index":72,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrollspe",{"_index":73,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrolltonewitem",{"_index":97,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["scrollvert",{"_index":28,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["se",{"_index":133,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":1222,"title":{},"body":{"injectables/WCToasterService.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selector",{"_index":447,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["semi",{"_index":1430,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["set",{"_index":887,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"miscellaneous/variables.html":{}}}],["setcaption(valu",{"_index":1051,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["setchecked(valu",{"_index":1205,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["setclass(valu",{"_index":881,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{}}}],["setcolumn(valu",{"_index":992,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellComponent.html":{}}}],["setcolumnindex(valu",{"_index":989,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["setconfiguration(configur",{"_index":1090,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["setcounterclass(valu",{"_index":915,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["setdata(data",{"_index":1087,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["setdataitem(valu",{"_index":983,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["setgriddimens",{"_index":225,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["setgrids",{"_index":51,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["setid(valu",{"_index":1054,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCSwitchButton.html":{}}}],["setmainclass(valu",{"_index":998,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["setrow(valu",{"_index":1093,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridRowComponent.html":{}}}],["setrowindex(valu",{"_index":986,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["setsiz",{"_index":465,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["setswapitem",{"_index":726,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["settimeout",{"_index":398,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["settimeout(lat",{"_index":821,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["settitle(valu",{"_index":878,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["setvalue(valu",{"_index":912,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{}}}],["shrink",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sign",{"_index":1396,"title":{},"body":{"miscellaneous/functions.html":{}}}],["size",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sortabl",{"_index":1119,"title":{},"body":{"classes/WCGridColumnDef.html":{}}}],["sortable?:boolean",{"_index":1127,"title":{},"body":{"classes/WCGridColumnDef.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"modules/GridsterModule.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{},"miscellaneous/variables.html":{}}}],["south",{"_index":139,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["space",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["span",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../gauge.t",{"_index":1424,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../gridsterconfig.constant.t",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../gridsterconfig.interface.t",{"_index":1387,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../gridsterscroll.service.t",{"_index":1389,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../util.t",{"_index":1390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../wcgridcolumndef.t",{"_index":1388,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.t",{"_index":863,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"coverage.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:10",{"_index":874,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:11",{"_index":869,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:15",{"_index":872,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:18",{"_index":877,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:22",{"_index":871,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:26",{"_index":880,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:30",{"_index":870,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/switchbutton/wc",{"_index":1189,"title":{},"body":{"components/WCSwitchButton.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.component.t",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.t",{"_index":195,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:11",{"_index":229,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:12",{"_index":249,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:13",{"_index":234,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:14",{"_index":259,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:15",{"_index":257,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:16",{"_index":260,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:17",{"_index":258,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:18",{"_index":247,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:19",{"_index":246,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:20",{"_index":235,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:21",{"_index":243,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:22",{"_index":264,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:23",{"_index":252,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:24",{"_index":233,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:25",{"_index":256,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:26",{"_index":231,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:27",{"_index":267,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:28",{"_index":255,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:29",{"_index":230,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:30",{"_index":262,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:31",{"_index":261,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:32",{"_index":254,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:33",{"_index":241,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:34",{"_index":239,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:35",{"_index":236,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:36",{"_index":265,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:37",{"_index":238,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:38",{"_index":240,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:39",{"_index":268,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:40",{"_index":266,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:41",{"_index":242,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:42",{"_index":245,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:43",{"_index":237,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:44",{"_index":270,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:45",{"_index":253,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.interface.ts:46",{"_index":250,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridster.module.t",{"_index":647,"title":{},"body":{"modules/GridsterModule.html":{}}}],["src/lib/components/containers/dashboard/lib/gridstercompact.service.t",{"_index":145,"title":{},"body":{"injectables/GridsterCompact.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridstercompact.service.ts:101",{"_index":168,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["src/lib/components/containers/dashboard/lib/gridstercompact.service.ts:14",{"_index":166,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["src/lib/components/containers/dashboard/lib/gridstercompact.service.ts:18",{"_index":160,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["src/lib/components/containers/dashboard/lib/gridstercompact.service.ts:34",{"_index":163,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["src/lib/components/containers/dashboard/lib/gridstercompact.service.ts:50",{"_index":165,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["src/lib/components/containers/dashboard/lib/gridstercompact.service.ts:70",{"_index":170,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["src/lib/components/containers/dashboard/lib/gridstercompact.service.ts:81",{"_index":164,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["src/lib/components/containers/dashboard/lib/gridstercompact.service.ts:9",{"_index":157,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterconfig.constant.t",{"_index":1305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterconfig.interface.t",{"_index":5,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterconfigs.interface.t",{"_index":281,"title":{},"body":{"interfaces/GridsterConfigS.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterconfigs.interface.ts:60",{"_index":282,"title":{},"body":{"interfaces/GridsterConfigS.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterdraggable.service.t",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.t",{"_index":284,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:10",{"_index":329,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:11",{"_index":330,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:114",{"_index":314,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:12",{"_index":331,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:125",{"_index":316,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:13",{"_index":334,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:139",{"_index":318,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:14",{"_index":332,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:15",{"_index":333,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:16",{"_index":335,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:160",{"_index":320,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:17",{"_index":336,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:172",{"_index":322,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:18",{"_index":338,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:19",{"_index":339,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:194",{"_index":325,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:20",{"_index":337,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:21",{"_index":307,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:26",{"_index":308,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:39",{"_index":328,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:84",{"_index":310,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:9",{"_index":340,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteremptycell.service.ts:98",{"_index":312,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.t",{"_index":440,"title":{},"body":{"components/GridsterItemComponent.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:110",{"_index":479,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:116",{"_index":477,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:136",{"_index":473,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:141",{"_index":474,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:17",{"_index":472,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:18",{"_index":485,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:19",{"_index":488,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:20",{"_index":489,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:21",{"_index":496,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:22",{"_index":491,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:23",{"_index":497,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:24",{"_index":490,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:25",{"_index":487,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:26",{"_index":495,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:27",{"_index":492,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:28",{"_index":471,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:30",{"_index":493,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:43",{"_index":481,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:48",{"_index":484,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:66",{"_index":480,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:75",{"_index":482,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.component.ts:81",{"_index":483,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.interface.t",{"_index":430,"title":{},"body":{"interfaces/GridsterItem.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritem.interface.ts:17",{"_index":434,"title":{},"body":{"interfaces/GridsterItem.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.t",{"_index":616,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:10",{"_index":632,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:11",{"_index":627,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:12",{"_index":634,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:13",{"_index":624,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:14",{"_index":621,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:15",{"_index":630,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:16",{"_index":628,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:17",{"_index":633,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:18",{"_index":626,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:19",{"_index":631,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:20",{"_index":620,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:21",{"_index":618,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:22",{"_index":619,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:23",{"_index":622,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:24",{"_index":623,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:25",{"_index":629,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:8",{"_index":625,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsteritemcomponent.interface.ts:9",{"_index":617,"title":{},"body":{"classes/GridsterItemComponentInterface.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterpreview.component.t",{"_index":653,"title":{},"body":{"components/GridsterPreviewComponent.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterpreview.component.ts:12",{"_index":660,"title":{},"body":{"components/GridsterPreviewComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterpreview.component.ts:13",{"_index":656,"title":{},"body":{"components/GridsterPreviewComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterpreview.component.ts:15",{"_index":661,"title":{},"body":{"components/GridsterPreviewComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterpreview.component.ts:21",{"_index":657,"title":{},"body":{"components/GridsterPreviewComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterpreview.component.ts:27",{"_index":659,"title":{},"body":{"components/GridsterPreviewComponent.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterpush.service.t",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterpushresize.service.t",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterrenderer.service.t",{"_index":665,"title":{},"body":{"injectables/GridsterRenderer.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterrenderer.service.ts:123",{"_index":673,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterrenderer.service.ts:13",{"_index":671,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterrenderer.service.ts:131",{"_index":676,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterrenderer.service.ts:17",{"_index":679,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterrenderer.service.ts:66",{"_index":677,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterrenderer.service.ts:8",{"_index":670,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterresizable.service.t",{"_index":1326,"title":{},"body":{"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterresizeeventtype.interface.t",{"_index":719,"title":{},"body":{"interfaces/GridsterResizeEventType.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterscroll.service.t",{"_index":1328,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterswap.service.t",{"_index":721,"title":{},"body":{"injectables/GridsterSwap.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterswap.service.ts:10",{"_index":729,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterswap.service.ts:17",{"_index":734,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterswap.service.ts:23",{"_index":737,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterswap.service.ts:30",{"_index":733,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterswap.service.ts:49",{"_index":735,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterswap.service.ts:58",{"_index":736,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterswap.service.ts:65",{"_index":731,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterswap.service.ts:8",{"_index":739,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterswap.service.ts:9",{"_index":738,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterutils.service.t",{"_index":776,"title":{},"body":{"injectables/GridsterUtils.html":{},"coverage.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterutils.service.ts:22",{"_index":800,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterutils.service.ts:35",{"_index":794,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterutils.service.ts:47",{"_index":792,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterutils.service.ts:60",{"_index":790,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterutils.service.ts:65",{"_index":788,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterutils.service.ts:76",{"_index":797,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["src/lib/components/containers/dashboard/lib/gridsterutils.service.ts:8",{"_index":804,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.t",{"_index":1178,"title":{},"body":{"components/WCPanelComponent.html":{},"coverage.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:10",{"_index":1186,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:11",{"_index":1182,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:15",{"_index":1185,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:18",{"_index":1187,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:22",{"_index":1184,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:26",{"_index":1188,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:30",{"_index":1183,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.t",{"_index":892,"title":{},"body":{"components/WCDataCounterComponent.html":{},"coverage.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:10",{"_index":907,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:11",{"_index":906,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:12",{"_index":904,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:13",{"_index":898,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:17",{"_index":903,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:20",{"_index":908,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:24",{"_index":901,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:28",{"_index":909,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:32",{"_index":899,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:36",{"_index":911,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:40",{"_index":902,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:44",{"_index":914,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:48",{"_index":900,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/gauge/wc",{"_index":928,"title":{},"body":{"components/WCGaugeComponent.html":{},"coverage.html":{}}}],["src/lib/components/data/nxgauge/common/util.t",{"_index":1348,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/components/data/nxgauge/gauge/gaug",{"_index":842,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"coverage.html":{}}}],["src/lib/components/data/nxgauge/gauge/gauge.t",{"_index":1354,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/components/data/nxgauge/ngx",{"_index":860,"title":{},"body":{"modules/NgxGaugeModule.html":{}}}],["src/lib/components/grid",{"_index":944,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/cel",{"_index":1033,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/cell/wc",{"_index":1064,"title":{},"body":{"components/WCGridCellComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/row/wc",{"_index":1163,"title":{},"body":{"components/WCGridRowComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/wc",{"_index":1129,"title":{},"body":{"components/WCGridComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/wcgridcolumndef.t",{"_index":1118,"title":{},"body":{"classes/WCGridColumnDef.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/components/grid/wcgridcolumndef.ts:10",{"_index":1122,"title":{},"body":{"classes/WCGridColumnDef.html":{}}}],["src/lib/components/grid/wcgridcolumndef.ts:11",{"_index":1123,"title":{},"body":{"classes/WCGridColumnDef.html":{}}}],["src/lib/components/grid/wcgridcolumndef.ts:8",{"_index":1121,"title":{},"body":{"classes/WCGridColumnDef.html":{}}}],["src/lib/components/grid/wcgridcolumndef.ts:9",{"_index":1120,"title":{},"body":{"classes/WCGridColumnDef.html":{}}}],["src/lib/components/grid/wcgridconfiguration.t",{"_index":1160,"title":{},"body":{"classes/WCGridConfiguration.html":{},"coverage.html":{}}}],["src/lib/components/grid/wcgridconfiguration.ts:4",{"_index":1161,"title":{},"body":{"classes/WCGridConfiguration.html":{}}}],["src/lib/modules/web",{"_index":1251,"title":{},"body":{"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["src/lib/services/toaster/wctoasterservice.t",{"_index":1211,"title":{},"body":{"injectables/WCToasterService.html":{},"coverage.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:22",{"_index":1227,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:32",{"_index":1225,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:42",{"_index":1220,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:52",{"_index":1229,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:62",{"_index":1218,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:9",{"_index":1216,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["stack",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["starthorizont",{"_index":1336,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["starthorizontal(sign",{"_index":1395,"title":{},"body":{"miscellaneous/functions.html":{}}}],["startvert",{"_index":1337,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["startvertical(sign",{"_index":1397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statement",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":777,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["stop",{"_index":12,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":118,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterItem.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterUtils.html":{},"classes/NgxGaugeError.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{}}}],["style",{"_index":882,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCSwitchButton.html":{}}}],["styleurl",{"_index":448,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCPanelComponent.html":{}}}],["success",{"_index":1213,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["success(messag",{"_index":1226,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["success(message:str",{"_index":1235,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["super",{"_index":854,"title":{},"body":{"classes/NgxGaugeError.html":{}}}],["support",{"_index":1410,"title":{},"body":{"modules.html":{}}}],["suspend",{"_index":1032,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["svg",{"_index":1411,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":135,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["swap",{"_index":88,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["swapeditem",{"_index":722,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["swapitem",{"_index":727,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["switch",{"_index":604,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tabl",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":126,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterUtils.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["target.getattribute('class').split",{"_index":836,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["target.hasattribute('class",{"_index":835,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["templat",{"_index":437,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"index.html":{}}}],["templateurl",{"_index":450,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["theme",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["thick",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.$item",{"_index":506,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.$item.col",{"_index":531,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.$item.dragen",{"_index":565,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.$item.i",{"_index":527,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.$item.resizeen",{"_index":567,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.$item.row",{"_index":532,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.$item.x",{"_index":529,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this._capt",{"_index":1058,"title":{},"body":{"components/WCGridCellCommandComponent.html":{}}}],["this._check",{"_index":1208,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["this._class",{"_index":890,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{}}}],["this._column",{"_index":1018,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellComponent.html":{}}}],["this._columnindex",{"_index":1015,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._configur",{"_index":1107,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["this._configuration.column",{"_index":1155,"title":{},"body":{"components/WCGridComponent.html":{}}}],["this._configuration.nam",{"_index":1117,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["this._configuration.type==wcgridcolumntype.command",{"_index":1112,"title":{},"body":{"components/WCGridCellComponent.html":{}}}],["this._counterclass",{"_index":926,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["this._data",{"_index":1101,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["this._dataitem",{"_index":1009,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._id",{"_index":1062,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCSwitchButton.html":{}}}],["this._mainclass",{"_index":1023,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._row",{"_index":1114,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridRowComponent.html":{}}}],["this._rowindex",{"_index":1012,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._titl",{"_index":886,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["this._valu",{"_index":923,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{}}}],["this.cd.markforcheck",{"_index":1059,"title":{},"body":{"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["this.checkcompactleft",{"_index":182,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["this.checkcompactup",{"_index":180,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["this.checkswap(this.gridsteritem",{"_index":745,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.checkswapback",{"_index":744,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.drag",{"_index":507,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.drag.destroy",{"_index":518,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.el",{"_index":504,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["this.el.scrollintoview(fals",{"_index":539,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.emptycellclick",{"_index":348,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellclickcb.bind(thi",{"_index":352,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellclicktouch",{"_index":353,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellcontextmenu",{"_index":356,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellcontextmenucb.bind(thi",{"_index":359,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycelldrag",{"_index":372,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycelldragdrop.bind(thi",{"_index":364,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycelldragover.bind(thi",{"_index":368,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycelldragtouch",{"_index":376,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycelldrop",{"_index":361,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellexit",{"_index":346,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellmmov",{"_index":387,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellmmovetouch",{"_index":391,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellmousedown.bind(thi",{"_index":375,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellmousemove.bind(thi",{"_index":390,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellmouseup.bind(thi",{"_index":395,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellmov",{"_index":366,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycellup",{"_index":393,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.emptycelluptouch",{"_index":396,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.getvaliditemfromevent(",{"_index":379,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridst",{"_index":176,"title":{},"body":{"injectables/GridsterCompact.html":{},"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{}}}],["this.gridster.$options.compacttyp",{"_index":177,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["this.gridster.$options.defaultitemcol",{"_index":414,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.$options.defaultitemrow",{"_index":415,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.$options.draggable.en",{"_index":566,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.$options.emptycelldragmaxcol",{"_index":420,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.$options.emptycelldragmaxrow",{"_index":424,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.$options.enableemptycellclick",{"_index":347,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.$options.enableemptycellcontextmenu",{"_index":355,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.$options.enableemptycelldrag",{"_index":371,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.$options.enableemptycelldrop",{"_index":360,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.$options.fixedcolwidth",{"_index":687,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.$options.fixedrowheight",{"_index":682,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.$options.gridtyp",{"_index":704,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.$options.ignoremargininrow",{"_index":709,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.$options.keepfixedheightinmobil",{"_index":681,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.$options.keepfixedwidthinmobil",{"_index":686,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.$options.margin",{"_index":405,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"injectables/GridsterRenderer.html":{}}}],["this.gridster.$options.outermargin",{"_index":695,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.$options.outermarginbottom",{"_index":697,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.$options.outermarginright",{"_index":699,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.$options.resizable.en",{"_index":568,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.$options.scrolltonewitem",{"_index":538,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.$options.swap",{"_index":743,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.gridster.additem(thi",{"_index":514,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.calculatelayoutdebounc",{"_index":562,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.cdref.markforcheck",{"_index":381,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.checkcollision(gridsteritemcollide.$item",{"_index":774,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.gridster.checkcollision(item",{"_index":429,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.checkcollision(pushedby.$item",{"_index":759,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.gridster.checkcollision(this.$item",{"_index":556,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.checkcollision(this.swapeditem.$item",{"_index":750,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.gridster.column",{"_index":698,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.compact",{"_index":663,"title":{},"body":{"components/GridsterPreviewComponent.html":{}}}],["this.gridster.compact.checkcompactitem(this.gridster.movingitem",{"_index":664,"title":{},"body":{"components/GridsterPreviewComponent.html":{}}}],["this.gridster.curcolwidth",{"_index":530,"title":{},"body":{"components/GridsterItemComponent.html":{},"injectables/GridsterRenderer.html":{}}}],["this.gridster.currowheight",{"_index":528,"title":{},"body":{"components/GridsterItemComponent.html":{},"injectables/GridsterRenderer.html":{}}}],["this.gridster.curwidth",{"_index":684,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.el.getboundingclientrect",{"_index":401,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.el.scrollleft",{"_index":403,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.el.scrolltop",{"_index":407,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.grid.length",{"_index":193,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["this.gridster.gridcolumns.length",{"_index":717,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.gridrenderer.updateitem(this.el",{"_index":524,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["this.gridster.gridrows.length",{"_index":715,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.mobil",{"_index":564,"title":{},"body":{"components/GridsterItemComponent.html":{},"injectables/GridsterRenderer.html":{}}}],["this.gridster.movingitem",{"_index":344,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"components/GridsterPreviewComponent.html":{}}}],["this.gridster.movingitem.i",{"_index":428,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.movingitem.x",{"_index":426,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.options.emptycellclickcallback",{"_index":349,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.options.emptycellclickcallback(",{"_index":380,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.options.emptycellcontextmenucallback",{"_index":357,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.options.emptycellcontextmenucallback(",{"_index":384,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.options.emptycelldragcallback",{"_index":373,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.options.emptycelldragcallback(",{"_index":397,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.options.emptycelldropcallback",{"_index":362,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.options.emptycelldropcallback(",{"_index":385,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.options.itemchangecallback",{"_index":546,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.options.itemchangecallback(this.item",{"_index":547,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.options.iteminitcallback",{"_index":536,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.options.iteminitcallback(this.item",{"_index":537,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.options.itemresizecallback",{"_index":542,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.options.itemresizecallback(this.item",{"_index":543,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.pixelstopositionx(x",{"_index":409,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.pixelstopositiony(i",{"_index":412,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.previewstyl",{"_index":345,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"components/GridsterPreviewComponent.html":{}}}],["this.gridster.removeitem(thi",{"_index":517,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.gridster.renderer.addclass(this.gridster.el",{"_index":713,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.renderer.listen('docu",{"_index":369,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.renderer.listen('window",{"_index":388,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.renderer.listen(this.gridster.el",{"_index":350,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridster.renderer.removeclass(this.gridster.el",{"_index":712,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.row",{"_index":696,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["this.gridster.zone.runoutsideangular",{"_index":365,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.gridsteritem",{"_index":740,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.gridsteritem.$item.i",{"_index":754,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.gridsteritem.$item.x",{"_index":752,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.gridsteritem.item.i",{"_index":755,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.gridsteritem.item.x",{"_index":753,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.height",{"_index":541,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.init",{"_index":533,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.initialitem",{"_index":343,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["this.item",{"_index":516,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.item.col",{"_index":558,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.item.i",{"_index":561,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.item.initcallback",{"_index":534,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.item.initcallback(this.item",{"_index":535,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.item.row",{"_index":559,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.item.x",{"_index":560,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.itemchang",{"_index":563,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.left",{"_index":545,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.messag",{"_index":855,"title":{},"body":{"classes/NgxGaugeError.html":{}}}],["this.movelefttillcollision(item",{"_index":186,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["this.moveuptillcollision(item",{"_index":185,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["this.notplac",{"_index":522,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.oncancel.emit",{"_index":1031,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this.onconfirmation.emit",{"_index":1029,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this.previewstyle.bind(thi",{"_index":662,"title":{},"body":{"components/GridsterPreviewComponent.html":{}}}],["this.render",{"_index":525,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["this.renderer.setstyle(this.el",{"_index":520,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["this.res",{"_index":511,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.resize.destroy",{"_index":519,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.sets",{"_index":557,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.swapeditem",{"_index":742,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.swapeditem.$item.i",{"_index":747,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.swapeditem.$item.x",{"_index":746,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.swapeditem.checkitemchanges(this.swapeditem.$item",{"_index":756,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.swapeditem.item",{"_index":757,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.swapeditem.item.i",{"_index":749,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.swapeditem.item.x",{"_index":748,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.swapeditem.sets",{"_index":751,"title":{},"body":{"injectables/GridsterSwap.html":{}}}],["this.toastr.clear",{"_index":1246,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["this.toastr.error(messag",{"_index":1242,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["this.toastr.info(messag",{"_index":1240,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["this.toastr.success(messag",{"_index":1238,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["this.toastr.warning(messag",{"_index":1244,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["this.top",{"_index":544,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.updateitems",{"_index":526,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.updateopt",{"_index":513,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.width",{"_index":540,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["this.zon",{"_index":510,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["timeout",{"_index":814,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["titl",{"_index":868,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{}}}],["title():ani",{"_index":885,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCPanelComponent.html":{}}}],["title():str",{"_index":918,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCSwitchButton.html":{}}}],["title(value:ani",{"_index":888,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCPanelComponent.html":{}}}],["title(value:str",{"_index":919,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCSwitchButton.html":{}}}],["title:str",{"_index":1236,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["toastr",{"_index":1217,"title":{},"body":{"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitModule.html":{},"dependencies.html":{}}}],["toastrmodul",{"_index":1279,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{}}}],["toastrmodule.forroot",{"_index":1282,"title":{},"body":{"modules/WebConsoleUIKitModule.html":{}}}],["toastrservic",{"_index":1215,"title":{},"body":{"injectables/WCToasterService.html":{},"modules/WebConsoleUIKitModule.html":{}}}],["todo",{"_index":1104,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{}}}],["toolbar",{"_index":1289,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{},"dependencies.html":{}}}],["toolbarmodul",{"_index":1286,"title":{},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["top",{"_index":457,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touchend",{"_index":354,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["touchmov",{"_index":392,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["touchstart",{"_index":377,"title":{},"body":{"injectables/GridsterEmptyCell.html":{}}}],["transform",{"_index":674,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["translate3d",{"_index":692,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["translatex",{"_index":714,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["translatey",{"_index":716,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["tree",{"_index":439,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["true",{"_index":411,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"interfaces/GridsterResizeEventType.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"classes/NgxGaugeError.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type?:wcgridcolumntyp",{"_index":1128,"title":{},"body":{"classes/WCGridColumnDef.html":{}}}],["typealias",{"_index":1421,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":809,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["ui",{"_index":1110,"title":{},"body":{"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"modules/WebConsoleUIKitModuleKendoProvider.html":{}}}],["undefin",{"_index":327,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["updategrid",{"_index":226,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["updategridst",{"_index":668,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["updateitem",{"_index":669,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["updateitem(el",{"_index":678,"title":{},"body":{"injectables/GridsterRenderer.html":{}}}],["updateitems",{"_index":466,"title":{},"body":{"components/GridsterItemComponent.html":{}}}],["updateopt",{"_index":306,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{}}}],["us",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valu",{"_index":614,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value():ani",{"_index":922,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["value():str",{"_index":1025,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["value(value:ani",{"_index":924,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["value(value:str",{"_index":1026,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["var",{"_index":573,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["variabl",{"_index":1306,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["verticalfix",{"_index":31,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["viewencapsul",{"_index":499,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["viewencapsulation.non",{"_index":446,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{}}}],["void",{"_index":76,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"injectables/GridsterCompact.html":{},"classes/GridsterComponentInterface.html":{},"interfaces/GridsterConfigS.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"components/GridsterPreviewComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"injectables/WCToasterService.html":{}}}],["w",{"_index":132,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/GridsterResizeEventType.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["wait",{"_index":799,"title":{},"body":{"injectables/GridsterUtils.html":{}}}],["warn",{"_index":905,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"injectables/WCToasterService.html":{},"miscellaneous/variables.html":{}}}],["warning(messag",{"_index":1228,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["warning(message:str",{"_index":1243,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["wc",{"_index":583,"title":{},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["wcdashboardheadercompon",{"_index":582,"title":{"components/WCDashboardHeaderComponent.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcdatacountercompon",{"_index":586,"title":{"components/WCDataCounterComponent.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitDataModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcgaugecompon",{"_index":589,"title":{"components/WCGaugeComponent.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitDataModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcgridbuttoneditorcompon",{"_index":590,"title":{"components/WCGridButtonEditorComponent.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcgridcellcommandcompon",{"_index":592,"title":{"components/WCGridCellCommandComponent.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitGridModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcgridcellcompon",{"_index":595,"title":{"components/WCGridCellComponent.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitGridModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcgridcolumndef",{"_index":1081,"title":{"classes/WCGridColumnDef.html":{}},"body":{"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"classes/WCGridConfiguration.html":{},"coverage.html":{}}}],["wcgridcolumntyp",{"_index":1095,"title":{},"body":{"components/WCGridCellComponent.html":{},"classes/WCGridColumnDef.html":{},"miscellaneous/enumerations.html":{}}}],["wcgridcompon",{"_index":597,"title":{"components/WCGridComponent.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitGridModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcgridconfigur",{"_index":1142,"title":{"classes/WCGridConfiguration.html":{}},"body":{"components/WCGridComponent.html":{},"classes/WCGridConfiguration.html":{},"components/WCGridRowComponent.html":{},"coverage.html":{}}}],["wcgridrowcompon",{"_index":599,"title":{"components/WCGridRowComponent.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitGridModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcpanelcompon",{"_index":601,"title":{"components/WCPanelComponent.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcswitchbutton",{"_index":603,"title":{"components/WCSwitchButton.html":{}},"body":{"components/GridsterItemComponent.html":{},"components/GridsterPreviewComponent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridCellCommandComponent.html":{},"components/WCGridCellComponent.html":{},"components/WCGridComponent.html":{},"components/WCGridRowComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"modules/WebConsoleUIKitModule.html":{},"coverage.html":{},"overview.html":{}}}],["wctoasterservic",{"_index":1210,"title":{"injectables/WCToasterService.html":{}},"body":{"injectables/WCToasterService.html":{},"coverage.html":{}}}],["web",{"_index":1380,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["webconsoleuikitdatamodul",{"_index":1247,"title":{"modules/WebConsoleUIKitDataModule.html":{}},"body":{"modules/WebConsoleUIKitDataModule.html":{},"modules.html":{},"overview.html":{}}}],["webconsoleuikitgridmodul",{"_index":1260,"title":{"modules/WebConsoleUIKitGridModule.html":{}},"body":{"modules/WebConsoleUIKitGridModule.html":{},"modules.html":{},"overview.html":{}}}],["webconsoleuikitmodul",{"_index":1270,"title":{"modules/WebConsoleUIKitModule.html":{}},"body":{"modules/WebConsoleUIKitModule.html":{},"modules.html":{},"overview.html":{}}}],["webconsoleuikitmodulekendoprovid",{"_index":1283,"title":{"modules/WebConsoleUIKitModuleKendoProvider.html":{}},"body":{"modules/WebConsoleUIKitModuleKendoProvider.html":{},"modules.html":{}}}],["west",{"_index":140,"title":{},"body":{"interfaces/DragBase.html":{},"interfaces/Draggable.html":{},"interfaces/GridsterConfigS.html":{},"interfaces/PushDirections.html":{},"interfaces/Resizable.html":{},"miscellaneous/variables.html":{}}}],["wider",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["widget",{"_index":189,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["widgetmovedup",{"_index":187,"title":{},"body":{"injectables/GridsterCompact.html":{}}}],["width",{"_index":458,"title":{},"body":{"components/GridsterItemComponent.html":{},"classes/GridsterItemComponentInterface.html":{},"injectables/GridsterRenderer.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["width/height",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["windowres",{"_index":227,"title":{},"body":{"classes/GridsterComponentInterface.html":{}}}],["without",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":276,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":279,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"injectables/GridsterEmptyCell.html":{},"interfaces/GridsterItem.html":{},"components/GridsterItemComponent.html":{},"injectables/GridsterRenderer.html":{},"injectables/GridsterSwap.html":{},"injectables/GridsterUtils.html":{},"miscellaneous/variables.html":{}}}],["ye",{"_index":326,"title":{},"body":{"injectables/GridsterEmptyCell.html":{},"components/GridsterPreviewComponent.html":{},"injectables/WCToasterService.html":{},"miscellaneous/functions.html":{}}}],["zone",{"_index":228,"title":{},"body":{"classes/GridsterComponentInterface.html":{},"components/GridsterItemComponent.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":644,"title":{},"body":{"modules/GridsterModule.html":{},"modules/NgxGaugeModule.html":{},"modules/WebConsoleUIKitDataModule.html":{},"modules/WebConsoleUIKitGridModule.html":{},"modules/WebConsoleUIKitModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/DragBase.html":{"url":"interfaces/DragBase.html","title":"interface - DragBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterConfig.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        delayStart\n                                \n                                \n                                            Optional\n                                        enabled\n                                \n                                \n                                            Optional\n                                        start\n                                \n                                \n                                            Optional\n                                        stop\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delayStart\n                                    \n                                \n                                \n                                    \n                                        delayStart:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                    \n                                \n                                \n                                    \n                                        start:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                    \n                                \n                                \n                                    \n                                        stop:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes = 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up'\n}\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Draggable.html":{"url":"interfaces/Draggable.html","title":"interface - Draggable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Draggable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterConfig.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DragBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dragHandleClass\n                                \n                                \n                                            Optional\n                                        dropOverItems\n                                \n                                \n                                            Optional\n                                        dropOverItemsCallback\n                                \n                                \n                                            Optional\n                                        ignoreContent\n                                \n                                \n                                            Optional\n                                        ignoreContentClass\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dragHandleClass\n                                    \n                                \n                                \n                                    \n                                        dragHandleClass:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropOverItems\n                                    \n                                \n                                \n                                    \n                                        dropOverItems:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropOverItemsCallback\n                                    \n                                \n                                \n                                    \n                                        dropOverItemsCallback:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreContent\n                                    \n                                \n                                \n                                    \n                                        ignoreContent:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreContentClass\n                                    \n                                \n                                \n                                    \n                                        ignoreContentClass:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes = 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up'\n}\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridsterCompact.html":{"url":"injectables/GridsterCompact.html","title":"injectable - GridsterCompact","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridsterCompact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterCompact.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkCompact\n                            \n                            \n                                checkCompactItem\n                            \n                            \n                                checkCompactLeft\n                            \n                            \n                                checkCompactUp\n                            \n                            \n                                destroy\n                            \n                            \n                                moveLeftTillCollision\n                            \n                            \n                                moveUpTillCollision\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gridster: GridsterComponentInterface)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/dashboard/lib/gridsterCompact.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridster\n                                                  \n                                                        \n                                                                    GridsterComponentInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkCompact\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckCompact()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterCompact.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkCompactItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckCompactItem(item: GridsterItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterCompact.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    GridsterItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkCompactLeft\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckCompactLeft()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterCompact.service.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkCompactUp\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckCompactUp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterCompact.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterCompact.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveLeftTillCollision\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveLeftTillCollision(item: GridsterItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterCompact.service.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    GridsterItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moveUpTillCollision\n                            \n                            \n                        \n                    \n                \n                \n                    \nmoveUpTillCollision(item: GridsterItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterCompact.service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    GridsterItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {CompactType} from './gridsterConfig.interface';\n\n@Injectable()\nexport class GridsterCompact {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  checkCompact(): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.checkCompactUp();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.checkCompactUp();\n        this.checkCompactLeft();\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.checkCompactLeft();\n        this.checkCompactUp();\n      }\n    }\n  }\n\n  checkCompactItem(item: GridsterItem): void {\n    if (this.gridster.$options.compactType !== CompactType.None) {\n      if (this.gridster.$options.compactType === CompactType.CompactUp) {\n        this.moveUpTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeft) {\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactUpAndLeft) {\n        this.moveUpTillCollision(item);\n        this.moveLeftTillCollision(item);\n      } else if (this.gridster.$options.compactType === CompactType.CompactLeftAndUp) {\n        this.moveLeftTillCollision(item);\n        this.moveUpTillCollision(item);\n      }\n    }\n  }\n\n  checkCompactUp(): void {\n    let widgetMovedUp = false, widget: GridsterItemComponentInterface, moved: boolean;\n    const l = this.gridster.grid.length;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridsterComponentInterface.html":{"url":"classes/GridsterComponentInterface.html","title":"class - GridsterComponentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridsterComponentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridster.interface.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $options\n                            \n                            \n                                addItem\n                            \n                            \n                                calculateLayoutDebounce\n                            \n                            \n                                cdRef\n                            \n                            \n                                checkCollision\n                            \n                            \n                                checkGridCollision\n                            \n                            \n                                columns\n                            \n                            \n                                compact\n                            \n                            \n                                curColWidth\n                            \n                            \n                                curHeight\n                            \n                            \n                                curRowHeight\n                            \n                            \n                                curWidth\n                            \n                            \n                                dragInProgress\n                            \n                            \n                                el\n                            \n                            \n                                emptyCell\n                            \n                            \n                                findItemsWithItem\n                            \n                            \n                                findItemWithItem\n                            \n                            \n                                grid\n                            \n                            \n                                gridColumns\n                            \n                            \n                                gridRenderer\n                            \n                            \n                                gridRows\n                            \n                            \n                                mobile\n                            \n                            \n                                movingItem\n                            \n                            \n                                options\n                            \n                            \n                                pixelsToPositionX\n                            \n                            \n                                pixelsToPositionY\n                            \n                            \n                                positionXToPixels\n                            \n                            \n                                positionYToPixels\n                            \n                            \n                                previewStyle\n                            \n                            \n                                removeItem\n                            \n                            \n                                renderer\n                            \n                            \n                                rows\n                            \n                            \n                                setGridDimensions\n                            \n                            \n                                updateGrid\n                            \n                            \n                                windowResize\n                            \n                            \n                                zone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        $options:     GridsterConfigS\n\n                    \n                \n                    \n                        \n                            Type :     GridsterConfigS\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addItem:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calculateLayoutDebounce\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calculateLayoutDebounce:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cdRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdRef:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkCollision\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkCollision:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkGridCollision\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkGridCollision:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columns:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compact\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        compact:     GridsterCompact\n\n                    \n                \n                    \n                        \n                            Type :     GridsterCompact\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            curColWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        curColWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            curHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        curHeight:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            curRowHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        curRowHeight:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            curWidth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        curWidth:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragInProgress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dragInProgress:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCell\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCell:     GridsterEmptyCell\n\n                    \n                \n                    \n                        \n                            Type :     GridsterEmptyCell\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findItemsWithItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        findItemsWithItem:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findItemWithItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        findItemWithItem:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            grid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        grid:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridColumns:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridRenderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridRenderer:     GridsterRenderer\n\n                    \n                \n                    \n                        \n                            Type :     GridsterRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridRows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridRows:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            movingItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        movingItem:     GridsterItem | null\n\n                    \n                \n                    \n                        \n                            Type :     GridsterItem | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     GridsterConfig\n\n                    \n                \n                    \n                        \n                            Type :     GridsterConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pixelsToPositionX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pixelsToPositionX:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pixelsToPositionY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pixelsToPositionY:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positionXToPixels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        positionXToPixels:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positionYToPixels\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        positionYToPixels:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previewStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        previewStyle:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        removeItem:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer2\n\n                    \n                \n                    \n                        \n                            Type :     Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rows\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rows:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGridDimensions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setGridDimensions:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGrid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updateGrid:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windowResize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        windowResize:      | null\n\n                    \n                \n                    \n                        \n                            Type :      | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zone\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zone:     NgZone\n\n                    \n                \n                    \n                        \n                            Type :     NgZone\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridster.interface.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {GridsterConfigS} from './gridsterConfigS.interface';\nimport {ChangeDetectorRef, NgZone, Renderer2} from '@angular/core';\nimport {GridsterEmptyCell} from './gridsterEmptyCell.service';\nimport {GridsterCompact} from './gridsterCompact.service';\nimport {GridsterConfig} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterRenderer} from './gridsterRenderer.service';\n\nexport abstract class GridsterComponentInterface {\n  $options: GridsterConfigS;\n  grid: Array;\n  checkCollision: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  positionXToPixels: (x: number) => number;\n  pixelsToPositionX: (x: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  positionYToPixels: (y: number) => number;\n  pixelsToPositionY: (y: number, roundingMethod: (x: number) => number, noLimit?: boolean) => number;\n  findItemWithItem: (item: GridsterItem) => GridsterItemComponentInterface | boolean;\n  findItemsWithItem: (item: GridsterItem) => Array;\n  checkGridCollision: (item: GridsterItem) => boolean;\n  el: any;\n  renderer: Renderer2;\n  gridRenderer: GridsterRenderer;\n  cdRef: ChangeDetectorRef;\n  options: GridsterConfig;\n  calculateLayoutDebounce: () => void;\n  updateGrid: () => void;\n  movingItem: GridsterItem | null;\n  addItem: (item: GridsterItemComponentInterface) => void;\n  removeItem: (item: GridsterItemComponentInterface) => void;\n  previewStyle: (drag?: boolean) => void;\n  mobile: boolean;\n  curWidth: number;\n  curHeight: number;\n  columns: number;\n  rows: number;\n  curColWidth: number;\n  curRowHeight: number;\n  windowResize: (() => void) | null;\n  setGridDimensions: (() => void);\n  dragInProgress: boolean;\n  emptyCell: GridsterEmptyCell;\n  compact: GridsterCompact;\n  zone: NgZone;\n  gridRows: Array;\n  gridColumns: Array;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridsterConfigS.html":{"url":"interfaces/GridsterConfigS.html","title":"interface - GridsterConfigS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridsterConfigS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterConfigS.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        api\n                                \n                                \n                                        compactType\n                                \n                                \n                                        defaultItemCols\n                                \n                                \n                                        defaultItemRows\n                                \n                                \n                                        disableAutoPositionOnConflict\n                                \n                                \n                                        disablePushOnDrag\n                                \n                                \n                                        disablePushOnResize\n                                \n                                \n                                        disableWarnings\n                                \n                                \n                                        disableWindowResize\n                                \n                                \n                                        displayGrid\n                                \n                                \n                                        draggable\n                                \n                                \n                                        emptyCellDragMaxCols\n                                \n                                \n                                        emptyCellDragMaxRows\n                                \n                                \n                                        enableEmptyCellClick\n                                \n                                \n                                        enableEmptyCellContextMenu\n                                \n                                \n                                        enableEmptyCellDrag\n                                \n                                \n                                        enableEmptyCellDrop\n                                \n                                \n                                        fixedColWidth\n                                \n                                \n                                        fixedRowHeight\n                                \n                                \n                                        gridType\n                                \n                                \n                                        ignoreMarginInRow\n                                \n                                \n                                        keepFixedHeightInMobile\n                                \n                                \n                                        keepFixedWidthInMobile\n                                \n                                \n                                        margin\n                                \n                                \n                                        maxCols\n                                \n                                \n                                        maxItemArea\n                                \n                                \n                                        maxItemCols\n                                \n                                \n                                        maxItemRows\n                                \n                                \n                                        maxRows\n                                \n                                \n                                        minCols\n                                \n                                \n                                        minItemArea\n                                \n                                \n                                        minItemCols\n                                \n                                \n                                        minItemRows\n                                \n                                \n                                        minRows\n                                \n                                \n                                        mobileBreakpoint\n                                \n                                \n                                        outerMargin\n                                \n                                \n                                        outerMarginBottom\n                                \n                                \n                                        outerMarginLeft\n                                \n                                \n                                        outerMarginRight\n                                \n                                \n                                        outerMarginTop\n                                \n                                \n                                        pushDirections\n                                \n                                \n                                        pushItems\n                                \n                                \n                                        pushResizeItems\n                                \n                                \n                                        resizable\n                                \n                                \n                                        scrollSensitivity\n                                \n                                \n                                        scrollSpeed\n                                \n                                \n                                        scrollToNewItems\n                                \n                                \n                                        setGridSize\n                                \n                                \n                                        swap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [propName: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/dashboard/lib/gridsterConfigS.interface.ts:60\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        api\n                                    \n                                \n                                \n                                    \n                                        api:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compactType\n                                    \n                                \n                                \n                                    \n                                        compactType:     compactTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     compactTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultItemCols\n                                    \n                                \n                                \n                                    \n                                        defaultItemCols:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultItemRows\n                                    \n                                \n                                \n                                    \n                                        defaultItemRows:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableAutoPositionOnConflict\n                                    \n                                \n                                \n                                    \n                                        disableAutoPositionOnConflict:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePushOnDrag\n                                    \n                                \n                                \n                                    \n                                        disablePushOnDrag:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disablePushOnResize\n                                    \n                                \n                                \n                                    \n                                        disablePushOnResize:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableWarnings\n                                    \n                                \n                                \n                                    \n                                        disableWarnings:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableWindowResize\n                                    \n                                \n                                \n                                    \n                                        disableWindowResize:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayGrid\n                                    \n                                \n                                \n                                    \n                                        displayGrid:     displayGrids\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     displayGrids\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     Draggable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Draggable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyCellDragMaxCols\n                                    \n                                \n                                \n                                    \n                                        emptyCellDragMaxCols:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyCellDragMaxRows\n                                    \n                                \n                                \n                                    \n                                        emptyCellDragMaxRows:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableEmptyCellClick\n                                    \n                                \n                                \n                                    \n                                        enableEmptyCellClick:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableEmptyCellContextMenu\n                                    \n                                \n                                \n                                    \n                                        enableEmptyCellContextMenu:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableEmptyCellDrag\n                                    \n                                \n                                \n                                    \n                                        enableEmptyCellDrag:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableEmptyCellDrop\n                                    \n                                \n                                \n                                    \n                                        enableEmptyCellDrop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixedColWidth\n                                    \n                                \n                                \n                                    \n                                        fixedColWidth:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fixedRowHeight\n                                    \n                                \n                                \n                                    \n                                        fixedRowHeight:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gridType\n                                    \n                                \n                                \n                                    \n                                        gridType:     gridTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     gridTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreMarginInRow\n                                    \n                                \n                                \n                                    \n                                        ignoreMarginInRow:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepFixedHeightInMobile\n                                    \n                                \n                                \n                                    \n                                        keepFixedHeightInMobile:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepFixedWidthInMobile\n                                    \n                                \n                                \n                                    \n                                        keepFixedWidthInMobile:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                    \n                                \n                                \n                                    \n                                        margin:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxCols\n                                    \n                                \n                                \n                                    \n                                        maxCols:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxItemArea\n                                    \n                                \n                                \n                                    \n                                        maxItemArea:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxItemCols\n                                    \n                                \n                                \n                                    \n                                        maxItemCols:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxItemRows\n                                    \n                                \n                                \n                                    \n                                        maxItemRows:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxRows\n                                    \n                                \n                                \n                                    \n                                        maxRows:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minCols\n                                    \n                                \n                                \n                                    \n                                        minCols:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minItemArea\n                                    \n                                \n                                \n                                    \n                                        minItemArea:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minItemCols\n                                    \n                                \n                                \n                                    \n                                        minItemCols:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minItemRows\n                                    \n                                \n                                \n                                    \n                                        minItemRows:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minRows\n                                    \n                                \n                                \n                                    \n                                        minRows:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileBreakpoint\n                                    \n                                \n                                \n                                    \n                                        mobileBreakpoint:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outerMargin\n                                    \n                                \n                                \n                                    \n                                        outerMargin:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outerMarginBottom\n                                    \n                                \n                                \n                                    \n                                        outerMarginBottom:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outerMarginLeft\n                                    \n                                \n                                \n                                    \n                                        outerMarginLeft:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outerMarginRight\n                                    \n                                \n                                \n                                    \n                                        outerMarginRight:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outerMarginTop\n                                    \n                                \n                                \n                                    \n                                        outerMarginTop:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pushDirections\n                                    \n                                \n                                \n                                    \n                                        pushDirections:     PushDirections\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PushDirections\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pushItems\n                                    \n                                \n                                \n                                    \n                                        pushItems:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pushResizeItems\n                                    \n                                \n                                \n                                    \n                                        pushResizeItems:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizable\n                                    \n                                \n                                \n                                    \n                                        resizable:     Resizable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Resizable\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollSensitivity\n                                    \n                                \n                                \n                                    \n                                        scrollSensitivity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollSpeed\n                                    \n                                \n                                \n                                    \n                                        scrollSpeed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollToNewItems\n                                    \n                                \n                                \n                                    \n                                        scrollToNewItems:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setGridSize\n                                    \n                                \n                                \n                                    \n                                        setGridSize:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swap\n                                    \n                                \n                                \n                                    \n                                        swap:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {compactTypes, displayGrids, gridTypes} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport interface GridsterConfigS {\n  gridType: gridTypes;\n  fixedColWidth: number;\n  fixedRowHeight: number;\n  keepFixedHeightInMobile: boolean;\n  keepFixedWidthInMobile: boolean;\n  setGridSize: boolean;\n  compactType: compactTypes;\n  mobileBreakpoint: number;\n  minCols: number;\n  maxCols: number;\n  minRows: number;\n  maxRows: number;\n  defaultItemCols: number;\n  defaultItemRows: number;\n  maxItemCols: number;\n  maxItemRows: number;\n  minItemCols: number;\n  minItemRows: number;\n  minItemArea: number;\n  maxItemArea: number;\n  margin: number;\n  outerMargin: boolean;\n  outerMarginTop: number | null;\n  outerMarginRight: number | null;\n  outerMarginBottom: number | null;\n  outerMarginLeft: number | null;\n  scrollSensitivity: number;\n  scrollSpeed: number;\n  draggable: Draggable;\n  resizable: Resizable;\n  swap: boolean;\n  pushItems: boolean;\n  disablePushOnDrag: boolean;\n  disablePushOnResize: boolean;\n  disableAutoPositionOnConflict: boolean;\n  pushDirections: PushDirections;\n  pushResizeItems: boolean;\n  displayGrid: displayGrids;\n  disableWindowResize: boolean;\n  disableWarnings: boolean;\n  scrollToNewItems: boolean;\n  enableEmptyCellClick: boolean;\n  enableEmptyCellContextMenu: boolean;\n  enableEmptyCellDrop: boolean;\n  enableEmptyCellDrag: boolean;\n  emptyCellDragMaxCols: number;\n  emptyCellDragMaxRows: number;\n  ignoreMarginInRow: boolean;\n  api: {\n    resize: () => void,\n    optionsChanged: () => void,\n    getNextPossiblePosition: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled: boolean;\n  delayStart: number;\n\n  [propName: string]: any;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass: string;\n  ignoreContent: boolean;\n  dragHandleClass: string;\n  dropOverItems: boolean;\n  dropOverItemsCallback: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridsterEmptyCell.html":{"url":"injectables/GridsterEmptyCell.html","title":"injectable - GridsterEmptyCell","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridsterEmptyCell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emptyCellClick\n                            \n                            \n                                emptyCellClickTouch\n                            \n                            \n                                emptyCellContextMenu\n                            \n                            \n                                emptyCellDrag\n                            \n                            \n                                emptyCellDragTouch\n                            \n                            \n                                emptyCellDrop\n                            \n                            \n                                emptyCellExit\n                            \n                            \n                                emptyCellMMove\n                            \n                            \n                                emptyCellMMoveTouch\n                            \n                            \n                                emptyCellMove\n                            \n                            \n                                emptyCellUp\n                            \n                            \n                                emptyCellUpTouch\n                            \n                            \n                                initialItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                emptyCellClickCb\n                            \n                            \n                                emptyCellContextMenuCb\n                            \n                            \n                                emptyCellDragDrop\n                            \n                            \n                                emptyCellDragOver\n                            \n                            \n                                emptyCellMouseDown\n                            \n                            \n                                emptyCellMouseMove\n                            \n                            \n                                emptyCellMouseUp\n                            \n                            \n                                getValidItemFromEvent\n                            \n                            \n                                updateOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gridster: GridsterComponentInterface)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridster\n                                                  \n                                                        \n                                                                    GridsterComponentInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellClickCb\n                            \n                            \n                        \n                    \n                \n                \n                    \nemptyCellClickCb(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellContextMenuCb\n                            \n                            \n                        \n                    \n                \n                \n                    \nemptyCellContextMenuCb(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellDragDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \nemptyCellDragDrop(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:114\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellDragOver\n                            \n                            \n                        \n                    \n                \n                \n                    \nemptyCellDragOver(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:125\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellMouseDown\n                            \n                            \n                        \n                    \n                \n                \n                    \nemptyCellMouseDown(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellMouseMove\n                            \n                            \n                        \n                    \n                \n                \n                    \nemptyCellMouseMove(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:160\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellMouseUp\n                            \n                            \n                        \n                    \n                \n                \n                    \nemptyCellMouseUp(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:172\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidItemFromEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidItemFromEvent(e: any, oldItem?: GridsterItem | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:194\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        oldItem\n                                                        \n                                                                    GridsterItem | null\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     GridsterItem | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellClick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellClick:     Function | null\n\n                    \n                \n                    \n                        \n                            Type :     Function | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellClickTouch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellClickTouch:     Function | null\n\n                    \n                \n                    \n                        \n                            Type :     Function | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellContextMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellContextMenu:     Function | null\n\n                    \n                \n                    \n                        \n                            Type :     Function | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellDrag:     Function | null\n\n                    \n                \n                    \n                        \n                            Type :     Function | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellDragTouch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellDragTouch:     Function | null\n\n                    \n                \n                    \n                        \n                            Type :     Function | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellDrop:     Function | null\n\n                    \n                \n                    \n                        \n                            Type :     Function | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellExit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellExit:     Function | null\n\n                    \n                \n                    \n                        \n                            Type :     Function | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellMMove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellMMove:     Function\n\n                    \n                \n                    \n                        \n                            Type :     Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellMMoveTouch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellMMoveTouch:     Function\n\n                    \n                \n                    \n                        \n                            Type :     Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellMove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellMove:     Function | null\n\n                    \n                \n                    \n                        \n                            Type :     Function | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellUp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellUp:     Function\n\n                    \n                \n                    \n                        \n                            Type :     Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emptyCellUpTouch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emptyCellUpTouch:     Function\n\n                    \n                \n                    \n                        \n                            Type :     Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialItem:     GridsterItem | null\n\n                    \n                \n                    \n                        \n                            Type :     GridsterItem | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterEmptyCell {\n  initialItem: GridsterItem | null;\n  emptyCellClick: Function | null;\n  emptyCellClickTouch: Function | null;\n  emptyCellContextMenu: Function | null;\n  emptyCellDrop: Function | null;\n  emptyCellDrag: Function | null;\n  emptyCellDragTouch: Function | null;\n  emptyCellMMove: Function;\n  emptyCellMMoveTouch: Function;\n  emptyCellUp: Function;\n  emptyCellUpTouch: Function;\n  emptyCellMove: Function | null;\n  emptyCellExit: Function | null;\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.initialItem;\n    delete this.gridster.movingItem;\n    if (this.gridster.previewStyle) {\n      this.gridster.previewStyle();\n    }\n    delete this.gridster;\n    if (this.emptyCellExit) {\n      this.emptyCellExit();\n      this.emptyCellExit = null;\n    }\n  }\n\n  updateOptions(): void {\n    if (this.gridster.$options.enableEmptyCellClick && !this.emptyCellClick && this.gridster.options.emptyCellClickCallback) {\n      this.emptyCellClick = this.gridster.renderer.listen(this.gridster.el, 'click', this.emptyCellClickCb.bind(this));\n      this.emptyCellClickTouch = this.gridster.renderer.listen(this.gridster.el, 'touchend', this.emptyCellClickCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellClick && this.emptyCellClick && this.emptyCellClickTouch) {\n      this.emptyCellClick();\n      this.emptyCellClickTouch();\n      this.emptyCellClick = null;\n      this.emptyCellClickTouch = null;\n    }\n    if (this.gridster.$options.enableEmptyCellContextMenu && !this.emptyCellContextMenu &&\n      this.gridster.options.emptyCellContextMenuCallback) {\n      this.emptyCellContextMenu = this.gridster.renderer.listen(this.gridster.el, 'contextmenu', this.emptyCellContextMenuCb.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellContextMenu && this.emptyCellContextMenu) {\n      this.emptyCellContextMenu();\n      this.emptyCellContextMenu = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrop && !this.emptyCellDrop && this.gridster.options.emptyCellDropCallback) {\n      this.emptyCellDrop = this.gridster.renderer.listen(this.gridster.el, 'drop', this.emptyCellDragDrop.bind(this));\n      this.gridster.zone.runOutsideAngular(() => {\n        this.emptyCellMove = this.gridster.renderer.listen(this.gridster.el, 'dragover', this.emptyCellDragOver.bind(this));\n      });\n      this.emptyCellExit = this.gridster.renderer.listen('document', 'dragend', () => {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      });\n    } else if (!this.gridster.$options.enableEmptyCellDrop && this.emptyCellDrop && this.emptyCellMove && this.emptyCellExit) {\n      this.emptyCellDrop();\n      this.emptyCellMove();\n      this.emptyCellExit();\n      this.emptyCellMove = null;\n      this.emptyCellDrop = null;\n      this.emptyCellExit = null;\n    }\n    if (this.gridster.$options.enableEmptyCellDrag && !this.emptyCellDrag && this.gridster.options.emptyCellDragCallback) {\n      this.emptyCellDrag = this.gridster.renderer.listen(this.gridster.el, 'mousedown', this.emptyCellMouseDown.bind(this));\n      this.emptyCellDragTouch = this.gridster.renderer.listen(this.gridster.el, 'touchstart', this.emptyCellMouseDown.bind(this));\n    } else if (!this.gridster.$options.enableEmptyCellDrag && this.emptyCellDrag && this.emptyCellDragTouch) {\n      this.emptyCellDrag();\n      this.emptyCellDragTouch();\n      this.emptyCellDrag = null;\n      this.emptyCellDragTouch = null;\n    }\n  }\n\n  emptyCellClickCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellClickCallback) {\n      this.gridster.options.emptyCellClickCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellContextMenuCb(e: any): void {\n    if (this.gridster.movingItem || GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellContextMenuCallback) {\n      this.gridster.options.emptyCellContextMenuCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragDrop(e: any): void {\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    if (this.gridster.options.emptyCellDropCallback) {\n      this.gridster.options.emptyCellDropCallback(e, item);\n    }\n    this.gridster.cdRef.markForCheck();\n  }\n\n  emptyCellDragOver(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (item) {\n      e.dataTransfer.dropEffect = 'move';\n      this.gridster.movingItem = item;\n    } else {\n      e.dataTransfer.dropEffect = 'none';\n      this.gridster.movingItem = null;\n    }\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseDown(e: any): void {\n    if (GridsterUtils.checkContentClassForEmptyCellClickEvent(this.gridster, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e);\n    if (!item) {\n      return;\n    }\n    this.initialItem = item;\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n    this.gridster.zone.runOutsideAngular(() => {\n      this.emptyCellMMove = this.gridster.renderer.listen('window', 'mousemove', this.emptyCellMouseMove.bind(this));\n      this.emptyCellMMoveTouch = this.gridster.renderer.listen('window', 'touchmove', this.emptyCellMouseMove.bind(this));\n    });\n    this.emptyCellUp = this.gridster.renderer.listen('window', 'mouseup', this.emptyCellMouseUp.bind(this));\n    this.emptyCellUpTouch = this.gridster.renderer.listen('window', 'touchend', this.emptyCellMouseUp.bind(this));\n  }\n\n  emptyCellMouseMove(e: any): void {\n    e.preventDefault();\n    e.stopPropagation();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (!item) {\n      return;\n    }\n\n    this.gridster.movingItem = item;\n    this.gridster.previewStyle();\n  }\n\n  emptyCellMouseUp(e: any): void {\n    this.emptyCellMMove();\n    this.emptyCellMMoveTouch();\n    this.emptyCellUp();\n    this.emptyCellUpTouch();\n    const item = this.getValidItemFromEvent(e, this.initialItem);\n    if (item) {\n      this.gridster.movingItem = item;\n    }\n    if (this.gridster.options.emptyCellDragCallback && this.gridster.movingItem) {\n      this.gridster.options.emptyCellDragCallback(e, this.gridster.movingItem);\n    }\n    setTimeout(() => {\n      this.initialItem = null;\n      if (this.gridster) {\n        this.gridster.movingItem = null;\n        this.gridster.previewStyle();\n      }\n    });\n    this.gridster.cdRef.markForCheck();\n  }\n\n  getValidItemFromEvent(e: any, oldItem?: GridsterItem | null): GridsterItem | undefined {\n    e.preventDefault();\n    e.stopPropagation();\n    GridsterUtils.checkTouchEvent(e);\n    const rect = this.gridster.el.getBoundingClientRect();\n    const x = e.clientX + this.gridster.el.scrollLeft - rect.left - this.gridster.$options.margin;\n    const y = e.clientY + this.gridster.el.scrollTop - rect.top - this.gridster.$options.margin;\n    const item: GridsterItem = {\n      x: this.gridster.pixelsToPositionX(x, Math.floor, true),\n      y: this.gridster.pixelsToPositionY(y, Math.floor, true),\n      cols: this.gridster.$options.defaultItemCols,\n      rows: this.gridster.$options.defaultItemRows\n    };\n    if (oldItem) {\n      item.cols = Math.min(Math.abs(oldItem.x - item.x) + 1, this.gridster.$options.emptyCellDragMaxCols);\n      item.rows = Math.min(Math.abs(oldItem.y - item.y) + 1, this.gridster.$options.emptyCellDragMaxRows);\n      if (oldItem.x  this.gridster.$options.emptyCellDragMaxCols - 1) {\n        item.x = this.gridster.movingItem ? this.gridster.movingItem.x : 0;\n      }\n      if (oldItem.y  this.gridster.$options.emptyCellDragMaxRows - 1) {\n        item.y = this.gridster.movingItem ? this.gridster.movingItem.y : 0;\n      }\n    }\n    if (this.gridster.checkCollision(item)) {\n      return;\n    }\n    return item;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridsterItem.html":{"url":"interfaces/GridsterItem.html","title":"interface - GridsterItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridsterItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterItem.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cols\n                                \n                                \n                                            Optional\n                                        compactEnabled\n                                \n                                \n                                            Optional\n                                        dragEnabled\n                                \n                                \n                                            Optional\n                                        initCallback\n                                \n                                \n                                            Optional\n                                        maxItemArea\n                                \n                                \n                                            Optional\n                                        maxItemCols\n                                \n                                \n                                            Optional\n                                        maxItemRows\n                                \n                                \n                                            Optional\n                                        minItemArea\n                                \n                                \n                                            Optional\n                                        minItemCols\n                                \n                                \n                                            Optional\n                                        minItemRows\n                                \n                                \n                                            Optional\n                                        resizeEnabled\n                                \n                                \n                                        rows\n                                \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [propName: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/dashboard/lib/gridsterItem.interface.ts:17\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cols\n                                    \n                                \n                                \n                                    \n                                        cols:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        compactEnabled\n                                    \n                                \n                                \n                                    \n                                        compactEnabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dragEnabled\n                                    \n                                \n                                \n                                    \n                                        dragEnabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initCallback\n                                    \n                                \n                                \n                                    \n                                        initCallback:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxItemArea\n                                    \n                                \n                                \n                                    \n                                        maxItemArea:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxItemCols\n                                    \n                                \n                                \n                                    \n                                        maxItemCols:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxItemRows\n                                    \n                                \n                                \n                                    \n                                        maxItemRows:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minItemArea\n                                    \n                                \n                                \n                                    \n                                        minItemArea:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minItemCols\n                                    \n                                \n                                \n                                    \n                                        minItemCols:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minItemRows\n                                    \n                                \n                                \n                                    \n                                        minItemRows:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resizeEnabled\n                                    \n                                \n                                \n                                    \n                                        resizeEnabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rows\n                                    \n                                \n                                \n                                    \n                                        rows:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\n\nexport interface GridsterItem {\n  x: number;\n  y: number;\n  rows: number;\n  cols: number;\n  initCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  dragEnabled?: boolean;\n  resizeEnabled?: boolean;\n  compactEnabled?: boolean;\n  maxItemRows?: number;\n  minItemRows?: number;\n  maxItemCols?: number;\n  minItemCols?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n\n  [propName: string]: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridsterItemComponent.html":{"url":"components/GridsterItemComponent.html","title":"component - GridsterItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridsterItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/containers/dashboard/lib/gridsterItem.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                GridsterItemComponentInterface\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                gridster-item\n            \n\n            \n                styleUrls\n                gridsterItem.css\n            \n\n\n\n            \n                templateUrl\n                ./gridsterItem.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $item\n                            \n                            \n                                drag\n                            \n                            \n                                el\n                            \n                            \n                                gridster\n                            \n                            \n                                height\n                            \n                            \n                                init\n                            \n                            \n                                left\n                            \n                            \n                                notPlaced\n                            \n                            \n                                    Public\n                                renderer\n                            \n                            \n                                resize\n                            \n                            \n                                top\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canBeDragged\n                            \n                            \n                                canBeResized\n                            \n                            \n                                checkItemChanges\n                            \n                            \n                                itemChanged\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setSize\n                            \n                            \n                                updateItemSize\n                            \n                            \n                                updateOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, gridster: GridsterComponent, renderer: Renderer2, zone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        gridster\n                                                  \n                                                        \n                                                                    GridsterComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        zone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                            \n                            Type:    GridsterItem\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canBeDragged\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanBeDragged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:136\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canBeResized\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanBeResized()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:141\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkItemChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckItemChanges(newValue: GridsterItem, oldValue: GridsterItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newValue\n                                                        \n                                                                    GridsterItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        oldValue\n                                                        \n                                                                    GridsterItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \nitemChanged()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateItemSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateItemSize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        $item:     GridsterItem\n\n                    \n                \n                    \n                        \n                            Type :     GridsterItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drag:     GridsterDraggable\n\n                    \n                \n                    \n                        \n                            Type :     GridsterDraggable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridster:     GridsterComponent\n\n                    \n                \n                    \n                        \n                            Type :     GridsterComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        init:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        left:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notPlaced\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notPlaced:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer2\n\n                    \n                \n                    \n                        \n                            Type :     Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resize:     GridsterResizable\n\n                    \n                \n                    \n                        \n                            Type :     GridsterResizable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        top:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItem.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, Host, Input, NgZone, OnDestroy, OnInit, Renderer2, ViewEncapsulation} from '@angular/core';\n\nimport {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterUtils} from './gridsterUtils.service';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-item',\n  templateUrl: './gridsterItem.html',\n  styleUrls: ['./gridsterItem.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterItemComponent implements OnInit, OnDestroy, GridsterItemComponentInterface {\n  @Input() item: GridsterItem;\n  $item: GridsterItem;\n  el: any;\n  gridster: GridsterComponent;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  init: boolean;\n\n  constructor(el: ElementRef, @Host() gridster: GridsterComponent, public renderer: Renderer2, private zone: NgZone) {\n    this.el = el.nativeElement;\n    this.$item = {\n      cols: -1,\n      rows: -1,\n      x: -1,\n      y: -1,\n    };\n    this.gridster = gridster;\n    this.drag = new GridsterDraggable(this, gridster, this.zone);\n    this.resize = new GridsterResizable(this, gridster, this.zone);\n  }\n\n  ngOnInit(): void {\n    this.updateOptions();\n    this.gridster.addItem(this);\n  }\n\n  updateOptions(): void {\n    this.$item = GridsterUtils.merge(this.$item, this.item, {\n      cols: undefined,\n      rows: undefined,\n      x: undefined,\n      y: undefined,\n      dragEnabled: undefined,\n      resizeEnabled: undefined,\n      compactEnabled: undefined,\n      maxItemRows: undefined,\n      minItemRows: undefined,\n      maxItemCols: undefined,\n      minItemCols: undefined,\n      maxItemArea: undefined,\n      minItemArea: undefined,\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.gridster.removeItem(this);\n    delete this.gridster;\n    this.drag.destroy();\n    delete this.drag;\n    this.resize.destroy();\n    delete this.resize;\n  }\n\n  setSize(): void {\n    this.renderer.setStyle(this.el, 'display', this.notPlaced ? '' : 'block');\n    this.gridster.gridRenderer.updateItem(this.el, this.$item, this.renderer);\n    this.updateItemSize();\n  }\n\n  updateItemSize() {\n    const top = this.$item.y * this.gridster.curRowHeight;\n    const left = this.$item.x * this.gridster.curColWidth;\n    const width = this.$item.cols * this.gridster.curColWidth - this.gridster.$options.margin;\n    const height = this.$item.rows * this.gridster.curRowHeight - this.gridster.$options.margin;\n\n    if (!this.init && width > 0 && height > 0) {\n      this.init = true;\n      if (this.item.initCallback) {\n        this.item.initCallback(this.item, this);\n      }\n      if (this.gridster.options.itemInitCallback) {\n        this.gridster.options.itemInitCallback(this.item, this);\n      }\n      if (this.gridster.$options.scrollToNewItems) {\n        this.el.scrollIntoView(false);\n      }\n    }\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      if (this.gridster.options.itemResizeCallback) {\n        this.gridster.options.itemResizeCallback(this.item, this);\n      }\n    }\n    this.top = top;\n    this.left = left;\n  }\n\n  itemChanged(): void {\n    if (this.gridster.options.itemChangeCallback) {\n      this.gridster.options.itemChangeCallback(this.item, this);\n    }\n  }\n\n  checkItemChanges(newValue: GridsterItem, oldValue: GridsterItem): void {\n    if (newValue.rows === oldValue.rows && newValue.cols === oldValue.cols && newValue.x === oldValue.x && newValue.y === oldValue.y) {\n      return;\n    }\n    if (this.gridster.checkCollision(this.$item)) {\n      this.$item.x = oldValue.x || 0;\n      this.$item.y = oldValue.y || 0;\n      this.$item.cols = oldValue.cols || 1;\n      this.$item.rows = oldValue.rows || 1;\n      this.setSize();\n    } else {\n      this.item.cols = this.$item.cols;\n      this.item.rows = this.$item.rows;\n      this.item.x = this.$item.x;\n      this.item.y = this.$item.y;\n      this.gridster.calculateLayoutDebounce();\n      this.itemChanged();\n    }\n  }\n\n  canBeDragged(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.dragEnabled === undefined ? this.gridster.$options.draggable.enabled : this.$item.dragEnabled);\n  }\n\n  canBeResized(): boolean {\n    return !this.gridster.mobile &&\n      (this.$item.resizeEnabled === undefined ? this.gridster.$options.resizable.enabled : this.$item.resizeEnabled);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'GridsterItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridsterItemComponentInterface.html":{"url":"classes/GridsterItemComponentInterface.html","title":"class - GridsterItemComponentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridsterItemComponentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $item\n                            \n                            \n                                canBeDragged\n                            \n                            \n                                canBeResized\n                            \n                            \n                                checkItemChanges\n                            \n                            \n                                drag\n                            \n                            \n                                el\n                            \n                            \n                                gridster\n                            \n                            \n                                height\n                            \n                            \n                                item\n                            \n                            \n                                itemChanged\n                            \n                            \n                                left\n                            \n                            \n                                notPlaced\n                            \n                            \n                                renderer\n                            \n                            \n                                resize\n                            \n                            \n                                setSize\n                            \n                            \n                                top\n                            \n                            \n                                updateOptions\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        $item:     GridsterItem\n\n                    \n                \n                    \n                        \n                            Type :     GridsterItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canBeDragged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canBeDragged:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canBeResized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canBeResized:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkItemChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkItemChanges:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        drag:     GridsterDraggable\n\n                    \n                \n                    \n                        \n                            Type :     GridsterDraggable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridster:     GridsterComponentInterface\n\n                    \n                \n                    \n                        \n                            Type :     GridsterComponentInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     GridsterItem\n\n                    \n                \n                    \n                        \n                            Type :     GridsterItem\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            itemChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemChanged:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            left\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        left:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notPlaced\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notPlaced:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer2\n\n                    \n                \n                    \n                        \n                            Type :     Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resize:     GridsterResizable\n\n                    \n                \n                    \n                        \n                            Type :     GridsterResizable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        setSize:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            top\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        top:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updateOptions:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterDraggable} from './gridsterDraggable.service';\nimport {Renderer2} from '@angular/core';\nimport {GridsterResizable} from './gridsterResizable.service';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport abstract class GridsterItemComponentInterface {\n  item: GridsterItem;\n  $item: GridsterItem;\n  top: number;\n  left: number;\n  width: number;\n  height: number;\n  drag: GridsterDraggable;\n  resize: GridsterResizable;\n  notPlaced: boolean;\n  updateOptions: () => void;\n  itemChanged: () => void;\n  setSize: () => void;\n  checkItemChanges: (newValue: GridsterItem, oldValue: GridsterItem) => void;\n  canBeDragged: () => boolean;\n  canBeResized: () => boolean;\n  el: any;\n  gridster: GridsterComponentInterface;\n  renderer: Renderer2;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GridsterModule.html":{"url":"modules/GridsterModule.html","title":"module - GridsterModule","body":"\n                   \n\n\n\n\n  Modules\n  GridsterModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridsterModule\n\n\n\ncluster_GridsterModule_declarations\n\n\n\ncluster_GridsterModule_exports\n\n\n\n\nGridsterComponent\n\nGridsterComponent\n\n\n\nGridsterModule\n\nGridsterModule\n\nGridsterModule -->\n\nGridsterComponent->GridsterModule\n\n\n\n\n\nGridsterItemComponent\n\nGridsterItemComponent\n\nGridsterModule -->\n\nGridsterItemComponent->GridsterModule\n\n\n\n\n\nGridsterPreviewComponent\n\nGridsterPreviewComponent\n\nGridsterModule -->\n\nGridsterPreviewComponent->GridsterModule\n\n\n\n\n\nGridsterComponent \n\nGridsterComponent \n\nGridsterComponent  -->\n\nGridsterModule->GridsterComponent \n\n\n\n\n\nGridsterItemComponent \n\nGridsterItemComponent \n\nGridsterItemComponent  -->\n\nGridsterModule->GridsterItemComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridster.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GridsterComponent\n                            \n                            \n                                GridsterItemComponent\n                            \n                            \n                                GridsterPreviewComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    GridsterComponent\n                            \n                            \n                                    GridsterItemComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\nimport {GridsterItemComponent} from './gridsterItem.component';\nimport {GridsterPreviewComponent} from './gridsterPreview.component';\n\n@NgModule({\n  declarations: [\n    GridsterComponent,\n    GridsterItemComponent,\n    GridsterPreviewComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [GridsterComponent, GridsterItemComponent],\n  providers: [],\n  bootstrap: []\n})\nexport class GridsterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridsterPreviewComponent.html":{"url":"components/GridsterPreviewComponent.html","title":"component - GridsterPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridsterPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/containers/dashboard/lib/gridsterPreview.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                gridster-preview\n            \n\n            \n                styleUrls\n                gridsterPreview.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                el\n                            \n                            \n                                gridster\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                previewStyle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, gridster: GridsterComponent, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/dashboard/lib/gridsterPreview.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        gridster\n                                                  \n                                                        \n                                                                    GridsterComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterPreview.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previewStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \npreviewStyle(drag?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterPreview.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        drag\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterPreview.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridster:     GridsterComponent\n\n                    \n                \n                    \n                        \n                            Type :     GridsterComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterPreview.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            renderer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderer:     Renderer2\n\n                    \n                \n                    \n                        \n                            Type :     Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterPreview.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, Host, OnDestroy, Renderer2, ViewEncapsulation} from '@angular/core';\n\nimport {GridsterComponent} from './gridster.component';\n\n@Component({\n  selector: 'gridster-preview',\n  template: '',\n  styleUrls: ['./gridsterPreview.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class GridsterPreviewComponent implements OnDestroy {\n  el: any;\n  gridster: GridsterComponent;\n\n  constructor(el: ElementRef, @Host() gridster: GridsterComponent, public renderer: Renderer2) {\n    this.el = el.nativeElement;\n    this.gridster = gridster;\n    this.gridster.previewStyle = this.previewStyle.bind(this);\n  }\n\n  ngOnDestroy(): void {\n    delete this.el;\n    delete this.gridster.previewStyle;\n    delete this.gridster;\n  }\n\n  previewStyle(drag?: boolean): void {\n    if (!this.gridster.movingItem) {\n      this.renderer.setStyle(this.el, 'display', '');\n    } else {\n      if (this.gridster.compact && drag) {\n        this.gridster.compact.checkCompactItem(this.gridster.movingItem);\n      }\n      this.renderer.setStyle(this.el, 'display', 'block');\n      this.gridster.gridRenderer.updateItem(this.el, this.gridster.movingItem, this.renderer);\n    }\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'GridsterPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridsterRenderer.html":{"url":"injectables/GridsterRenderer.html","title":"injectable - GridsterRenderer","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridsterRenderer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterRenderer.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                getGridColumnStyle\n                            \n                            \n                                getGridRowStyle\n                            \n                            \n                                updateGridster\n                            \n                            \n                                updateItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gridster: GridsterComponentInterface)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/dashboard/lib/gridsterRenderer.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridster\n                                                  \n                                                        \n                                                                    GridsterComponentInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterRenderer.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getGridColumnStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetGridColumnStyle(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterRenderer.service.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { transform: string; width: string; height: string; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getGridRowStyle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetGridRowStyle(i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterRenderer.service.ts:131\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { transform: string; width: string; height: string; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateGridster\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateGridster()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterRenderer.service.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateItem(el: any, item: GridsterItem, renderer: Renderer2)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterRenderer.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        item\n                                                        \n                                                                    GridsterItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        renderer\n                                                        \n                                                                    Renderer2\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable, Renderer2} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\nimport {GridType} from './gridsterConfig.interface';\nimport {GridsterItem} from './gridsterItem.interface';\n\n@Injectable()\nexport class GridsterRenderer {\n\n  constructor(private gridster: GridsterComponentInterface) {\n  }\n\n  destroy(): void {\n    delete this.gridster;\n  }\n\n  updateItem(el: any, item: GridsterItem, renderer: Renderer2) {\n    if (this.gridster.mobile) {\n      renderer.setStyle(el, 'transform', '');\n      if (this.gridster.$options.keepFixedHeightInMobile) {\n        renderer.setStyle(el, 'height', (item.rows * this.gridster.$options.fixedRowHeight) + 'px');\n      } else {\n        renderer.setStyle(el, 'height', (this.gridster.curWidth / 2 * item.rows) + 'px');\n      }\n      if (this.gridster.$options.keepFixedWidthInMobile) {\n        renderer.setStyle(el, 'width', this.gridster.$options.fixedColWidth + 'px');\n      } else {\n        renderer.setStyle(el, 'width', '');\n      }\n\n      renderer.setStyle(el, 'margin-bottom', this.gridster.$options.margin + 'px');\n      renderer.setStyle(el, 'margin-right', '');\n    } else {\n      const x = Math.round(this.gridster.curColWidth * item.x);\n      const y = Math.round(this.gridster.curRowHeight * item.y);\n      const width = this.gridster.curColWidth * item.cols - this.gridster.$options.margin;\n      const height = (this.gridster.curRowHeight * item.rows - this.gridster.$options.margin);\n      const transform = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n      renderer.setStyle(el, 'transform', transform);\n      renderer.setStyle(el, 'width', width + 'px');\n      renderer.setStyle(el, 'height', height + 'px');\n      let marginBottom: string | null = null;\n      let marginRight: string | null = null;\n      if (this.gridster.$options.outerMargin) {\n        if (this.gridster.rows === item.rows + item.y) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginBottom = this.gridster.$options.outerMarginBottom + 'px';\n          } else {\n            marginBottom = this.gridster.$options.margin + 'px';\n          }\n        }\n        if (this.gridster.columns === item.cols + item.x) {\n          if (this.gridster.$options.outerMarginBottom !== null) {\n            marginRight = this.gridster.$options.outerMarginRight + 'px';\n          } else {\n            marginRight = this.gridster.$options.margin + 'px';\n          }\n        }\n      }\n\n      renderer.setStyle(el, 'margin-bottom', marginBottom);\n      renderer.setStyle(el, 'margin-right', marginRight);\n    }\n  }\n\n  updateGridster() {\n    let addClass = '';\n    let removeClass1 = '';\n    let removeClass2 = '';\n    let removeClass3 = '';\n    if (this.gridster.$options.gridType === GridType.Fit) {\n      addClass = GridType.Fit;\n      removeClass1 = GridType.ScrollVertical;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollVertical) {\n      this.gridster.curRowHeight = this.gridster.curColWidth;\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.ScrollHorizontal) {\n      this.gridster.curColWidth = this.gridster.curRowHeight;\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.Fixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.Fixed;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.ScrollHorizontal;\n    } else if (this.gridster.$options.gridType === GridType.VerticalFixed) {\n      this.gridster.curRowHeight = this.gridster.$options.fixedRowHeight +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollVertical;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollHorizontal;\n      removeClass3 = GridType.Fixed;\n    } else if (this.gridster.$options.gridType === GridType.HorizontalFixed) {\n      this.gridster.curColWidth = this.gridster.$options.fixedColWidth +\n        (this.gridster.$options.ignoreMarginInRow ? 0 : this.gridster.$options.margin);\n      addClass = GridType.ScrollHorizontal;\n      removeClass1 = GridType.Fit;\n      removeClass2 = GridType.ScrollVertical;\n      removeClass3 = GridType.Fixed;\n    }\n\n    if (this.gridster.mobile) {\n      this.gridster.renderer.removeClass(this.gridster.el, addClass);\n    } else {\n      this.gridster.renderer.addClass(this.gridster.el, addClass);\n    }\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass1);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass2);\n    this.gridster.renderer.removeClass(this.gridster.el, removeClass3);\n  }\n\n  getGridColumnStyle(i: number) {\n    return {\n      transform: 'translateX(' + this.gridster.curColWidth * i + 'px)',\n      width: this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.gridRows.length * this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n\n  getGridRowStyle(i: number) {\n    return {\n      transform: 'translateY(' + this.gridster.curRowHeight * i + 'px)',\n      width: this.gridster.gridColumns.length * this.gridster.curColWidth - this.gridster.$options.margin + 'px',\n      height: this.gridster.curRowHeight - this.gridster.$options.margin + 'px'\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GridsterResizeEventType.html":{"url":"interfaces/GridsterResizeEventType.html","title":"interface - GridsterResizeEventType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GridsterResizeEventType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterResizeEventType.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        e\n                                \n                                \n                                        n\n                                \n                                \n                                        s\n                                \n                                \n                                        w\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        e\n                                    \n                                \n                                \n                                    \n                                        e:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        n\n                                    \n                                \n                                \n                                    \n                                        n:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        s\n                                    \n                                \n                                \n                                    \n                                        s:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        w\n                                    \n                                \n                                \n                                    \n                                        w:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GridsterResizeEventType {\n  n: boolean;\n  s: boolean;\n  w: boolean;\n  e: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridsterSwap.html":{"url":"injectables/GridsterSwap.html","title":"injectable - GridsterSwap","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridsterSwap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                gridster\n                            \n                            \n                                    Private\n                                gridsterItem\n                            \n                            \n                                    Private\n                                swapedItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkSwap\n                            \n                            \n                                checkSwapBack\n                            \n                            \n                                destroy\n                            \n                            \n                                restoreSwapItem\n                            \n                            \n                                setSwapItem\n                            \n                            \n                                swapItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gridsterItem: GridsterItemComponentInterface)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridsterItem\n                                                  \n                                                        \n                                                                    GridsterItemComponentInterface\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkSwap\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckSwap(pushedBy: GridsterItemComponentInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pushedBy\n                                                        \n                                                                    GridsterItemComponentInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkSwapBack\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckSwapBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restoreSwapItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nrestoreSwapItem()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSwapItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetSwapItem()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swapItems\n                            \n                            \n                        \n                    \n                \n                \n                    \nswapItems()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gridster\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridster:     GridsterComponentInterface\n\n                    \n                \n                    \n                        \n                            Type :     GridsterComponentInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gridsterItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridsterItem:     GridsterItemComponentInterface\n\n                    \n                \n                    \n                        \n                            Type :     GridsterItemComponentInterface\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            swapedItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swapedItem:     GridsterItemComponentInterface | undefined\n\n                    \n                \n                    \n                        \n                            Type :     GridsterItemComponentInterface | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterSwap {\n  private swapedItem: GridsterItemComponentInterface | undefined;\n  private gridsterItem: GridsterItemComponentInterface;\n  private gridster: GridsterComponentInterface;\n\n  constructor(gridsterItem: GridsterItemComponentInterface) {\n    this.gridsterItem = gridsterItem;\n    this.gridster = gridsterItem.gridster;\n  }\n\n  destroy(): void {\n    delete this.gridster;\n    delete this.gridsterItem;\n    delete this.swapedItem;\n  }\n\n  swapItems(): void {\n    if (this.gridster.$options.swap) {\n      this.checkSwapBack();\n      this.checkSwap(this.gridsterItem);\n    }\n  }\n\n  checkSwapBack(): void {\n    if (this.swapedItem) {\n      const x: number = this.swapedItem.$item.x;\n      const y: number = this.swapedItem.$item.y;\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      if (this.gridster.checkCollision(this.swapedItem.$item)) {\n        this.swapedItem.$item.x = x;\n        this.swapedItem.$item.y = y;\n      } else {\n        this.swapedItem.setSize();\n        this.gridsterItem.$item.x = this.gridsterItem.item.x || 0;\n        this.gridsterItem.$item.y = this.gridsterItem.item.y || 0;\n        this.swapedItem = undefined;\n      }\n\n    }\n  }\n\n  restoreSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.$item.x = this.swapedItem.item.x || 0;\n      this.swapedItem.$item.y = this.swapedItem.item.y || 0;\n      this.swapedItem.setSize();\n      this.swapedItem = undefined;\n    }\n  }\n\n  setSwapItem(): void {\n    if (this.swapedItem) {\n      this.swapedItem.checkItemChanges(this.swapedItem.$item, this.swapedItem.item);\n      this.swapedItem = undefined;\n    }\n  }\n\n  checkSwap(pushedBy: GridsterItemComponentInterface): void {\n    const gridsterItemCollision: any = this.gridster.checkCollision(pushedBy.$item);\n    if (gridsterItemCollision && gridsterItemCollision !== true && gridsterItemCollision.canBeDragged()) {\n      const gridsterItemCollide: GridsterItemComponentInterface = gridsterItemCollision;\n      const copyCollisionX = gridsterItemCollide.$item.x;\n      const copyCollisionY = gridsterItemCollide.$item.y;\n      const copyX = pushedBy.$item.x;\n      const copyY = pushedBy.$item.y;\n      gridsterItemCollide.$item.x = pushedBy.item.x || 0;\n      gridsterItemCollide.$item.y = pushedBy.item.y || 0;\n      pushedBy.$item.x = gridsterItemCollide.item.x || 0;\n      pushedBy.$item.y = gridsterItemCollide.item.y || 0;\n      if (this.gridster.checkCollision(gridsterItemCollide.$item) || this.gridster.checkCollision(pushedBy.$item)) {\n        pushedBy.$item.x = copyX;\n        pushedBy.$item.y = copyY;\n        gridsterItemCollide.$item.x = copyCollisionX;\n        gridsterItemCollide.$item.y = copyCollisionY;\n      } else {\n        gridsterItemCollide.setSize();\n        this.swapedItem = gridsterItemCollide;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridsterUtils.html":{"url":"injectables/GridsterUtils.html","title":"injectable - GridsterUtils","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GridsterUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterUtils.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                checkContentClass\n                            \n                            \n                                    Static\n                                checkContentClassForEmptyCellClickEvent\n                            \n                            \n                                    Static\n                                checkContentClassForEvent\n                            \n                            \n                                    Static\n                                checkTouchEvent\n                            \n                            \n                                    Static\n                                compareItems\n                            \n                            \n                                    Static\n                                debounce\n                            \n                            \n                                    Static\n                                merge\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            checkContentClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkContentClass(target: any, current: any, contentClass: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterUtils.service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        current\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        contentClass\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            checkContentClassForEmptyCellClickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterUtils.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridster\n                                                        \n                                                                    GridsterComponentInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            checkContentClassForEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkContentClassForEvent(gridster: GridsterComponentInterface, e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterUtils.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridster\n                                                        \n                                                                    GridsterComponentInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            checkTouchEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkTouchEvent(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterUtils.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            compareItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        compareItems(a: literal type, b: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterUtils.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            debounce\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        debounce(func: Function, wait: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterUtils.service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        func\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        wait\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            merge\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        merge(obj1: any, obj2: any, properties: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/dashboard/lib/gridsterUtils.service.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj1\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        obj2\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        properties\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\nimport {GridsterComponentInterface} from './gridster.interface';\n\n@Injectable()\nexport class GridsterUtils {\n\n  static merge(obj1: any, obj2: any, properties: any) {\n    for (const p in obj2) {\n      if (obj2[p] !== void 0 && properties.hasOwnProperty(p)) {\n        if (typeof obj2[p] === 'object') {\n          obj1[p] = GridsterUtils.merge(obj1[p], obj2[p], properties[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      }\n    }\n\n    return obj1;\n  }\n\n  static debounce(func: Function, wait: number): () => void {\n    let timeout: any;\n    return function () {\n      const context = this, args = arguments;\n      const later = function () {\n        timeout = null;\n        func.apply(context, args);\n      };\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  static checkTouchEvent(e: any): void {\n    if (e.clientX === undefined && e.touches) {\n      if (e.touches && e.touches.length) {\n        e.clientX = e.touches[0].clientX;\n        e.clientY = e.touches[0].clientY;\n      } else if (e.changedTouches && e.changedTouches.length) {\n        e.clientX = e.changedTouches[0].clientX;\n        e.clientY = e.changedTouches[0].clientY;\n      }\n    }\n  }\n\n  static checkContentClassForEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    if (gridster.$options.draggable.ignoreContent) {\n      if (!GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass)) {\n        return true;\n      }\n    } else {\n      if (GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static checkContentClassForEmptyCellClickEvent(gridster: GridsterComponentInterface, e: any): boolean {\n    return GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.ignoreContentClass)\n      || GridsterUtils.checkContentClass(e.target, e.currentTarget, gridster.$options.draggable.dragHandleClass);\n  }\n\n  static checkContentClass(target: any, current: any, contentClass: string): boolean {\n    if (!target || target === current) {\n      return false;\n    }\n    if (target.hasAttribute('class') && target.getAttribute('class').split(' ').indexOf(contentClass) > -1) {\n      return true;\n    } else {\n      return GridsterUtils.checkContentClass(target.parentNode, current, contentClass);\n    }\n  }\n\n  static compareItems(a: { x: number, y: number }, b: { x: number, y: number }): number {\n    if (a.y > b.y) {\n      return -1;\n    } else if (a.y  b.x) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxGaugeAppend.html":{"url":"directives/NgxGaugeAppend.html","title":"directive - NgxGaugeAppend","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NgxGaugeAppend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngx-gauge-append\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"ngx-gauge-append\",\n  exportAs: \"ngxGaugeAppend\"\n})\nexport class NgxGaugeAppend {}\n\n@Directive({\n  selector: \"ngx-gauge-prepend\",\n  exportAs: \"ngxGaugePrepend\"\n})\nexport class NgxGaugePrepend {}\n\n@Directive({\n  selector: \"ngx-gauge-value\",\n  exportAs: \"ngxGaugeValue\"\n})\nexport class NgxGaugeValue {}\n\n@Directive({\n  selector: \"ngx-gauge-label\",\n  exportAs: \"ngxGaugeLabel\"\n})\nexport class NgxGaugeLabel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgxGaugeError.html":{"url":"classes/NgxGaugeError.html","title":"class - NgxGaugeError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgxGaugeError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/gauge/gauge-error.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/data/NxGauge/gauge/gauge-error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgxGaugeError extends Error {\n    constructor(message: string) {\n        super();\n        this.message = message;\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxGaugeLabel.html":{"url":"directives/NgxGaugeLabel.html","title":"directive - NgxGaugeLabel","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NgxGaugeLabel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngx-gauge-label\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"ngx-gauge-append\",\n  exportAs: \"ngxGaugeAppend\"\n})\nexport class NgxGaugeAppend {}\n\n@Directive({\n  selector: \"ngx-gauge-prepend\",\n  exportAs: \"ngxGaugePrepend\"\n})\nexport class NgxGaugePrepend {}\n\n@Directive({\n  selector: \"ngx-gauge-value\",\n  exportAs: \"ngxGaugeValue\"\n})\nexport class NgxGaugeValue {}\n\n@Directive({\n  selector: \"ngx-gauge-label\",\n  exportAs: \"ngxGaugeLabel\"\n})\nexport class NgxGaugeLabel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxGaugeModule.html":{"url":"modules/NgxGaugeModule.html","title":"module - NgxGaugeModule","body":"\n                   \n\n\n\n\n  Modules\n  NgxGaugeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxGaugeModule\n\n\n\ncluster_NgxGaugeModule_declarations\n\n\n\ncluster_NgxGaugeModule_exports\n\n\n\n\nNgxGauge\n\nNgxGauge\n\n\n\nNgxGaugeModule\n\nNgxGaugeModule\n\nNgxGaugeModule -->\n\nNgxGauge->NgxGaugeModule\n\n\n\n\n\nNgxGaugeAppend\n\nNgxGaugeAppend\n\nNgxGaugeModule -->\n\nNgxGaugeAppend->NgxGaugeModule\n\n\n\n\n\nNgxGaugeLabel\n\nNgxGaugeLabel\n\nNgxGaugeModule -->\n\nNgxGaugeLabel->NgxGaugeModule\n\n\n\n\n\nNgxGaugePrepend\n\nNgxGaugePrepend\n\nNgxGaugeModule -->\n\nNgxGaugePrepend->NgxGaugeModule\n\n\n\n\n\nNgxGaugeValue\n\nNgxGaugeValue\n\nNgxGaugeModule -->\n\nNgxGaugeValue->NgxGaugeModule\n\n\n\n\n\nNgxGauge \n\nNgxGauge \n\nNgxGauge  -->\n\nNgxGaugeModule->NgxGauge \n\n\n\n\n\nNgxGaugeAppend \n\nNgxGaugeAppend \n\nNgxGaugeAppend  -->\n\nNgxGaugeModule->NgxGaugeAppend \n\n\n\n\n\nNgxGaugeLabel \n\nNgxGaugeLabel \n\nNgxGaugeLabel  -->\n\nNgxGaugeModule->NgxGaugeLabel \n\n\n\n\n\nNgxGaugePrepend \n\nNgxGaugePrepend \n\nNgxGaugePrepend  -->\n\nNgxGaugeModule->NgxGaugePrepend \n\n\n\n\n\nNgxGaugeValue \n\nNgxGaugeValue \n\nNgxGaugeValue  -->\n\nNgxGaugeModule->NgxGaugeValue \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/ngx-gauge.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NgxGauge\n                            \n                            \n                                NgxGaugeAppend\n                            \n                            \n                                NgxGaugeLabel\n                            \n                            \n                                NgxGaugePrepend\n                            \n                            \n                                NgxGaugeValue\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NgxGauge\n                            \n                            \n                                    NgxGaugeAppend\n                            \n                            \n                                    NgxGaugeLabel\n                            \n                            \n                                    NgxGaugePrepend\n                            \n                            \n                                    NgxGaugeValue\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxGauge } from './gauge/gauge';\nimport { NgxGaugeLabel, NgxGaugeValue, NgxGaugePrepend, NgxGaugeAppend } from './gauge/gauge-directives';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\n  exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\n})\nexport class NgxGaugeModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxGaugePrepend.html":{"url":"directives/NgxGaugePrepend.html","title":"directive - NgxGaugePrepend","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NgxGaugePrepend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngx-gauge-prepend\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"ngx-gauge-append\",\n  exportAs: \"ngxGaugeAppend\"\n})\nexport class NgxGaugeAppend {}\n\n@Directive({\n  selector: \"ngx-gauge-prepend\",\n  exportAs: \"ngxGaugePrepend\"\n})\nexport class NgxGaugePrepend {}\n\n@Directive({\n  selector: \"ngx-gauge-value\",\n  exportAs: \"ngxGaugeValue\"\n})\nexport class NgxGaugeValue {}\n\n@Directive({\n  selector: \"ngx-gauge-label\",\n  exportAs: \"ngxGaugeLabel\"\n})\nexport class NgxGaugeLabel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxGaugeValue.html":{"url":"directives/NgxGaugeValue.html","title":"directive - NgxGaugeValue","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NgxGaugeValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngx-gauge-value\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"ngx-gauge-append\",\n  exportAs: \"ngxGaugeAppend\"\n})\nexport class NgxGaugeAppend {}\n\n@Directive({\n  selector: \"ngx-gauge-prepend\",\n  exportAs: \"ngxGaugePrepend\"\n})\nexport class NgxGaugePrepend {}\n\n@Directive({\n  selector: \"ngx-gauge-value\",\n  exportAs: \"ngxGaugeValue\"\n})\nexport class NgxGaugeValue {}\n\n@Directive({\n  selector: \"ngx-gauge-label\",\n  exportAs: \"ngxGaugeLabel\"\n})\nexport class NgxGaugeLabel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PushDirections.html":{"url":"interfaces/PushDirections.html","title":"interface - PushDirections","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PushDirections\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterConfig.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        east\n                                \n                                \n                                        north\n                                \n                                \n                                        south\n                                \n                                \n                                        west\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        east\n                                    \n                                \n                                \n                                    \n                                        east:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        north\n                                    \n                                \n                                \n                                    \n                                        north:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        south\n                                    \n                                \n                                \n                                    \n                                        south:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        west\n                                    \n                                \n                                \n                                    \n                                        west:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes = 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up'\n}\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Resizable.html":{"url":"interfaces/Resizable.html","title":"interface - Resizable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Resizable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/containers/dashboard/lib/gridsterConfig.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    DragBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        handles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handles\n                                    \n                                \n                                \n                                    \n                                        handles:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {GridsterItem} from './gridsterItem.interface';\nimport {GridsterItemComponentInterface} from './gridsterItemComponent.interface';\nimport {GridsterComponentInterface} from './gridster.interface';\n\nexport type gridTypes = 'fit' | 'scrollVertical' | 'scrollHorizontal' | 'fixed' | 'verticalFixed' | 'horizontalFixed';\nexport type displayGrids = 'always' | 'onDrag&Resize' | 'none';\nexport type compactTypes = 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up';\n\nexport enum GridType {\n  Fit = 'fit',\n  ScrollVertical = 'scrollVertical',\n  ScrollHorizontal = 'scrollHorizontal',\n  Fixed = 'fixed',\n  VerticalFixed = 'verticalFixed',\n  HorizontalFixed = 'horizontalFixed'\n}\n\nexport enum DisplayGrid {\n  Always = 'always',\n  OnDragAndResize = 'onDrag&Resize',\n  None = 'none'\n}\n\nexport enum CompactType {\n  None = 'none',\n  CompactUp = 'compactUp',\n  CompactLeft = 'compactLeft',\n  CompactUpAndLeft = 'compactUp&Left',\n  CompactLeftAndUp = 'compactLeft&Up'\n}\n\nexport interface GridsterConfig {\n  gridType?: gridTypes;\n  fixedColWidth?: number;\n  fixedRowHeight?: number;\n  keepFixedHeightInMobile?: boolean;\n  keepFixedWidthInMobile?: boolean;\n  setGridSize?: boolean;\n  compactType?: compactTypes;\n  mobileBreakpoint?: number;\n  minCols?: number;\n  maxCols?: number;\n  minRows?: number;\n  maxRows?: number;\n  defaultItemCols?: number;\n  defaultItemRows?: number;\n  maxItemCols?: number;\n  maxItemRows?: number;\n  minItemCols?: number;\n  minItemRows?: number;\n  minItemArea?: number;\n  maxItemArea?: number;\n  margin?: number;\n  outerMargin?: boolean;\n  outerMarginTop?: number | null;\n  outerMarginRight?: number | null;\n  outerMarginBottom?: number | null;\n  outerMarginLeft?: number | null;\n  scrollSensitivity?: number | null;\n  scrollSpeed?: number;\n  initCallback?: (gridster: GridsterComponentInterface) => void;\n  destroyCallback?: (gridster: GridsterComponentInterface) => void;\n  gridSizeChangedCallback?: (gridster: GridsterComponentInterface) => void;\n  itemChangeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemResizeCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemInitCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemRemovedCallback?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface) => void;\n  itemValidateCallback?: (item: GridsterItem) => boolean;\n  draggable?: Draggable;\n  resizable?: Resizable;\n  swap?: boolean;\n  pushItems?: boolean;\n  disablePushOnDrag?: boolean;\n  disablePushOnResize?: boolean;\n  disableAutoPositionOnConflict?: boolean;\n  pushDirections?: PushDirections;\n  pushResizeItems?: boolean;\n  displayGrid?: displayGrids;\n  disableWindowResize?: boolean;\n  disableWarnings?: boolean;\n  scrollToNewItems?: boolean;\n  enableEmptyCellClick?: boolean;\n  enableEmptyCellContextMenu?: boolean;\n  enableEmptyCellDrop?: boolean;\n  enableEmptyCellDrag?: boolean;\n  emptyCellClickCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellContextMenuCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDropCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragCallback?: (event: MouseEvent, item: GridsterItem) => void;\n  emptyCellDragMaxCols?: number;\n  emptyCellDragMaxRows?: number;\n  ignoreMarginInRow?: boolean;\n  api?: {\n    resize?: () => void,\n    optionsChanged?: () => void,\n    getNextPossiblePosition?: (newItem: GridsterItem) => boolean,\n    getFirstPossiblePosition?: (item: GridsterItem) => GridsterItem,\n    getLastPossiblePosition?: (item: GridsterItem) => GridsterItem,\n  };\n\n  [propName: string]: any;\n}\n\nexport interface DragBase {\n  enabled?: boolean;\n  stop?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => Promise | void;\n  start?: (item: GridsterItem, itemComponent: GridsterItemComponentInterface, event: MouseEvent) => void;\n  delayStart?: number;\n}\n\nexport interface Draggable extends DragBase {\n  ignoreContentClass?: string;\n  ignoreContent?: boolean;\n  dragHandleClass?: string;\n  dropOverItems?: boolean;\n  dropOverItemsCallback?: (source: GridsterItem, target: GridsterItem, grid?: GridsterComponentInterface) => void;\n}\n\nexport interface Resizable extends DragBase {\n  handles?: {\n    s: boolean,\n    e: boolean,\n    n: boolean,\n    w: boolean,\n    se: boolean,\n    ne: boolean,\n    sw: boolean,\n    nw: boolean\n  };\n}\n\nexport interface PushDirections {\n  north: boolean;\n  east: boolean;\n  south: boolean;\n  west: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCDashboardHeaderComponent.html":{"url":"components/WCDashboardHeaderComponent.html","title":"component - WCDashboardHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCDashboardHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-dashboard-header\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-dashboard-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _class\n                            \n                            \n                                    Private\n                                _title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:18\n                                \n                            \n\n                \n                    \n                        settitle(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n\n                \n                    \n                        getclass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:26\n                                \n                            \n\n                \n                    \n                        setclass(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'wc-dashboard-header',\n  templateUrl: './wc-dashboard-header.component.html',\n  styles: []\n})\nexport class WCDashboardHeaderComponent implements OnInit {\n  \n  private _title:string;\n  private _class:string = \"\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get title():any {\n    return this._title;\n  }\n\n  @Input() set title(value:any) {\n    this._title = value;\n  }\n\n  get class():any {\n    return this._class;\n  }\n\n  @Input() set class(value:any) {\n    this._class = value;\n  }\n\n}\n\n    \n\n    \n        \n  {{title}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{title}}'\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCDashboardHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCDataCounterComponent.html":{"url":"components/WCDataCounterComponent.html","title":"component - WCDataCounterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCDataCounterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/data/Counter/WCDataCounterComponent.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-data-counter\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-data-counter.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _class\n                            \n                            \n                                    Private\n                                _counterClass\n                            \n                            \n                                    Private\n                                _title\n                            \n                            \n                                    Private\n                                _value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                counterClass\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        counterClass\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _counterClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _counterClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"warn\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:20\n                                \n                            \n\n                \n                    \n                        settitle(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n\n                \n                    \n                        getclass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:28\n                                \n                            \n\n                \n                    \n                        setclass(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:36\n                                \n                            \n\n                \n                    \n                        setvalue(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        counterClass\n                    \n                \n\n                \n                    \n                        getcounterClass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:44\n                                \n                            \n\n                \n                    \n                        setcounterClass(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'wc-data-counter',\n  templateUrl: './wc-data-counter.component.html',\n  styles: []\n})\nexport class WCDataCounterComponent implements OnInit {\n  \n  private _value:any;\n  private _title:string;\n  private _class:string = \"\";\n  private _counterClass:string = \"warn\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get title():string {\n    return this._title;\n  }\n\n  @Input() set title(value:string) {\n    this._title = value;\n  }\n\n  get class():string {\n    return this._class;\n  }\n\n  @Input() set class(value:string) {\n    this._class = value;\n  }\n\n  get value():any {\n    return this._value;\n  }\n\n  @Input() set value(value:any) {\n    this._value = value;\n  }\n\n  get counterClass():string {\n    return this._counterClass;\n  }\n\n  @Input() set counterClass(value:string) {\n    this._counterClass = value;\n  }\n\n}\n\n    \n\n    \n        \n    {{value}}\n    {{title}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{value}}    {{title}}'\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCDataCounterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCGaugeComponent.html":{"url":"components/WCGaugeComponent.html","title":"component - WCGaugeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCGaugeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/data/Gauge/wc-gauge.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-gauge\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-gauge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _class\n                            \n                            \n                                    Private\n                                _counterClass\n                            \n                            \n                                    Private\n                                _title\n                            \n                            \n                                    Private\n                                _value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                counterClass\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        counterClass\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _counterClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _counterClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"warn\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:20\n                                \n                            \n\n                \n                    \n                        settitle(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n\n                \n                    \n                        getclass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:28\n                                \n                            \n\n                \n                    \n                        setclass(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:36\n                                \n                            \n\n                \n                    \n                        setvalue(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        counterClass\n                    \n                \n\n                \n                    \n                        getcounterClass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:44\n                                \n                            \n\n                \n                    \n                        setcounterClass(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'wc-gauge',\n  templateUrl: './wc-gauge.component.html',\n  styles: []\n})\nexport class WCGaugeComponent implements OnInit {\n  \n  private _value:any;\n  private _title:string;\n  private _class:string = \"\";\n  private _counterClass:string = \"warn\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get title():string {\n    return this._title;\n  }\n\n  @Input() set title(value:string) {\n    this._title = value;\n  }\n\n  get class():string {\n    return this._class;\n  }\n\n  @Input() set class(value:string) {\n    this._class = value;\n  }\n\n  get value():any {\n    return this._value;\n  }\n\n  @Input() set value(value:any) {\n    this._value = value;\n  }\n\n  get counterClass():string {\n    return this._counterClass;\n  }\n\n  @Input() set counterClass(value:string) {\n    this._counterClass = value;\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                {{value}}%\n            \n        \n        {{title}}\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{value}}%                            {{title}}    '\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCGaugeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCGridButtonEditorComponent.html":{"url":"components/WCGridButtonEditorComponent.html","title":"component - WCGridButtonEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCGridButtonEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid-editor/WCGridButtonEditorComponent.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-grid-editor\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-grid-btn-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _column\n                            \n                            \n                                    Private\n                                _columnIndex\n                            \n                            \n                                    Private\n                                _dataItem\n                            \n                            \n                                    Private\n                                _mainClass\n                            \n                            \n                                    Private\n                                _rowIndex\n                            \n                            \n                                    Private\n                                _value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onKOPressed\n                            \n                            \n                                onOKPressed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                columnIndex\n                            \n                            \n                                dataItem\n                            \n                            \n                                mainClass\n                            \n                            \n                                rowIndex\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onConfirmation\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnIndex\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataItem\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mainClass\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rowIndex\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:75\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCancel\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onConfirmation\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onKOPressed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonKOPressed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onOKPressed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonOKPressed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _column\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _column:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _columnIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _columnIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _dataItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _dataItem:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _mainClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _mainClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _rowIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rowIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dataItem\n                    \n                \n\n                \n                    \n                        getdataItem()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:27\n                                \n                            \n\n                \n                    \n                        setdataItem(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        rowIndex\n                    \n                \n\n                \n                    \n                        getrowIndex()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:35\n                                \n                            \n\n                \n                    \n                        setrowIndex(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        columnIndex\n                    \n                \n\n                \n                    \n                        getcolumnIndex()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:43\n                                \n                            \n\n                \n                    \n                        setcolumnIndex(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n\n                \n                    \n                        getcolumn()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:51\n                                \n                            \n\n                \n                    \n                        setcolumn(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        rowId\n                    \n                \n\n                \n                    \n                        getrowId()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:59\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mainClass\n                    \n                \n\n                \n                    \n                        getmainClass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:63\n                                \n                            \n\n                \n                    \n                        setmainClass(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:67\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:71\n                                \n                            \n\n                \n                    \n                        setvalue(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid-editor/WCGridButtonEditorComponent.ts:75\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'wc-grid-editor',\n  templateUrl: './wc-grid-btn-editor.component.html',\n  styles: []\n})\nexport class WCGridButtonEditorComponent implements OnInit {\n  \n  private _dataItem:any;\n  private _rowIndex:number;\n  private _columnIndex:number;\n  private _column:number;\n  private _mainClass:string = \"\";\n  private _value:string;\n  \n  @Output() \n  onConfirmation:EventEmitter = new EventEmitter();\n  @Output() \n  onCancel:EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get dataItem():any {\n    return this._dataItem;\n  }\n\n  @Input() set dataItem(value:any) {\n    this._dataItem = value;\n  }\n\n  get rowIndex():number {\n    return this._rowIndex;\n  }\n\n  @Input() set rowIndex(value:number) {\n    this._rowIndex = value;\n  }\n\n  get columnIndex():number {\n    return this._columnIndex;\n  }\n\n  @Input() set columnIndex(value:number) {\n    this._columnIndex = value;\n  }\n\n  get column():number {\n    return this._column;\n  }\n\n  @Input() set column(value:number) {\n    this._column = value;\n  }\n\n  get rowId():string {\n      return this._rowIndex +\"_\" + this._columnIndex;\n  }\n\n  get mainClass():string {\n    return this._mainClass;\n  }\n\n  @Input() set mainClass(value:string) {\n    this._mainClass = value;\n  }\n\n  get value():string {\n    return this._value;\n  }\n\n  @Input() set value(value:string) {\n    this._value = value;\n    console.log(\">>>> Value: \", value);\n  }\n\n  onOKPressed():void {\n     console.log(\">>>> onOKPressed (on component)\")\n     this.onConfirmation.emit();\n    }\n\n  onKOPressed():void {\n    console.log(\">>>> onKOPressed (on component)\")\n    this.onCancel.emit();\n  }\n\n}\n\n    \n\n    \n        \n        \n          \n                {{value}}\n          \n        \n          Suspend?\n          \n            \n              \n            \n          \n          \n            \n              \n            \n          \n        \n      \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{value}}                            Suspend?                                                                                                                                  '\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCGridButtonEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCGridCellCommandComponent.html":{"url":"components/WCGridCellCommandComponent.html","title":"component - WCGridCellCommandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCGridCellCommandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-grid-cell-renderer-command\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-grid-cell-renderer-command.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _caption\n                            \n                            \n                                    Private\n                                _id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                caption\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        caption\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _caption\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _caption:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Delete ?\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        caption\n                    \n                \n\n                \n                    \n                        getcaption()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts:24\n                                \n                            \n\n                \n                    \n                        setcaption(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts:33\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'wc-grid-cell-renderer-command',\n  templateUrl: './wc-grid-cell-renderer-command.component.html',\n  styles: []\n})\nexport class WCGridCellCommandComponent implements OnInit {\n\n  private _caption:string = \"Delete ?\";\n  private _id:string;\n\n  constructor(private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n  }\n\n  @Input() set caption(value:string) {\n    this._caption = value;\n    this.cd.markForCheck();\n  }\n\n  get caption():string {\n    return this._caption;\n  }\n\n  @Input() set id(value:string) {\n    this._id = value;\n    this.cd.markForCheck();\n  }\n\n  get id():string {\n    return this._id;\n  }\n\n}\n\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n        {{caption}}\n        \n            \n                \n             \n        \n        \n            \n                    \n            \n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{caption}}                                                                                                                         '\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCGridCellCommandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCGridCellComponent.html":{"url":"components/WCGridCellComponent.html","title":"component - WCGridCellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCGridCellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid/cell/wc-grid-cell.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [wc-grid-cell]\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-grid-cell.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _column\n                            \n                            \n                                    Private\n                                _configuration\n                            \n                            \n                                    Private\n                                _data\n                            \n                            \n                                    Private\n                                _row\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cellId\n                            \n                            \n                                isCommandCell\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                column\n                            \n                            \n                                configuration\n                            \n                            \n                                data\n                            \n                            \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        column\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        configuration\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        row\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:55\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cellId\n                            \n                            \n                        \n                    \n                \n                \n                    \ncellId()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCommandCell\n                            \n                            \n                        \n                    \n                \n                \n                    \nisCommandCell()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _column\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _column:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _configuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _configuration:     WCGridColumnDef\n\n                    \n                \n                    \n                        \n                            Type :     WCGridColumnDef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _row\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _row:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:25\n                                \n                            \n\n                \n                    \n                        setdata(data: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        configuration\n                    \n                \n\n                \n                    \n                        getconfiguration()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:37\n                                \n                            \n\n                \n                    \n                        setconfiguration(configuration: )\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            configuration\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        row\n                    \n                \n\n                \n                    \n                        getrow()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:51\n                                \n                            \n\n                \n                    \n                        setrow(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n\n                \n                    \n                        getcolumn()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:60\n                                \n                            \n\n                \n                    \n                        setcolumn(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/cell/wc-grid-cell.component.ts:64\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { WCGridColumnDef } from '../WCGridColumnDef'\nimport { WCGridColumnType } from '../WCGridColumnDef'\nimport { WCGridCellCommandComponent } from '../cell-renderers/command/wc-grid-cell-renderer-command.component'\n\n@Component({\n    selector: '[wc-grid-cell]',\n    templateUrl: './wc-grid-cell.component.html',\n    styles: []\n  })\n  export class WCGridCellComponent implements OnInit {\n    \n    private _data:any;\n    private _configuration:WCGridColumnDef;\n    private _row:number;\n    private _column:number;\n  \n    constructor(private cd: ChangeDetectorRef) { }\n  \n    ngOnInit() {\n    }\n  \n  \n    get data():any {\n        return this._data;\n    }\n    \n    @Input() set data(data:any) {\n      //console.log(\"****** SET DATA CALLED!!! \", data)\n      this._data = data;\n      this.cd.markForCheck();\n      //TODO!! refresh();\n    }\n    \n    \n    get configuration():WCGridColumnDef {\n      return this._configuration;\n    }\n  \n    @Input() set configuration(configuration:WCGridColumnDef) {\n      //console.log(\"****** SET CONFIGURATION!!! \", configuration)\n      this._configuration = configuration;\n      //TODO!! prepare grid UI\n    }\n    \n    isCommandCell():boolean {\n      return (this._configuration.type==WCGridColumnType.Command);\n    }\n\n    get row():number {\n      return this._row;\n    }\n  \n    @Input() set row(value:number) {\n      this._row = value;\n    }\n\n\n    get column():number {\n      return this._column;\n    }\n  \n    @Input() set column(value:number) {\n      this._column = value;\n    }\n\n    cellId():string {\n      return this._configuration.name +\"_\"+ this._row +\"_\"+ this._column;\n    }\n\n  }\n  \n  \n    \n\n    \n        \n        \n\n{{data}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{data}}'\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCGridCellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WCGridColumnDef.html":{"url":"classes/WCGridColumnDef.html","title":"class - WCGridColumnDef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  WCGridColumnDef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/grid/WCGridColumnDef.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                label\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                sortable\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/WCGridColumnDef.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/WCGridColumnDef.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/WCGridColumnDef.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     WCGridColumnType\n\n                    \n                \n                    \n                        \n                            Type :     WCGridColumnType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/WCGridColumnDef.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum WCGridColumnType {\n  Default = 1,\n  Command,\n  Editable\n}\n\nexport class WCGridColumnDef {\n    name:string;\n    label?:string;\n    sortable?:boolean;\n    type?:WCGridColumnType;\n  }\n  \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCGridComponent.html":{"url":"components/WCGridComponent.html","title":"component - WCGridComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCGridComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid/wc-grid.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-grid\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-grid.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _configuration\n                            \n                            \n                                    Private\n                                _data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                objectKeys\n                            \n                            \n                                rowValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                configuration\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/grid/wc-grid.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        configuration\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/wc-grid.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/wc-grid.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/wc-grid.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            objectKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \nobjectKeys(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/wc-grid.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rowValues\n                            \n                            \n                        \n                    \n                \n                \n                    \nrowValues(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/wc-grid.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _configuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _configuration:     WCGridConfiguration\n\n                    \n                \n                    \n                        \n                            Type :     WCGridConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/wc-grid.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _data:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/wc-grid.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/wc-grid.component.ts:22\n                                \n                            \n\n                \n                    \n                        setdata(data: )\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/wc-grid.component.ts:26\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        configuration\n                    \n                \n\n                \n                    \n                        getconfiguration()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/wc-grid.component.ts:33\n                                \n                            \n\n                \n                    \n                        setconfiguration(configuration: )\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/wc-grid.component.ts:37\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            configuration\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport {  ChangeDetectorRef } from '@angular/core';\nimport { WCGridConfiguration } from './WCGridConfiguration'\nimport { WCGridRowComponent } from './row/wc-grid-row.component'\n\n@Component({\n  selector: 'wc-grid',\n  templateUrl: './wc-grid.component.html',\n  styles: []\n})\nexport class WCGridComponent implements OnInit {\n  \n  private _data:Array;\n  private _configuration:WCGridConfiguration;\n\n  constructor(private cd: ChangeDetectorRef) { }\n\n  ngOnInit() {\n  }\n\n\n  get data():Array {\n      return this._data;\n  }\n  \n  @Input() set data(data:Array) {\n    //console.log(\"****** SET DATA CALLED!!! \", data)\n    this._data = data;\n    this.cd.markForCheck();\n    //TODO!! refresh();\n  }\n\n  get configuration():WCGridConfiguration {\n    return this._configuration;\n  }\n\n  @Input() set configuration(configuration:WCGridConfiguration) {\n    //console.log(\"****** SET CONFIGURATION!!! \", configuration)\n    this._configuration = configuration;\n    //TODO!! prepare grid UI\n  }\n\n  rowValues(data:any):Array{\n    let cols = this._configuration.columns;\n    let arr = [];\n    for (var i=0;i{\n    return Object.keys(data);\n  }\n\n}\n\n\n    \n\n    \n        \n    \n        \n            \n                    {{ column.name }}\n            \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{ column.name }}                                '\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCGridComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WCGridConfiguration.html":{"url":"classes/WCGridConfiguration.html","title":"class - WCGridConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  WCGridConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/grid/WCGridConfiguration.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columns:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/WCGridConfiguration.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { WCGridColumnDef } from './WCGridColumnDef'\n\nexport class WCGridConfiguration {\n    columns:Array\n}\n  \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCGridRowComponent.html":{"url":"components/WCGridRowComponent.html","title":"component - WCGridRowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCGridRowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid/row/wc-grid-row.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [wc-grid-row]\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-grid-row.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _configuration\n                            \n                            \n                                    Private\n                                _data\n                            \n                            \n                                    Private\n                                _row\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                configuration\n                            \n                            \n                                data\n                            \n                            \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/grid/row/wc-grid-row.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        configuration\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        row\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:50\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _configuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _configuration:     WCGridConfiguration\n\n                    \n                \n                    \n                        \n                            Type :     WCGridConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _data:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _row\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _row:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:24\n                                \n                            \n\n                \n                    \n                        setdata(data: )\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        configuration\n                    \n                \n\n                \n                    \n                        getconfiguration()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:36\n                                \n                            \n\n                \n                    \n                        setconfiguration(configuration: )\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            configuration\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        row\n                    \n                \n\n                \n                    \n                        getrow()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:46\n                                \n                            \n\n                \n                    \n                        setrow(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/row/wc-grid-row.component.ts:50\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { WCGridConfiguration } from '../WCGridConfiguration'\nimport { WCGridCellComponent } from '../cell/wc-grid-cell.component'\n\n \n@Component({\n    selector: '[wc-grid-row]',\n    templateUrl: './wc-grid-row.component.html',\n    styles: []\n  })\n  export class WCGridRowComponent implements OnInit {\n    \n    private _data:Array;\n    private _configuration:WCGridConfiguration;\n    private _row:number;\n  \n    constructor(private cd: ChangeDetectorRef) { }\n  \n    ngOnInit() {\n    }\n  \n  \n    get data():Array {\n        return this._data;\n    }\n    \n    @Input() set data(data:Array) {\n      //console.log(\"****** SET DATA CALLED!!! \", data)\n      this._data = data;\n      this.cd.markForCheck();\n      //TODO!! refresh();\n    }\n    \n    \n    get configuration():WCGridConfiguration {\n      return this._configuration;\n    }\n  \n    @Input() set configuration(configuration:WCGridConfiguration) {\n      //console.log(\"****** SET CONFIGURATION!!! \", configuration)\n      this._configuration = configuration;\n      //TODO!! prepare grid UI\n    }\n    \n    get row():number {\n      return this._row;\n    }\n  \n    @Input() set row(value:number) {\n      this._row = value;\n    }\n\n  }\n  \n  \n    \n\n    \n        \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCGridRowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCPanelComponent.html":{"url":"components/WCPanelComponent.html","title":"component - WCPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/containers/panel/WCPanelComponent.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-panel\n            \n\n            \n                styleUrls\n                wc-panel.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wc-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _class\n                            \n                            \n                                    Private\n                                _title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/panel/WCPanelComponent.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:18\n                                \n                            \n\n                \n                    \n                        settitle(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n\n                \n                    \n                        getclass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:26\n                                \n                            \n\n                \n                    \n                        setclass(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'wc-panel',\n  templateUrl: './wc-panel.component.html',\n  styleUrls: [ './wc-panel.component.css' ]\n})\nexport class WCPanelComponent implements OnInit {\n  \n  private _title:string;\n  private _class:string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get title():any {\n    return this._title;\n  }\n\n  @Input() set title(value:any) {\n    this._title = value;\n  }\n\n  get class():any {\n    return this._class;\n  }\n\n  @Input() set class(value:any) {\n    this._class = value;\n  }\n\n}\n\n    \n\n    \n        \n  {{title}}\n  \n      \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{title}}          '\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCSwitchButton.html":{"url":"components/WCSwitchButton.html","title":"component - WCSwitchButton","body":"\n                   \n\n\n\n\n\n  Components\n  WCSwitchButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/commons/SwitchButton/wc-switch-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-switch-button\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-switch-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _checked\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _checked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _checked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:19\n                                \n                            \n\n                \n                    \n                        settitle(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:27\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n\n                \n                    \n                        getchecked()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:35\n                                \n                            \n\n                \n                    \n                        setchecked(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'wc-switch-button',\n  templateUrl: './wc-switch-button.component.html',\n  styles: []\n})\nexport class WCSwitchButton implements OnInit {\n  \n  private _checked:boolean=false;\n  private _id:string;\n  private _title:string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get title():string {\n    return this._title;\n  }\n\n  @Input() set title(value:string) {\n    this._title = value;\n  }\n\n  get id():string {\n    return this._id;\n  }\n\n  @Input() set id(value:string) {\n    this._id = value;\n  }\n\n  get checked():boolean {\n    return this._checked;\n  }\n\n  @Input() set checked(value:boolean) {\n    this._checked = value;\n  }\n\n\n}\n\n    \n\n    \n        {{title}}\n\n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}        '\n    var COMPONENTS = [{'name': 'GridsterComponent', 'selector': 'gridster'},{'name': 'GridsterItemComponent', 'selector': 'gridster-item'},{'name': 'GridsterPreviewComponent', 'selector': 'gridster-preview'},{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridCellCommandComponent', 'selector': 'wc-grid-cell-renderer-command'},{'name': 'WCGridCellComponent', 'selector': '[wc-grid-cell]'},{'name': 'WCGridComponent', 'selector': 'wc-grid'},{'name': 'WCGridRowComponent', 'selector': '[wc-grid-row]'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCSwitchButton'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WCToasterService.html":{"url":"injectables/WCToasterService.html","title":"injectable - WCToasterService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WCToasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/Toaster/WCToasterService.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Public\n                                success\n                            \n                            \n                                    Public\n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/Toaster/WCToasterService.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/services/Toaster/WCToasterService.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(message: string, title: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/services/Toaster/WCToasterService.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                See https://github.com/scttcper/ngx-toastr\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        info(message: string, title: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/services/Toaster/WCToasterService.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                See https://github.com/scttcper/ngx-toastr\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            success\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        success(message: string, title: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/services/Toaster/WCToasterService.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                See https://github.com/scttcper/ngx-toastr\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            warning\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        warning(message: string, title: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/services/Toaster/WCToasterService.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                See https://github.com/scttcper/ngx-toastr\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable} from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n//See https://scttcper.github.io/ngx-toastr/\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WCToasterService {\n\n\n  constructor(private toastr: ToastrService) {\n    console.log(\"WCToasterService\");\n  }\n\n  /**\n   * \n   * @param message See https://github.com/scttcper/ngx-toastr\n   * @param title \n   * @param options \n   */\n  public success(message:string, title:string, options?:any):void {\n    this.toastr.success(message, title, options);\n  }\n\n  /**\n   * \n   * @param message See https://github.com/scttcper/ngx-toastr\n   * @param title \n   * @param options \n   */\n  public info(message:string, title:string, options?:any):void {\n    this.toastr.info(message, title, options);\n  }\n\n    /**\n   * \n   * @param message See https://github.com/scttcper/ngx-toastr\n   * @param title \n   * @param options \n   */\n  public error(message:string, title:string, options?:any):void {\n    this.toastr.error(message, title, options);\n  }\n\n    /**\n   * \n   * @param message See https://github.com/scttcper/ngx-toastr\n   * @param title \n   * @param options \n   */\n  public warning(message:string, title:string, options?:any):void {\n    this.toastr.warning(message, title, options);\n  }\n\n  /**\n   * \n   * @param message See https://github.com/scttcper/ngx-toastr\n   * @param title \n   * @param options \n   */\n  public clear():void {\n    this.toastr.clear();\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebConsoleUIKitDataModule.html":{"url":"modules/WebConsoleUIKitDataModule.html","title":"module - WebConsoleUIKitDataModule","body":"\n                   \n\n\n\n\n  Modules\n  WebConsoleUIKitDataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WebConsoleUIKitDataModule\n\n\n\ncluster_WebConsoleUIKitDataModule_declarations\n\n\n\ncluster_WebConsoleUIKitDataModule_exports\n\n\n\n\nWCDataCounterComponent\n\nWCDataCounterComponent\n\n\n\nWebConsoleUIKitDataModule\n\nWebConsoleUIKitDataModule\n\nWebConsoleUIKitDataModule -->\n\nWCDataCounterComponent->WebConsoleUIKitDataModule\n\n\n\n\n\nWCGaugeComponent\n\nWCGaugeComponent\n\nWebConsoleUIKitDataModule -->\n\nWCGaugeComponent->WebConsoleUIKitDataModule\n\n\n\n\n\nNgxGaugeModule \n\nNgxGaugeModule \n\nNgxGaugeModule  -->\n\nWebConsoleUIKitDataModule->NgxGaugeModule \n\n\n\n\n\nWCDataCounterComponent \n\nWCDataCounterComponent \n\nWCDataCounterComponent  -->\n\nWebConsoleUIKitDataModule->WCDataCounterComponent \n\n\n\n\n\nWCGaugeComponent \n\nWCGaugeComponent \n\nWCGaugeComponent  -->\n\nWebConsoleUIKitDataModule->WCGaugeComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/web-console-ui-kit-data.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WCDataCounterComponent\n                            \n                            \n                                WCGaugeComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NgxGaugeModule\n                            \n                            \n                                    WCDataCounterComponent\n                            \n                            \n                                    WCGaugeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WCDataCounterComponent } from '../components/data/Counter/WCDataCounterComponent'\nimport { WCGaugeComponent } from '../components/data/Gauge/wc-gauge.component'\nimport { NgxGaugeModule } from '../components/data/NxGauge/ngx-gauge.module'\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ WCDataCounterComponent, WCGaugeComponent ],\n  exports: [ WCDataCounterComponent, WCGaugeComponent, NgxGaugeModule ],\n  providers : [\n  ]\n})\nexport class WebConsoleUIKitDataModule { } \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebConsoleUIKitGridModule.html":{"url":"modules/WebConsoleUIKitGridModule.html","title":"module - WebConsoleUIKitGridModule","body":"\n                   \n\n\n\n\n  Modules\n  WebConsoleUIKitGridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WebConsoleUIKitGridModule\n\n\n\ncluster_WebConsoleUIKitGridModule_declarations\n\n\n\ncluster_WebConsoleUIKitGridModule_exports\n\n\n\n\nWCGridCellCommandComponent\n\nWCGridCellCommandComponent\n\n\n\nWebConsoleUIKitGridModule\n\nWebConsoleUIKitGridModule\n\nWebConsoleUIKitGridModule -->\n\nWCGridCellCommandComponent->WebConsoleUIKitGridModule\n\n\n\n\n\nWCGridCellComponent\n\nWCGridCellComponent\n\nWebConsoleUIKitGridModule -->\n\nWCGridCellComponent->WebConsoleUIKitGridModule\n\n\n\n\n\nWCGridComponent\n\nWCGridComponent\n\nWebConsoleUIKitGridModule -->\n\nWCGridComponent->WebConsoleUIKitGridModule\n\n\n\n\n\nWCGridRowComponent\n\nWCGridRowComponent\n\nWebConsoleUIKitGridModule -->\n\nWCGridRowComponent->WebConsoleUIKitGridModule\n\n\n\n\n\nWCGridCellCommandComponent \n\nWCGridCellCommandComponent \n\nWCGridCellCommandComponent  -->\n\nWebConsoleUIKitGridModule->WCGridCellCommandComponent \n\n\n\n\n\nWCGridCellComponent \n\nWCGridCellComponent \n\nWCGridCellComponent  -->\n\nWebConsoleUIKitGridModule->WCGridCellComponent \n\n\n\n\n\nWCGridComponent \n\nWCGridComponent \n\nWCGridComponent  -->\n\nWebConsoleUIKitGridModule->WCGridComponent \n\n\n\n\n\nWCGridRowComponent \n\nWCGridRowComponent \n\nWCGridRowComponent  -->\n\nWebConsoleUIKitGridModule->WCGridRowComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/web-console-ui-kit-grid.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WCGridCellCommandComponent\n                            \n                            \n                                WCGridCellComponent\n                            \n                            \n                                WCGridComponent\n                            \n                            \n                                WCGridRowComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WCGridCellCommandComponent\n                            \n                            \n                                    WCGridCellComponent\n                            \n                            \n                                    WCGridComponent\n                            \n                            \n                                    WCGridRowComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WCGridComponent } from '../components/grid/wc-grid.component'\nimport { WCGridRowComponent } from '../components/grid/row/wc-grid-row.component'\nimport { WCGridCellComponent } from '../components/grid/cell/wc-grid-cell.component'\nimport { WCGridCellCommandComponent } from '../components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component'\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [WCGridComponent, WCGridRowComponent, WCGridCellComponent, WCGridCellCommandComponent ],\n  exports: [WCGridComponent, WCGridRowComponent, WCGridCellComponent, WCGridCellCommandComponent ]\n})\nexport class WebConsoleUIKitGridModule { } \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebConsoleUIKitModule.html":{"url":"modules/WebConsoleUIKitModule.html","title":"module - WebConsoleUIKitModule","body":"\n                   \n\n\n\n\n  Modules\n  WebConsoleUIKitModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WebConsoleUIKitModule\n\n\n\ncluster_WebConsoleUIKitModule_declarations\n\n\n\ncluster_WebConsoleUIKitModule_exports\n\n\n\n\nWCDashboardHeaderComponent\n\nWCDashboardHeaderComponent\n\n\n\nWebConsoleUIKitModule\n\nWebConsoleUIKitModule\n\nWebConsoleUIKitModule -->\n\nWCDashboardHeaderComponent->WebConsoleUIKitModule\n\n\n\n\n\nWCGridButtonEditorComponent\n\nWCGridButtonEditorComponent\n\nWebConsoleUIKitModule -->\n\nWCGridButtonEditorComponent->WebConsoleUIKitModule\n\n\n\n\n\nWCPanelComponent\n\nWCPanelComponent\n\nWebConsoleUIKitModule -->\n\nWCPanelComponent->WebConsoleUIKitModule\n\n\n\n\n\nWCSwitchButton\n\nWCSwitchButton\n\nWebConsoleUIKitModule -->\n\nWCSwitchButton->WebConsoleUIKitModule\n\n\n\n\n\nWCDashboardHeaderComponent \n\nWCDashboardHeaderComponent \n\nWCDashboardHeaderComponent  -->\n\nWebConsoleUIKitModule->WCDashboardHeaderComponent \n\n\n\n\n\nWCGridButtonEditorComponent \n\nWCGridButtonEditorComponent \n\nWCGridButtonEditorComponent  -->\n\nWebConsoleUIKitModule->WCGridButtonEditorComponent \n\n\n\n\n\nWCPanelComponent \n\nWCPanelComponent \n\nWCPanelComponent  -->\n\nWebConsoleUIKitModule->WCPanelComponent \n\n\n\n\n\nWCSwitchButton \n\nWCSwitchButton \n\nWCSwitchButton  -->\n\nWebConsoleUIKitModule->WCSwitchButton \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/web-console-ui-kit.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WCDashboardHeaderComponent\n                            \n                            \n                                WCGridButtonEditorComponent\n                            \n                            \n                                WCPanelComponent\n                            \n                            \n                                WCSwitchButton\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WCDashboardHeaderComponent\n                            \n                            \n                                    WCGridButtonEditorComponent\n                            \n                            \n                                    WCPanelComponent\n                            \n                            \n                                    WCSwitchButton\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WCGridButtonEditorComponent } from '../components/grid-editor/WCGridButtonEditorComponent'\nimport { WCPanelComponent } from '../components/containers/panel/WCPanelComponent'\nimport { WCDashboardHeaderComponent } from '../components/commons/DashboardHeader/WCDashboardHeaderComponent'\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\nimport { WCSwitchButton } from '../components/commons/SwitchButton/wc-switch-button.component'\n\n@NgModule({\n  imports: [\n    CommonModule, ToastrModule.forRoot()\n  ],\n  declarations: [ WCGridButtonEditorComponent, WCPanelComponent, WCDashboardHeaderComponent, WCSwitchButton],\n  exports: [ WCGridButtonEditorComponent, WCPanelComponent, WCDashboardHeaderComponent, WCSwitchButton ],\n  providers : [\n    ToastrService\n  ]\n})\nexport class WebConsoleUIKitModule { } \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebConsoleUIKitModuleKendoProvider.html":{"url":"modules/WebConsoleUIKitModuleKendoProvider.html","title":"module - WebConsoleUIKitModuleKendoProvider","body":"\n                   \n\n\n\n\n  Modules\n  WebConsoleUIKitModuleKendoProvider\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/web-console-ui-kit-kendo-provider.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { ToolBarModule } from '@progress/kendo-angular-toolbar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GridModule } from '@progress/kendo-angular-grid';\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\n\n@NgModule({\n    imports:[ BrowserAnimationsModule, ToolBarModule, GridModule, DropDownsModule ],\n    exports:[ BrowserAnimationsModule, ToolBarModule, GridModule, DropDownsModule ]\n})\nexport class WebConsoleUIKitModuleKendoProvider {\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts\n            \n            \n                component\n            \n            \n                WCDashboardHeaderComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/lib/components/commons/SwitchButton/wc-switch-button.component.ts\n            \n            \n                component\n            \n            \n                WCSwitchButton\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridster.component.ts\n            \n            \n                component\n            \n            \n                GridsterComponent\n            \n            \n                0 %\n                (0/53)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridster.interface.ts\n            \n            \n                class\n            \n            \n                GridsterComponentInterface\n            \n            \n                0 %\n                (0/37)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterCompact.service.ts\n            \n            \n                injectable\n            \n            \n                GridsterCompact\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterConfig.constant.ts\n            \n            \n                variable\n            \n            \n                GridsterConfigService\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterConfig.interface.ts\n            \n            \n                interface\n            \n            \n                DragBase\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterConfig.interface.ts\n            \n            \n                interface\n            \n            \n                Draggable\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterConfig.interface.ts\n            \n            \n                interface\n            \n            \n                GridsterConfig\n            \n            \n                0 %\n                (0/62)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterConfig.interface.ts\n            \n            \n                interface\n            \n            \n                PushDirections\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterConfig.interface.ts\n            \n            \n                interface\n            \n            \n                Resizable\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterConfigS.interface.ts\n            \n            \n                interface\n            \n            \n                DragBase\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterConfigS.interface.ts\n            \n            \n                interface\n            \n            \n                Draggable\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterConfigS.interface.ts\n            \n            \n                interface\n            \n            \n                GridsterConfigS\n            \n            \n                0 %\n                (0/50)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterConfigS.interface.ts\n            \n            \n                interface\n            \n            \n                PushDirections\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterConfigS.interface.ts\n            \n            \n                interface\n            \n            \n                Resizable\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterDraggable.service.ts\n            \n            \n                injectable\n            \n            \n                GridsterDraggable\n            \n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterEmptyCell.service.ts\n            \n            \n                injectable\n            \n            \n                GridsterEmptyCell\n            \n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterItem.component.ts\n            \n            \n                component\n            \n            \n                GridsterItemComponent\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterItem.interface.ts\n            \n            \n                interface\n            \n            \n                GridsterItem\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterItemComponent.interface.ts\n            \n            \n                class\n            \n            \n                GridsterItemComponentInterface\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterPreview.component.ts\n            \n            \n                component\n            \n            \n                GridsterPreviewComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterPush.service.ts\n            \n            \n                injectable\n            \n            \n                GridsterPush\n            \n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterPushResize.service.ts\n            \n            \n                injectable\n            \n            \n                GridsterPushResize\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterRenderer.service.ts\n            \n            \n                injectable\n            \n            \n                GridsterRenderer\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterResizable.service.ts\n            \n            \n                injectable\n            \n            \n                GridsterResizable\n            \n            \n                0 %\n                (0/55)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterResizeEventType.interface.ts\n            \n            \n                interface\n            \n            \n                GridsterResizeEventType\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                function\n            \n            \n                cancelE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                function\n            \n            \n                cancelHorizontal\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                function\n            \n            \n                cancelN\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                function\n            \n            \n                cancelS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                function\n            \n            \n                cancelScroll\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                function\n            \n            \n                cancelVertical\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                function\n            \n            \n                cancelW\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                function\n            \n            \n                scroll\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                function\n            \n            \n                startHorizontal\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                function\n            \n            \n                startVertical\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                variable\n            \n            \n                gridsterElement\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                variable\n            \n            \n                intervalDuration\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                variable\n            \n            \n                intervalE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                variable\n            \n            \n                intervalN\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                variable\n            \n            \n                intervalS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                variable\n            \n            \n                intervalW\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                variable\n            \n            \n                resizeEvent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                variable\n            \n            \n                resizeEventType\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                variable\n            \n            \n                scrollSensitivity\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n            \n            \n                variable\n            \n            \n                scrollSpeed\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterSwap.service.ts\n            \n            \n                injectable\n            \n            \n                GridsterSwap\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/dashboard/lib/gridsterUtils.service.ts\n            \n            \n                injectable\n            \n            \n                GridsterUtils\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/panel/WCPanelComponent.ts\n            \n            \n                component\n            \n            \n                WCPanelComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/lib/components/data/Counter/WCDataCounterComponent.ts\n            \n            \n                component\n            \n            \n                WCDataCounterComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/lib/components/data/Gauge/wc-gauge.component.ts\n            \n            \n                component\n            \n            \n                WCGaugeComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/common/util.ts\n            \n            \n                function\n            \n            \n                clamp\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/common/util.ts\n            \n            \n                function\n            \n            \n                coerceBooleanProperty\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/common/util.ts\n            \n            \n                function\n            \n            \n                coerceNumberProperty\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/common/util.ts\n            \n            \n                function\n            \n            \n                cssUnit\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/common/util.ts\n            \n            \n                function\n            \n            \n                isNumber\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n            \n            \n                directive\n            \n            \n                NgxGaugeAppend\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n            \n            \n                directive\n            \n            \n                NgxGaugeLabel\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n            \n            \n                directive\n            \n            \n                NgxGaugePrepend\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n            \n            \n                directive\n            \n            \n                NgxGaugeValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge-error.ts\n            \n            \n                class\n            \n            \n                NgxGaugeError\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge.ts\n            \n            \n                component\n            \n            \n                NgxGauge\n            \n            \n                0 %\n                (0/45)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge.ts\n            \n            \n                variable\n            \n            \n                DEFAULTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/grid-editor/WCGridButtonEditorComponent.ts\n            \n            \n                component\n            \n            \n                WCGridButtonEditorComponent\n            \n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/WCGridColumnDef.ts\n            \n            \n                class\n            \n            \n                WCGridColumnDef\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/WCGridConfiguration.ts\n            \n            \n                class\n            \n            \n                WCGridConfiguration\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/cell-renderers/command/wc-grid-cell-renderer-command.component.ts\n            \n            \n                component\n            \n            \n                WCGridCellCommandComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/cell/wc-grid-cell.component.ts\n            \n            \n                component\n            \n            \n                WCGridCellComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/row/wc-grid-row.component.ts\n            \n            \n                component\n            \n            \n                WCGridRowComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/wc-grid.component.ts\n            \n            \n                component\n            \n            \n                WCGridComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/lib/services/Toaster/WCToasterService.ts\n            \n            \n                injectable\n            \n            \n                WCToasterService\n            \n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @progress/kendo-angular-buttons : ^4.0.0\n        \n            @progress/kendo-angular-dateinputs : 2 - 3\n        \n            @progress/kendo-angular-dropdowns : 2 - 3\n        \n            @progress/kendo-angular-excel-export : 1 - 2\n        \n            @progress/kendo-angular-grid : ^3.5.0\n        \n            @progress/kendo-angular-inputs : 2 - 3\n        \n            @progress/kendo-angular-intl : ^1.0.0\n        \n            @progress/kendo-angular-l10n : ^1.1.0\n        \n            @progress/kendo-angular-popup : ^2.0.0\n        \n            @progress/kendo-angular-toolbar : ^0.2.1\n        \n            @progress/kendo-data-query : ^1.0.0\n        \n            @progress/kendo-drawing : ^1.0.0\n        \n            @progress/kendo-theme-default : latest\n        \n            ngx-toastr : ^8.8.0\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            @angular/common : ^6.0.0-rc.0 || ^6.0.0\n        \n            @angular/core : ^6.0.0-rc.0 || ^6.0.0\n        \n            web-console-core : ^0.0.1\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : ^6.0.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompactType   (src/.../gridsterConfig.interface.ts)\n                        \n                        \n                            DisplayGrid   (src/.../gridsterConfig.interface.ts)\n                        \n                        \n                            GridType   (src/.../gridsterConfig.interface.ts)\n                        \n                        \n                            WCGridColumnType   (src/.../WCGridColumnDef.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/components/containers/dashboard/lib/gridsterConfig.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        CompactType\n                    \n                \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value: none\n                            \n                        \n                        \n                            \n                                 CompactUp\n                            \n                        \n                        \n                            \n                                Value: compactUp\n                            \n                        \n                        \n                            \n                                 CompactLeft\n                            \n                        \n                        \n                            \n                                Value: compactLeft\n                            \n                        \n                        \n                            \n                                 CompactUpAndLeft\n                            \n                        \n                        \n                            \n                                Value: compactUp&Left\n                            \n                        \n                        \n                            \n                                 CompactLeftAndUp\n                            \n                        \n                        \n                            \n                                Value: compactLeft&Up\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DisplayGrid\n                    \n                \n                        \n                            \n                                 Always\n                            \n                        \n                        \n                            \n                                Value: always\n                            \n                        \n                        \n                            \n                                 OnDragAndResize\n                            \n                        \n                        \n                            \n                                Value: onDrag&Resize\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value: none\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GridType\n                    \n                \n                        \n                            \n                                 Fit\n                            \n                        \n                        \n                            \n                                Value: fit\n                            \n                        \n                        \n                            \n                                 ScrollVertical\n                            \n                        \n                        \n                            \n                                Value: scrollVertical\n                            \n                        \n                        \n                            \n                                 ScrollHorizontal\n                            \n                        \n                        \n                            \n                                Value: scrollHorizontal\n                            \n                        \n                        \n                            \n                                 Fixed\n                            \n                        \n                        \n                            \n                                Value: fixed\n                            \n                        \n                        \n                            \n                                 VerticalFixed\n                            \n                        \n                        \n                            \n                                Value: verticalFixed\n                            \n                        \n                        \n                            \n                                 HorizontalFixed\n                            \n                        \n                        \n                            \n                                Value: horizontalFixed\n                            \n                        \n            \n        \n\n    src/lib/components/grid/WCGridColumnDef.ts\n    \n        \n            \n                \n                    \n                        \n                        WCGridColumnType\n                    \n                \n                        \n                            \n                                 Default\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 Command\n                            \n                        \n                        \n                            \n                                 Editable\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cancelE   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            cancelHorizontal   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            cancelN   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            cancelS   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            cancelScroll   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            cancelVertical   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            cancelW   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            clamp   (src/.../util.ts)\n                        \n                        \n                            coerceBooleanProperty   (src/.../util.ts)\n                        \n                        \n                            coerceNumberProperty   (src/.../util.ts)\n                        \n                        \n                            cssUnit   (src/.../util.ts)\n                        \n                        \n                            isNumber   (src/.../util.ts)\n                        \n                        \n                            scroll   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            startHorizontal   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            startVertical   (src/.../gridsterScroll.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cancelE\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelE()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelHorizontal\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelHorizontal()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelN\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelN()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelS\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelS()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelScroll()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelVertical\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelVertical()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelW\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelW()\n                    \n                \n\n\n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scroll\n                            \n                            \n                        \n                    \n                \n                \n                    \nscroll(gridster: undefined, left: undefined, top: undefined, width: undefined, height: undefined, e: undefined, lastMouse: any, calculateItemPosition: undefined, resize?: boolean, resizeEventScrollType?: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gridster\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        left\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        top\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        width\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        height\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastMouse\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        calculateItemPosition\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resize\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resizeEventScrollType\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startHorizontal\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartHorizontal(sign: undefined, calculateItemPosition: undefined, lastMouse: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sign\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        calculateItemPosition\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastMouse\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startVertical\n                            \n                            \n                        \n                    \n                \n                \n                    \nstartVertical(sign: undefined, calculateItemPosition: undefined, lastMouse: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sign\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        calculateItemPosition\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        lastMouse\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/lib/components/data/NxGauge/common/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clamp\n                            \n                            \n                        \n                    \n                \n                \n                    \nclamp(value: undefined, min: undefined, max: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        min\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        max\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coerceBooleanProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \ncoerceBooleanProperty(value: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coerceNumberProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \ncoerceNumberProperty(value: any, fallbackValue: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fallbackValue\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cssUnit\n                            \n                            \n                        \n                    \n                \n                \n                    \ncssUnit(value: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nisNumber(value: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMOTIF Web Console Module Template\nMoved to Angular 6.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        GridsterModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxGaugeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebConsoleUIKitDataModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebConsoleUIKitGridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebConsoleUIKitModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebConsoleUIKitModuleKendoProvider\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GridsterModule\n\n\n\ncluster_GridsterModule_declarations\n\n\n\ncluster_GridsterModule_exports\n\n\n\ncluster_NgxGaugeModule\n\n\n\ncluster_NgxGaugeModule_declarations\n\n\n\ncluster_NgxGaugeModule_exports\n\n\n\ncluster_WebConsoleUIKitDataModule\n\n\n\ncluster_WebConsoleUIKitDataModule_declarations\n\n\n\ncluster_WebConsoleUIKitDataModule_exports\n\n\n\ncluster_WebConsoleUIKitGridModule\n\n\n\ncluster_WebConsoleUIKitGridModule_declarations\n\n\n\ncluster_WebConsoleUIKitGridModule_exports\n\n\n\ncluster_WebConsoleUIKitModule\n\n\n\ncluster_WebConsoleUIKitModule_declarations\n\n\n\ncluster_WebConsoleUIKitModule_exports\n\n\n\n\nGridsterComponent\n\nGridsterComponent\n\n\n\nGridsterModule\n\nGridsterModule\n\nGridsterModule -->\n\nGridsterComponent->GridsterModule\n\n\n\n\n\nGridsterItemComponent\n\nGridsterItemComponent\n\nGridsterModule -->\n\nGridsterItemComponent->GridsterModule\n\n\n\n\n\nGridsterPreviewComponent\n\nGridsterPreviewComponent\n\nGridsterModule -->\n\nGridsterPreviewComponent->GridsterModule\n\n\n\n\n\nGridsterComponent \n\nGridsterComponent \n\nGridsterComponent  -->\n\nGridsterModule->GridsterComponent \n\n\n\n\n\nGridsterItemComponent \n\nGridsterItemComponent \n\nGridsterItemComponent  -->\n\nGridsterModule->GridsterItemComponent \n\n\n\n\n\nNgxGauge\n\nNgxGauge\n\n\n\nNgxGaugeModule\n\nNgxGaugeModule\n\nNgxGaugeModule -->\n\nNgxGauge->NgxGaugeModule\n\n\n\n\n\nNgxGaugeAppend\n\nNgxGaugeAppend\n\nNgxGaugeModule -->\n\nNgxGaugeAppend->NgxGaugeModule\n\n\n\n\n\nNgxGaugeLabel\n\nNgxGaugeLabel\n\nNgxGaugeModule -->\n\nNgxGaugeLabel->NgxGaugeModule\n\n\n\n\n\nNgxGaugePrepend\n\nNgxGaugePrepend\n\nNgxGaugeModule -->\n\nNgxGaugePrepend->NgxGaugeModule\n\n\n\n\n\nNgxGaugeValue\n\nNgxGaugeValue\n\nNgxGaugeModule -->\n\nNgxGaugeValue->NgxGaugeModule\n\n\n\n\n\nNgxGauge \n\nNgxGauge \n\nNgxGauge  -->\n\nNgxGaugeModule->NgxGauge \n\n\n\n\n\nNgxGaugeAppend \n\nNgxGaugeAppend \n\nNgxGaugeAppend  -->\n\nNgxGaugeModule->NgxGaugeAppend \n\n\n\n\n\nNgxGaugeLabel \n\nNgxGaugeLabel \n\nNgxGaugeLabel  -->\n\nNgxGaugeModule->NgxGaugeLabel \n\n\n\n\n\nNgxGaugePrepend \n\nNgxGaugePrepend \n\nNgxGaugePrepend  -->\n\nNgxGaugeModule->NgxGaugePrepend \n\n\n\n\n\nNgxGaugeValue \n\nNgxGaugeValue \n\nNgxGaugeValue  -->\n\nNgxGaugeModule->NgxGaugeValue \n\n\n\n\n\nWCDataCounterComponent\n\nWCDataCounterComponent\n\n\n\nWebConsoleUIKitDataModule\n\nWebConsoleUIKitDataModule\n\nWebConsoleUIKitDataModule -->\n\nWCDataCounterComponent->WebConsoleUIKitDataModule\n\n\n\n\n\nWCGaugeComponent\n\nWCGaugeComponent\n\nWebConsoleUIKitDataModule -->\n\nWCGaugeComponent->WebConsoleUIKitDataModule\n\n\n\n\n\nNgxGaugeModule \n\nNgxGaugeModule \n\nNgxGaugeModule  -->\n\nWebConsoleUIKitDataModule->NgxGaugeModule \n\n\n\n\n\nWCDataCounterComponent \n\nWCDataCounterComponent \n\nWCDataCounterComponent  -->\n\nWebConsoleUIKitDataModule->WCDataCounterComponent \n\n\n\n\n\nWCGaugeComponent \n\nWCGaugeComponent \n\nWCGaugeComponent  -->\n\nWebConsoleUIKitDataModule->WCGaugeComponent \n\n\n\n\n\nWCGridCellCommandComponent\n\nWCGridCellCommandComponent\n\n\n\nWebConsoleUIKitGridModule\n\nWebConsoleUIKitGridModule\n\nWebConsoleUIKitGridModule -->\n\nWCGridCellCommandComponent->WebConsoleUIKitGridModule\n\n\n\n\n\nWCGridCellComponent\n\nWCGridCellComponent\n\nWebConsoleUIKitGridModule -->\n\nWCGridCellComponent->WebConsoleUIKitGridModule\n\n\n\n\n\nWCGridComponent\n\nWCGridComponent\n\nWebConsoleUIKitGridModule -->\n\nWCGridComponent->WebConsoleUIKitGridModule\n\n\n\n\n\nWCGridRowComponent\n\nWCGridRowComponent\n\nWebConsoleUIKitGridModule -->\n\nWCGridRowComponent->WebConsoleUIKitGridModule\n\n\n\n\n\nWCGridCellCommandComponent \n\nWCGridCellCommandComponent \n\nWCGridCellCommandComponent  -->\n\nWebConsoleUIKitGridModule->WCGridCellCommandComponent \n\n\n\n\n\nWCGridCellComponent \n\nWCGridCellComponent \n\nWCGridCellComponent  -->\n\nWebConsoleUIKitGridModule->WCGridCellComponent \n\n\n\n\n\nWCGridComponent \n\nWCGridComponent \n\nWCGridComponent  -->\n\nWebConsoleUIKitGridModule->WCGridComponent \n\n\n\n\n\nWCGridRowComponent \n\nWCGridRowComponent \n\nWCGridRowComponent  -->\n\nWebConsoleUIKitGridModule->WCGridRowComponent \n\n\n\n\n\nWCDashboardHeaderComponent\n\nWCDashboardHeaderComponent\n\n\n\nWebConsoleUIKitModule\n\nWebConsoleUIKitModule\n\nWebConsoleUIKitModule -->\n\nWCDashboardHeaderComponent->WebConsoleUIKitModule\n\n\n\n\n\nWCGridButtonEditorComponent\n\nWCGridButtonEditorComponent\n\nWebConsoleUIKitModule -->\n\nWCGridButtonEditorComponent->WebConsoleUIKitModule\n\n\n\n\n\nWCPanelComponent\n\nWCPanelComponent\n\nWebConsoleUIKitModule -->\n\nWCPanelComponent->WebConsoleUIKitModule\n\n\n\n\n\nWCSwitchButton\n\nWCSwitchButton\n\nWebConsoleUIKitModule -->\n\nWCSwitchButton->WebConsoleUIKitModule\n\n\n\n\n\nWCDashboardHeaderComponent \n\nWCDashboardHeaderComponent \n\nWCDashboardHeaderComponent  -->\n\nWebConsoleUIKitModule->WCDashboardHeaderComponent \n\n\n\n\n\nWCGridButtonEditorComponent \n\nWCGridButtonEditorComponent \n\nWCGridButtonEditorComponent  -->\n\nWebConsoleUIKitModule->WCGridButtonEditorComponent \n\n\n\n\n\nWCPanelComponent \n\nWCPanelComponent \n\nWCPanelComponent  -->\n\nWebConsoleUIKitModule->WCPanelComponent \n\n\n\n\n\nWCSwitchButton \n\nWCSwitchButton \n\nWCSwitchButton  -->\n\nWebConsoleUIKitModule->WCSwitchButton \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            6 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        14 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        10 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compactTypes   (src/.../gridsterConfig.interface.ts)\n                        \n                        \n                            displayGrids   (src/.../gridsterConfig.interface.ts)\n                        \n                        \n                            gridTypes   (src/.../gridsterConfig.interface.ts)\n                        \n                        \n                            NgxGaugeCap   (src/.../gauge.ts)\n                        \n                        \n                            NgxGaugeType   (src/.../gauge.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/components/containers/dashboard/lib/gridsterConfig.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        compactTypes\n                    \n                \n                \n                    \n                        compactTypes:     \"none\" | \"compactUp\" | \"compactLeft\" | \"compactUp&Left\" | \"compactLeft&Up\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        displayGrids\n                    \n                \n                \n                    \n                        displayGrids:     \"always\" | \"onDrag&Resize\" | \"none\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        gridTypes\n                    \n                \n                \n                    \n                        gridTypes:     \"fit\" | \"scrollVertical\" | \"scrollHorizontal\" | \"fixed\" | \"verticalFixed\" | \"horizontalFixed\"\n\n                    \n                \n            \n        \n\n    src/lib/components/data/NxGauge/gauge/gauge.ts\n    \n        \n            \n                \n                    \n                        \n                        NgxGaugeCap\n                    \n                \n                \n                    \n                        NgxGaugeCap:     \"round\" | \"butt\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        NgxGaugeType\n                    \n                \n                \n                    \n                        NgxGaugeType:     \"full\" | \"arch\" | \"semi\"\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULTS   (src/.../gauge.ts)\n                        \n                        \n                            GridsterConfigService   (src/.../gridsterConfig.constant.ts)\n                        \n                        \n                            gridsterElement   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            intervalDuration   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            intervalE   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            intervalN   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            intervalS   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            intervalW   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            resizeEvent   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            resizeEventType   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            scrollSensitivity   (src/.../gridsterScroll.service.ts)\n                        \n                        \n                            scrollSpeed   (src/.../gridsterScroll.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/components/data/NxGauge/gauge/gauge.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULTS:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    MIN: 0,\n    MAX: 100,\n    TYPE: 'arch',\n    THICK: 4,\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\n    CAP: 'butt',\n    SIZE: 200\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/components/containers/dashboard/lib/gridsterConfig.constant.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GridsterConfigService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GridsterConfigService:     GridsterConfig\n\n                    \n                \n                    \n                        \n                            Type :     GridsterConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  gridType: GridType.Fit, // 'fit' will fit the items in the container without scroll;\n  // 'scrollVertical' will fit on width and height of the items will be the same as the width\n  // 'scrollHorizontal' will fit on height and width of the items will be the same as the height\n  // 'fixed' will set the rows and columns dimensions based on fixedColWidth and fixedRowHeight options\n  // 'verticalFixed' will set the rows to fixedRowHeight and columns width will fit the space available\n  // 'horizontalFixed' will set the columns to fixedColWidth and rows height will fit the space available\n  fixedColWidth: 250, // fixed col width for gridType: 'fixed'\n  fixedRowHeight: 250, // fixed row height for gridType: 'fixed'\n  keepFixedHeightInMobile: false, // keep the height from fixed gridType in mobile layout\n  keepFixedWidthInMobile: false, // keep the width from fixed gridType in mobile layout\n  setGridSize: false, // sets grid size depending on content\n  compactType: CompactType.None, // compact items: 'none' | 'compactUp' | 'compactLeft' | 'compactUp&Left' | 'compactLeft&Up'\n  mobileBreakpoint: 640, // if the screen is not wider that this, remove the grid layout and stack the items\n  minCols: 1, // minimum amount of columns in the grid\n  maxCols: 100, // maximum amount of columns in the grid\n  minRows: 1, // minimum amount of rows in the grid\n  maxRows: 100, // maximum amount of rows in the grid\n  defaultItemCols: 1, // default width of an item in columns\n  defaultItemRows: 1, // default height of an item in rows\n  maxItemCols: 50, // max item number of cols\n  maxItemRows: 50, // max item number of rows\n  minItemCols: 1, // min item number of columns\n  minItemRows: 1, // min item number of rows\n  minItemArea: 1, // min item area: cols * rows\n  maxItemArea: 2500, // max item area: cols * rows\n  margin: 10,  // margin between grid items\n  outerMargin: true,  // if margins will apply to the sides of the container\n  outerMarginTop: null, // override outer margin for grid\n  outerMarginRight: null, // override outer margin for grid\n  outerMarginBottom: null, // override outer margin for grid\n  outerMarginLeft: null, // override outer margin for grid\n  scrollSensitivity: 10,  // margin of the dashboard where to start scrolling\n  scrollSpeed: 20,  // how much to scroll each mouse move when in the scrollSensitivity zone\n  initCallback: undefined, // callback to call after grid has initialized. Arguments: gridsterComponent\n  destroyCallback: undefined, // callback to call after grid has destroyed. Arguments: gridsterComponent\n  gridSizeChangedCallback: undefined, // callback to call after grid has changed size. Arguments: gridsterComponent\n  itemChangeCallback: undefined,  // callback to call for each item when is changes x, y, rows, cols.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemResizeCallback: undefined,  // callback to call for each item when width/height changes.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemInitCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemRemovedCallback: undefined,  // callback to call for each item when is initialized.\n  // Arguments: gridsterItem, gridsterItemComponent\n  itemValidateCallback: undefined,  // callback to call to validate item position/size. Return true if valid.\n  // Arguments: gridsterItem\n  enableEmptyCellClick: false, // enable empty cell click events\n  enableEmptyCellContextMenu: false, // enable empty cell context menu (right click) events\n  enableEmptyCellDrop: false, // enable empty cell drop events\n  enableEmptyCellDrag: false, // enable empty cell drag events\n  emptyCellClickCallback: undefined, // empty cell click callback\n  emptyCellContextMenuCallback: undefined, // empty cell context menu (right click) callback\n  emptyCellDropCallback: undefined, // empty cell drag drop callback. HTML5 Drag & Drop\n  emptyCellDragCallback: undefined, // empty cell drag and create item like excel cell selection\n  emptyCellDragMaxCols: 50, // limit empty cell drag max cols\n  emptyCellDragMaxRows: 50, // limit empty cell drag max rows\n  // Arguments: event, gridsterItem{x, y, rows: defaultItemRows, cols: defaultItemCols}\n  ignoreMarginInRow: false, // ignore the gap between rows for items which span multiple rows (see #162, #224)\n  draggable: {\n    delayStart: 0, // milliseconds to delay the start of drag, useful for touch interaction\n    enabled: false, // enable/disable draggable items\n    ignoreContentClass: 'gridster-item-content', // default content class to ignore the drag event from\n    ignoreContent: false, // if true drag will start only from elements from `dragHandleClass`\n    dragHandleClass: 'drag-handler', // drag event only from this class. If `ignoreContent` is true.\n    stop: undefined, // callback when dragging an item stops.  Accepts Promise return to cancel/approve drag.\n    start: undefined, // callback when dragging an item starts.\n    // Arguments: item, gridsterItem, event\n    dropOverItems: false, // enable drop items on top other item\n    dropOverItemsCallback: undefined // callback on drop over another item\n    // Arguments: source, target, gridComponent\n  },\n  resizable: {\n    delayStart: 0, // milliseconds to delay the start of resize, useful for touch interaction\n    enabled: false, // enable/disable resizable items\n    handles: {\n      s: true,\n      e: true,\n      n: true,\n      w: true,\n      se: true,\n      ne: true,\n      sw: true,\n      nw: true\n    }, // resizable edges of an item\n    stop: undefined, // callback when resizing an item stops. Accepts Promise return to cancel/approve resize.\n    start: undefined // callback when resizing an item starts.\n    // Arguments: item, gridsterItem, event\n  },\n  swap: true, // allow items to switch position if drop on top of another\n  pushItems: false, // push items when resizing and dragging\n  disablePushOnDrag: false, // disable push on drag\n  disablePushOnResize: false, // disable push on resize\n  pushDirections: {north: true, east: true, south: true, west: true}, // control the directions items are pushed\n  pushResizeItems: false, // on resize of item will shrink adjacent items\n  displayGrid: DisplayGrid.OnDragAndResize, // display background grid of rows and columns\n  disableWindowResize: false, // disable the window on resize listener. This will stop grid to recalculate on window resize.\n  disableWarnings: false, // disable console log warnings about misplacement of grid items\n  scrollToNewItems: false, // scroll to new items placed in a scrollable view\n  disableAutoPositionOnConflict: false  // disable auto-position of items on conflict state\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/components/containers/dashboard/lib/gridsterScroll.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gridsterElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gridsterElement:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intervalDuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        intervalDuration:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intervalE\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        intervalE:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intervalN\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        intervalN:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intervalS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        intervalS:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intervalW\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        intervalW:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resizeEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resizeEvent:     boolean | undefined\n\n                    \n                \n                    \n                        \n                            Type :     boolean | undefined\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resizeEventType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resizeEventType:     GridsterResizeEventType | undefined\n\n                    \n                \n                    \n                        \n                            Type :     GridsterResizeEventType | undefined\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollSensitivity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scrollSensitivity:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scrollSpeed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scrollSpeed:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
