var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/MinitButtonClickEvent.html",[0,0.588,1,1.882]],["body/interfaces/MinitButtonClickEvent.html",[0,0.973,1,2.323,2,0.201,3,0.177,4,0.177,5,1.631,6,1.519,7,1.012,8,1.631,9,0.414,10,3.113,11,3.56,12,0.633,13,0.023,14,0.201,15,0.158,16,2.323,17,0.99,18,1.734,19,1.997,20,0.201,21,0.307,22,1.519,23,2.917,24,1.319,25,1.732,26,2.323,27,2.323,28,0.579,29,1.631,30,2.504,31,0.414,32,1.519,33,1.906,34,1.906,35,1.906,36,1.906,37,1.906,38,1.758,39,1.519,40,1.906,41,3.24,42,1.631,43,2.716,44,3.788,45,0.509,46,1.022,47,0.476,48,0.654,49,1.758,50,0.93,51,1.906,52,0.132,53,0.616,54,0.93,55,1.732,56,1.906,57,1.906,58,1.906,59,2.504,60,1.251,61,2.716,62,0.509,63,1.631,64,1.906,65,1.906,66,1.758,67,1.758,68,2.539,69,1.906,70,1.906,71,3.163,72,1.906,73,2.716,74,1.631,75,1.421,76,1.906,77,3.788,78,1.906,79,3.163,80,1.906,81,1.906,82,1.906,83,1.906,84,2.716,85,1.906,86,1.906,87,1.457,88,3.644,89,1.368,90,0.986,91,1.906,92,2.716,93,1.906,94,1.906,95,1.906,96,2.716,97,1.906,98,1.906,99,2.716,100,1.906,101,2.716,102,1.906,103,1.906,104,2.716,105,2.716,106,1.906,107,2.504,108,1.906,109,1.906,110,1.906,111,1.906,112,1.906,113,1.906,114,1.906,115,1.906,116,0.654,117,1.631,118,1.906,119,0.737,120,1.906,121,1.332,122,0.014,123,0.014]],["title/directives/NgxGaugeAppend.html",[124,0.588,125,0.756]],["body/directives/NgxGaugeAppend.html",[2,0.327,3,0.289,4,0.289,13,0.023,14,0.327,20,0.327,21,0.338,31,0.674,45,1.142,52,0.29,122,0.019,123,0.019,124,1.16,125,1.381,126,2.864,127,3.106,128,1.35,129,1.559,130,1.753,131,4.097,132,4.568,133,3.396,134,1.286,135,1.286,136,3.106,137,1.286]],["title/classes/NgxGaugeError.html",[52,0.153,138,2.664]],["body/classes/NgxGaugeError.html",[2,0.347,3,0.306,4,0.306,12,0.768,13,0.022,21,0.267,24,1.252,28,1,52,0.269,62,0.88,122,0.019,123,0.019,126,3.578,138,4.697,139,4.504,140,3.578,141,5.306,142,6.229,143,1.431,144,5.288,145,1.517,146,1.201,147,5.306,148,3.987,149,5.288]],["title/directives/NgxGaugeLabel.html",[124,0.588,137,0.756]],["body/directives/NgxGaugeLabel.html",[2,0.327,3,0.289,4,0.289,13,0.023,14,0.327,20,0.327,21,0.338,31,0.674,45,1.142,52,0.29,122,0.019,123,0.019,124,1.16,125,1.286,126,2.864,127,3.106,128,1.35,129,1.559,130,1.753,131,3.396,132,4.568,133,3.396,134,1.286,135,1.286,136,3.746,137,1.381]],["title/modules/NgxGaugeModule.html",[150,0.956,151,2.029]],["body/modules/NgxGaugeModule.html",[2,0.284,3,0.251,4,0.251,13,0.023,14,0.432,20,0.284,21,0.322,52,0.187,122,0.017,123,0.017,124,0.72,125,1.525,134,1.525,135,1.525,137,1.525,150,1.491,151,4.187,152,2.148,153,1.105,154,3.48,155,2.694,156,2.148,157,3.684,158,3.684,159,3.684,160,2.045,161,3.43,162,2.305,163,2.694,164,4.326,165,4.326,166,2.934,167,3.751,168,2.694,169,5.508]],["title/directives/NgxGaugePrepend.html",[124,0.588,134,0.756]],["body/directives/NgxGaugePrepend.html",[2,0.327,3,0.289,4,0.289,13,0.023,14,0.327,20,0.327,21,0.338,31,0.674,45,1.142,52,0.29,122,0.019,123,0.019,124,1.16,125,1.286,126,2.864,127,3.106,128,1.35,129,1.559,130,1.753,131,3.396,132,4.568,133,4.097,134,1.381,135,1.286,136,3.106,137,1.286]],["title/directives/NgxGaugeValue.html",[124,0.588,135,0.756]],["body/directives/NgxGaugeValue.html",[2,0.327,3,0.289,4,0.289,13,0.023,14,0.327,20,0.327,21,0.338,31,0.813,45,1.142,52,0.29,122,0.019,123,0.019,124,1.16,125,1.286,126,2.864,127,3.106,128,1.35,129,1.559,130,1.753,131,3.396,132,4.568,133,3.396,134,1.286,135,1.381,136,3.106,137,1.286]],["title/interfaces/PropertyChangeEvent.html",[0,0.588,42,1.882]],["body/interfaces/PropertyChangeEvent.html",[0,0.969,1,1.61,2,0.198,3,0.175,4,0.175,5,1.61,6,1.501,7,1.008,8,1.61,9,0.409,10,3.11,11,3.551,12,0.799,13,0.023,14,0.198,15,0.156,16,2.303,17,0.981,18,1.722,19,1.988,20,0.198,21,0.306,22,1.501,23,2.897,24,1.317,25,1.726,26,2.303,27,2.303,28,0.572,29,1.61,30,2.482,31,0.409,32,1.501,33,1.883,34,1.883,35,1.883,36,1.883,37,1.883,38,1.736,39,1.501,40,1.883,41,3.227,42,2.303,43,3.627,44,4.043,45,0.503,46,1.015,47,0.47,48,0.646,49,1.736,50,0.919,51,1.883,52,0.131,53,0.608,54,0.919,55,1.726,56,1.883,57,1.883,58,1.883,59,2.482,60,1.239,61,2.692,62,0.503,63,1.61,64,1.883,65,1.883,66,1.736,67,1.736,68,2.532,69,1.883,70,1.883,71,3.142,72,1.883,73,2.692,74,1.61,75,1.403,76,1.883,77,3.772,78,1.883,79,3.142,80,1.883,81,1.883,82,1.883,83,1.883,84,2.692,85,1.883,86,1.883,87,1.447,88,3.627,89,1.364,90,0.973,91,1.883,92,2.692,93,1.883,94,1.883,95,1.883,96,2.692,97,1.883,98,1.883,99,2.692,100,1.883,101,2.692,102,1.883,103,1.883,104,2.692,105,2.692,106,1.883,107,2.482,108,1.883,109,1.883,110,1.883,111,1.883,112,1.883,113,1.883,114,1.883,115,1.883,116,0.646,117,1.61,118,1.883,119,0.728,120,1.883,121,1.315,122,0.013,123,0.013]],["title/interfaces/WCConfirmationTitleProvider.html",[0,0.588,170,1.754]],["body/interfaces/WCConfirmationTitleProvider.html",[0,0.882,2,0.217,3,0.192,4,0.192,9,0.448,13,0.023,14,0.302,15,0.167,17,1.585,18,2.057,19,2.263,20,0.217,21,0.289,22,1.645,24,1.235,25,1.767,28,0.627,31,0.815,32,2.633,45,0.551,46,0.928,47,1.016,48,0.709,50,1.007,52,0.143,55,1.248,60,1.644,62,0.551,68,1.274,87,1.322,89,1.134,90,1.067,122,0.014,123,0.014,143,0.897,145,0.95,146,0.752,170,2.633,171,2.006,172,2.006,173,1.256,174,1.354,175,1.401,176,2.648,177,3.477,178,2.822,179,4.705,180,2.648,181,2.063,182,2.456,183,2.256,184,1.903,185,2.063,186,2.256,187,2.256,188,1.645,189,3.753,190,4.544,191,3.477,192,3.753,193,3.753,194,2.825,195,3.753,196,3.461,197,1.226,198,1.645,199,1.645,200,0.798,201,2.256,202,1.903,203,1.903,204,1.903,205,1.903,206,1.903,207,1.903,208,1.903,209,1.765,210,0.667,211,1.903,212,1.903,213,1.903,214,1.903,215,1.903,216,2.256,217,2.256,218,2.256,219,2.256,220,2.498,221,2.498,222,2.498,223,4.544,224,2.498,225,2.498,226,2.498,227,2.498,228,3.477,229,2.498,230,2.498,231,4.323,232,4.323,233,4.323,234,4.323,235,4.323,236,4.323,237,1.903,238,3.477,239,2.498,240,2.498,241,2.498,242,2.498,243,2.498,244,3.477,245,2.498,246,2.498]],["title/components/WCDashboardHeaderComponent.html",[15,0.128,247,0.902]],["body/components/WCDashboardHeaderComponent.html",[2,0.223,3,0.197,4,0.197,7,0.895,9,0.46,12,0.914,13,0.023,14,0.223,15,0.22,17,1.382,20,0.223,21,0.172,24,1.097,28,1.151,31,0.851,45,1.191,46,1.428,47,0.731,48,1.005,52,0.251,53,0.685,54,1.428,55,1.703,62,0.895,89,1.302,90,1.513,116,1.005,119,1.296,122,0.015,123,0.015,124,0.782,125,0.728,128,0.922,129,1.382,130,1.482,134,0.728,135,0.728,137,0.728,143,1.827,145,1.348,146,1.067,153,0.87,160,0.977,173,0.685,175,1.428,176,1.956,197,1.151,200,0.82,210,0.685,247,1.482,248,1.163,249,1.163,250,1.163,251,2.9,252,2.671,253,1.96,254,4.002,255,4.699,256,3.664,257,3.351,258,2.693,259,2.34,260,4.699,261,4.699,262,4.699,263,3.405,264,1.097,265,3.405,266,1.482,267,3.405,268,2.121,269,2.319,270,3.405,271,2.319,272,2.121,273,2.121,274,2.319,275,2.9,276,2.927,277,2.9,278,2.9,279,3.2,280,2.9,281,1.604,282,1.513,283,1.98,284,1.163,285,1.604,286,1.163,287,0.87,288,1.163,289,0.922,290,0.87,291,1.604,292,1.163,293,0.82,294,1.163,295,0.922,296,1.035,297,1.163,298,0.87,299,1.604,300,0.87,301,1.097,302,0.87,303,1.163,304,0.87,305,1.163,306,0.87,307,1.348,308,1.163,309,0.87,310,0.977,311,1.163,312,1.163,313,1.163,314,1.163]],["title/components/WCDataCounterComponent.html",[15,0.128,287,0.902]],["body/components/WCDataCounterComponent.html",[2,0.194,3,0.171,4,0.171,7,0.829,9,0.4,12,0.974,13,0.023,14,0.194,15,0.209,17,1.407,20,0.194,21,0.149,24,1.298,28,1.172,31,0.933,45,1.173,46,1.403,47,0.662,48,0.91,52,0.235,53,0.595,54,1.293,55,1.815,62,0.829,89,1.381,90,1.755,116,0.91,119,1.391,122,0.013,123,0.013,124,0.708,125,0.632,128,0.8,129,1.311,130,1.392,134,0.632,135,0.632,137,0.632,143,1.887,145,1.563,146,1.237,153,0.755,160,0.848,173,0.595,175,1.293,176,1.698,197,1.066,200,0.712,210,1.162,247,0.755,248,1.01,249,1.01,250,1.01,252,2.474,253,0.952,256,3.394,257,3.103,258,2.529,259,2.22,264,1.37,266,1.287,268,1.842,269,2.014,271,2.014,272,1.842,273,1.842,274,2.014,276,2.65,279,2.897,281,1.452,282,1.37,283,1.86,284,1.01,285,1.452,286,1.01,287,1.392,288,1.01,289,0.8,290,0.755,291,1.452,292,1.01,293,0.712,294,1.01,295,0.8,296,0.899,297,1.01,298,0.755,299,1.452,300,0.755,301,0.952,302,0.755,303,1.01,304,0.755,305,1.01,306,0.755,307,1.22,308,1.01,309,0.755,310,0.848,311,1.01,312,1.01,313,1.01,314,1.01,315,2.519,316,3.623,317,4.254,318,4.244,319,3.394,320,4.244,321,4.254,322,4.254,323,4.254,324,4.254,325,4.254,326,2.957,327,2.957,328,3.208,329,2.957,330,2.957,331,2.957,332,2.957,333,2.014,334,2.957,335,2.23,336,2.519,337,2.957,338,2.519,339,2.519,340,2.519,341,2.23,342,2.23,343,2.519,344,2.519,345,2.519,346,2.897,347,2.519,348,2.519,349,3.623,350,2.519]],["title/injectables/WCEditService.html",[351,1.882,352,2.029]],["body/injectables/WCEditService.html",[0,0.389,2,0.153,3,0.303,4,0.135,7,0.595,9,0.851,10,2.576,12,0.939,13,0.023,14,0.343,20,0.153,21,0.18,25,1.315,28,1.086,31,0.708,52,0.101,55,1.728,60,0.671,62,0.722,68,2.207,75,1.659,87,2.063,89,1.422,119,1.574,121,1.888,122,0.011,123,0.011,140,1.343,143,1.835,145,1.646,146,1.303,148,1.763,162,2.588,175,1.086,194,1.904,210,1.246,264,1.685,351,2.311,352,2.053,353,4.641,354,4.244,355,3.914,356,1.593,357,4.7,358,4.137,359,4.137,360,4.137,361,4.137,362,3.574,363,4.137,364,2.955,365,4.137,366,4.137,367,3.574,368,3.574,369,3.044,370,3.574,371,4.137,372,3.663,373,3.574,374,3.044,375,2.339,376,2.339,377,2.339,378,3.044,379,2.339,380,2.339,381,2.339,382,3.044,383,2.339,384,3.044,385,2.339,386,2.339,387,3.564,388,2.339,389,3.044,390,2.339,391,2.339,392,2.339,393,3.044,394,2.339,395,2.339,396,2.339,397,2.339,398,2.339,399,2.339,400,3.044,401,1.992,402,1.992,403,1.992,404,1.992,405,1.992,406,1.992,407,1.992,408,1.593,409,1.593,410,1.593,411,1.763,412,1.593,413,1.763,414,1.763,415,1.992,416,1.992,417,1.992,418,3.044,419,1.992,420,1.992,421,4.137,422,4.137,423,1.992,424,1.992,425,4.457,426,3.044,427,1.992,428,1.992,429,1.992,430,4.137,431,4.137,432,2.94,433,3.044,434,1.992,435,1.992,436,3.044,437,1.763,438,1.992,439,3.695,440,1.992,441,1.992,442,1.992,443,3.044,444,3.044,445,1.992,446,1.763,447,1.992,448,1.992,449,1.992,450,3.044,451,1.992,452,1.992,453,3.695,454,1.992,455,1.992,456,1.992,457,1.992,458,3.044]],["title/interfaces/WCEditServiceConfiguration.html",[0,0.588,387,2.406]],["body/interfaces/WCEditServiceConfiguration.html",[0,0.752,2,0.211,3,0.303,4,0.187,7,0.752,9,0.912,10,2.273,12,0.759,13,0.023,14,0.391,20,0.211,21,0.228,24,1.17,25,1.224,52,0.139,55,1.533,60,0.924,62,0.536,68,2.442,75,2.099,87,1.982,89,1.211,119,1.49,121,2.273,122,0.014,123,0.014,140,1.85,148,2.429,162,1.716,194,1.716,210,1.14,351,2.409,352,1.85,353,2.194,354,2.006,355,1.85,356,2.194,357,2.744,358,2.744,359,2.744,360,2.744,361,2.744,363,2.744,364,2.194,365,2.744,366,2.744,371,2.744,372,3.409,374,2.744,378,2.744,382,2.744,384,2.744,387,3.079,389,2.744,393,2.744,400,3.851,401,2.744,402,2.744,403,2.744,404,2.744,405,2.744,406,2.744,407,2.744,408,2.194,409,2.194,410,2.194,411,2.429,412,2.194,413,2.429,414,2.429,415,2.744,416,2.744,417,2.744,418,3.851,419,2.744,420,2.744,421,4.824,422,4.824,423,2.744,424,2.744,425,5.08,426,3.851,427,2.744,428,2.744,429,2.744,430,4.824,431,4.824,432,3.295,433,3.851,434,2.744,435,2.744,436,3.851,437,2.429,438,2.744,439,4.449,440,2.744,441,2.744,442,2.744,443,3.851,444,3.851,445,2.744,446,2.429,447,2.744,448,2.744,449,2.744,450,3.851,451,2.744,452,2.744,453,4.449,454,2.744,455,2.744,456,2.744,457,2.744,458,3.851,459,5.224,460,5.224,461,5.224]],["title/components/WCGaugeComponent.html",[15,0.128,289,0.956]],["body/components/WCGaugeComponent.html",[2,0.19,3,0.168,4,0.168,7,0.82,9,0.392,12,0.97,13,0.023,14,0.19,15,0.207,17,1.398,20,0.19,21,0.146,24,1.294,28,1.165,31,0.931,45,1.171,46,1.4,47,0.653,48,0.897,52,0.233,53,0.584,54,1.275,55,1.808,62,0.82,89,1.374,90,1.739,116,0.897,119,1.38,122,0.013,123,0.013,124,0.698,125,0.62,128,0.785,129,1.301,130,1.525,134,0.62,135,0.62,137,0.62,143,1.883,145,1.549,146,1.226,153,0.741,160,0.832,173,0.584,175,1.275,176,1.666,197,1.054,200,0.699,210,0.584,247,0.741,248,0.99,249,0.99,250,0.99,252,2.447,253,0.934,256,3.357,257,3.07,258,2.507,259,2.203,264,1.351,266,1.262,268,1.807,269,1.976,271,1.976,272,1.807,273,1.807,274,1.976,276,2.613,279,2.858,281,1.432,282,1.351,283,1.844,284,0.99,285,1.432,286,0.99,287,0.741,288,0.99,289,1.462,290,0.741,291,1.432,292,0.99,293,0.699,294,0.99,295,0.785,296,0.882,297,0.99,298,0.741,299,1.432,300,0.741,301,0.934,302,0.741,303,0.99,304,0.741,305,0.99,306,0.741,307,1.203,308,0.99,309,0.741,310,0.832,311,0.99,312,0.99,313,0.99,314,0.99,318,4.198,319,3.357,320,4.198,328,3.164,333,1.976,335,2.187,336,2.471,338,2.471,339,2.471,340,2.471,341,2.187,342,2.187,343,2.471,344,2.471,345,2.471,346,2.858,347,2.471,348,2.471,349,3.574,350,2.471,462,5.95,463,2.471,464,4.196,465,4.196,466,4.196,467,4.196,468,4.196,469,4.196,470,2.901,471,2.901,472,2.901,473,2.901,474,2.901,475,2.901,476,2.901,477,2.901]],["title/components/WCGridButtonEditorComponent.html",[15,0.128,290,0.902]],["body/components/WCGridButtonEditorComponent.html",[2,0.133,3,0.118,4,0.118,7,0.66,9,0.275,12,1.003,13,0.023,14,0.21,15,0.197,17,1.378,18,1.673,19,1.673,20,0.133,21,0.102,24,1.281,28,1.167,31,0.907,39,1.969,45,1.115,46,1.324,47,0.701,48,0.685,49,1.839,52,0.088,53,0.409,54,0.973,55,1.869,60,0.918,62,0.338,68,0.781,89,1.442,90,1.819,116,0.685,119,1.508,122,0.01,123,0.01,124,0.533,125,0.434,128,0.55,129,1.113,130,1.15,134,0.434,135,0.434,137,0.434,143,1.926,145,1.667,146,1.32,153,0.518,160,0.582,171,3.1,173,0.409,175,0.973,180,1.839,181,1.264,182,1.706,184,1.166,192,2.47,193,2.47,194,3.415,195,2.47,196,2.278,197,1.166,200,0.489,210,0.409,247,0.518,248,0.693,249,0.693,250,0.693,252,1.969,253,0.654,258,2.09,264,1.277,266,0.883,281,1.093,282,1.031,283,1.537,284,0.693,285,1.093,286,0.693,287,0.518,288,0.693,289,0.55,290,1.15,291,1.093,292,0.693,293,0.489,294,0.693,295,0.55,296,0.617,297,0.693,298,0.518,299,1.093,300,0.518,301,0.654,302,0.518,303,0.693,304,0.518,305,0.693,306,0.518,307,0.918,308,0.693,309,0.518,310,0.582,311,0.693,312,0.693,313,0.693,314,0.693,319,2.701,333,1.383,335,1.531,346,2.181,437,2.415,478,1.531,479,3.202,480,3.966,481,3.966,482,3.966,483,3.966,484,3.966,485,3.966,486,4.502,487,3.966,488,4.502,489,4.502,490,4.502,491,3.966,492,3.966,493,3.966,494,5.45,495,2.728,496,2.728,497,2.03,498,4.9,499,3.202,500,2.03,501,3.202,502,3.202,503,3.202,504,3.202,505,3.202,506,3.202,507,3.202,508,3.202,509,1.839,510,2.03,511,2.03,512,2.03,513,2.03,514,2.03,515,2.03,516,2.03,517,2.03,518,2.03,519,2.03,520,2.03,521,3.202,522,2.03,523,2.03,524,2.03,525,2.03,526,2.03,527,2.03,528,2.03,529,2.03,530,2.03,531,2.03,532,2.03,533,2.03,534,2.03,535,2.03,536,2.03,537,2.03,538,2.03,539,2.03,540,2.03,541,2.03,542,2.03,543,2.03,544,2.03,545,2.03,546,2.03,547,2.03,548,2.03,549,2.03,550,2.03,551,2.03,552,2.03,553,2.03,554,2.03,555,2.03,556,2.03,557,2.03,558,2.03,559,2.03,560,2.03,561,1.383,562,2.03,563,2.03,564,3.202,565,2.03,566,3.202,567,2.03,568,2.03,569,3.202,570,2.03,571,2.03,572,3.202,573,2.03,574,2.03,575,3.202,576,2.03,577,2.03,578,2.03,579,3.202,580,2.03,581,2.03,582,3.202,583,2.03,584,2.03,585,3.202,586,2.03,587,2.03,588,2.03,589,2.03,590,2.03,591,2.03,592,2.03,593,2.03,594,2.03]],["title/components/WCGridEditorCommandComponent.html",[15,0.128,200,0.851]],["body/components/WCGridEditorCommandComponent.html",[0,0.529,2,0.132,3,0.116,4,0.116,7,0.655,9,0.272,12,0.967,13,0.023,14,0.208,15,0.176,17,1.48,18,1.854,19,2.133,20,0.132,21,0.226,22,0.998,24,1.182,25,1.749,28,1.065,31,0.784,32,2.696,45,1.114,46,1.311,47,1.131,48,0.68,50,0.966,52,0.087,53,0.405,55,1.403,60,1.284,62,0.655,68,0.773,87,0.911,89,1.161,90,0.647,116,0.68,119,1.175,122,0.01,123,0.01,124,0.529,125,0.43,128,0.544,129,1.107,130,1.144,134,0.43,135,0.43,137,0.43,143,1.86,145,1.399,146,1.107,153,0.513,160,0.577,170,1.956,171,3,172,3,173,1.416,174,0.822,175,0.966,177,1.516,179,3.677,180,1.825,181,1.252,182,1.693,183,1.369,184,1.155,185,1.252,186,1.369,187,1.369,188,0.998,189,3.037,190,3.677,191,2.396,192,3.382,193,3.382,194,2.762,195,3.382,196,3.118,197,1.269,198,1.577,199,1.577,200,1.079,201,1.369,202,2.263,203,2.801,204,2.263,205,2.263,206,2.263,207,2.263,208,1.825,209,1.071,210,0.639,211,1.155,212,1.155,213,1.155,214,1.155,215,1.155,216,2.684,217,2.684,218,2.684,219,2.684,220,3.376,221,3.376,222,3.376,223,3.677,224,2.396,225,1.516,226,1.516,227,1.516,228,2.396,229,1.516,230,1.516,231,3.376,232,3.376,233,3.376,234,3.376,235,3.376,236,3.376,237,1.825,238,2.396,239,1.516,240,2.396,241,1.516,242,2.396,243,1.516,244,2.396,245,1.516,246,2.396,247,0.513,248,0.686,249,0.686,250,0.686,253,0.647,259,1.222,264,0.647,266,0.875,281,1.085,282,1.023,283,1.529,284,0.686,285,1.085,286,0.686,287,0.513,288,0.686,289,0.544,290,0.513,291,1.085,292,0.686,293,0.484,294,0.686,295,0.544,296,0.611,297,0.686,298,0.513,299,1.085,300,0.513,301,0.647,302,0.513,303,0.686,304,0.513,305,0.686,306,0.513,307,0.911,308,0.686,309,0.513,310,0.577,311,0.686,312,0.686,313,0.686,314,0.686,495,2.706,496,2.706,509,3.233,595,3.178,596,2.706,597,3.178,598,2.01,599,2.01,600,2.01,601,1.712,602,2.01,603,2.01,604,2.01,605,1.712,606,2.01,607,2.01,608,2.01,609,1.712,610,1.712,611,2.01,612,2.01,613,2.01,614,1.712,615,2.01,616,2.01,617,2.01,618,2.01,619,2.01,620,2.01,621,2.01,622,2.01,623,2.01,624,2.01]],["title/interfaces/WCGridEditorCommandComponentEvent.html",[0,0.588,188,1.754]],["body/interfaces/WCGridEditorCommandComponentEvent.html",[0,0.874,2,0.213,3,0.189,4,0.189,7,0.758,9,0.44,12,0.901,13,0.023,14,0.299,15,0.165,17,1.581,18,2.044,19,2.255,20,0.213,21,0.287,22,1.616,24,1.279,25,1.811,31,0.81,32,2.608,45,0.542,46,0.917,47,0.965,48,0.696,50,0.989,52,0.141,55,1.233,60,1.632,62,0.542,68,1.252,87,1.306,89,0.974,90,1.049,122,0.014,123,0.014,146,1.034,170,2.261,171,1.417,172,1.417,173,1.205,174,1.331,177,2.455,179,4.901,180,2.616,181,2.028,182,2.427,183,2.217,184,1.87,185,2.028,186,2.217,187,2.217,188,2.261,189,4.048,190,4.901,191,4.515,192,3.73,193,3.73,194,2.799,195,3.73,196,3.439,197,1.217,198,1.616,199,1.616,200,0.784,201,2.217,202,1.87,203,1.87,204,1.87,205,1.87,206,1.87,207,1.87,208,1.87,209,1.735,210,0.655,211,1.87,212,1.87,213,1.87,214,1.87,215,1.87,216,2.217,217,2.217,218,2.217,219,2.217,220,2.455,221,2.455,222,2.455,223,4.515,224,2.455,225,2.455,226,2.455,227,2.455,228,3.434,229,2.455,230,2.455,231,4.29,232,4.29,233,4.29,234,4.29,235,4.29,236,4.29,237,1.87,238,3.434,239,2.455,240,2.455,241,2.455,242,2.455,243,2.455,244,3.434,245,2.455,246,2.455,625,4.555]],["title/interfaces/WCGridEditorCommandConfig.html",[0,0.588,626,2.201]],["body/interfaces/WCGridEditorCommandConfig.html",[0,0.952,2,0.252,3,0.223,4,0.223,7,0.848,9,0.52,12,0.947,13,0.023,14,0.334,15,0.22,17,1.553,18,2.166,19,2.166,20,0.252,21,0.308,24,1.334,25,1.549,45,0.639,46,0.773,47,1.064,48,0.822,50,1.168,52,0.166,60,1.749,62,0.639,87,1.463,122,0.016,123,0.016,140,2.207,146,1.534,170,2.842,171,1.672,172,2.219,173,1.36,174,1.571,188,3.15,197,1.357,198,1.908,199,1.908,202,3.502,203,3.502,204,3.502,205,3.502,206,3.502,207,2.207,208,2.207,209,2.048,210,0.773,211,2.207,212,2.207,213,2.207,214,2.207,215,2.207,237,2.207,259,2.344,293,0.926,626,3.177,627,2.394,628,3.797,629,2.898,630,2.898,631,3.177,632,2.618,633,2.898,634,2.898,635,2.898,636,2.898,637,2.898,638,2.898,639,2.898,640,2.898,641,2.898,642,2.898,643,2.898,644,2.898]],["title/interfaces/WCGridEditorCommandsConfig.html",[0,0.588,631,2.201]],["body/interfaces/WCGridEditorCommandsConfig.html",[0,0.992,2,0.274,3,0.242,4,0.242,13,0.023,14,0.353,15,0.228,17,1.578,18,2.225,19,2.225,20,0.274,21,0.318,24,1.233,25,1.131,45,0.695,46,0.841,47,1.081,48,0.893,50,1.27,52,0.181,60,1.806,62,0.695,87,1.545,122,0.017,123,0.017,140,3.094,170,2.074,171,1.818,172,2.344,173,1.384,174,1.708,188,3.236,197,1.394,198,2.074,199,2.074,202,2.4,203,2.4,204,2.4,205,2.4,206,2.4,207,2.4,208,2.4,209,2.226,210,0.841,211,2.4,212,2.4,213,2.4,214,2.4,215,2.4,237,2.4,259,1.606,293,1.006,626,2.602,627,2.602,628,3.922,629,3.15,630,3.15,631,3.713,632,3.669,633,3.15,634,3.15,635,3.15,636,3.15,637,3.15,638,3.15,639,3.15,640,3.15,641,3.15,642,3.15,643,3.15,644,3.15]],["title/components/WCGridEditorCommandsGroupComponent.html",[15,0.128,293,0.851]],["body/components/WCGridEditorCommandsGroupComponent.html",[0,0.618,2,0.161,3,0.143,4,0.143,7,0.409,9,0.333,12,0.967,13,0.022,14,0.244,15,0.211,17,1.447,18,1.995,19,2.102,20,0.161,21,0.252,24,1.064,25,0.666,28,1.105,31,0.674,45,1.147,46,1.35,47,1.13,48,0.794,50,1.129,52,0.106,53,0.495,60,1.43,62,0.744,87,1.066,89,1.066,116,0.794,119,1.201,122,0.012,123,0.012,124,0.618,125,0.526,128,0.666,129,1.215,130,1.273,134,0.526,135,0.526,137,0.526,140,1.413,143,1.828,145,1.43,146,1.132,153,0.628,160,0.706,170,1.222,171,2.956,172,1.616,173,1.462,174,1.006,175,1.129,178,2.096,188,3.243,192,2.314,193,2.314,194,2.385,195,2.314,196,2.134,197,1.363,198,1.844,199,1.844,200,0.593,202,1.413,203,1.413,204,1.413,205,1.413,206,1.413,207,2.57,208,2.134,209,1.311,210,0.748,211,1.413,212,1.413,213,1.413,214,1.413,215,1.413,216,2.53,217,2.53,218,2.53,219,2.53,237,2.134,247,0.628,248,0.84,249,0.84,250,0.84,253,0.792,259,0.946,264,0.792,281,1.268,282,1.196,283,1.702,284,0.84,285,1.268,286,0.84,287,0.628,288,0.84,289,0.666,290,0.628,291,1.268,292,0.84,293,1.201,294,0.84,295,0.666,296,0.748,297,0.84,298,0.628,299,1.268,300,0.628,301,0.792,302,0.628,303,0.84,304,0.628,305,0.84,306,0.628,307,1.066,308,0.84,309,0.628,310,0.706,311,0.84,312,0.84,313,0.84,314,0.84,509,3.454,596,3.164,601,2.096,605,2.096,609,3.164,610,2.096,614,2.096,626,1.533,627,4.231,628,4.344,629,1.855,630,1.855,631,2.788,632,1.676,633,3.375,634,1.855,635,1.855,636,1.855,637,1.855,638,1.855,639,2.801,640,1.855,641,2.801,642,1.855,643,2.801,644,1.855,645,3.715,646,3.715,647,3.715,648,2.461,649,2.461,650,2.461,651,2.461,652,2.461,653,2.096,654,2.461,655,2.461,656,2.461,657,2.461]],["title/components/WCLoadingOverlayComponent.html",[15,0.128,295,0.956]],["body/components/WCLoadingOverlayComponent.html",[2,0.248,3,0.219,4,0.219,7,0.945,9,0.512,12,0.55,13,0.022,14,0.331,15,0.228,17,1.376,20,0.248,21,0.191,25,1.366,28,1.074,31,0.683,45,1.203,46,1.435,47,0.785,48,1.079,50,1.534,52,0.164,53,0.761,62,0.945,87,1.085,116,1.079,122,0.016,123,0.016,124,0.84,125,0.809,128,1.024,129,1.433,130,1.548,134,0.809,135,0.809,137,0.809,143,1.537,153,0.966,160,1.085,173,0.761,174,1.547,197,1.215,198,2.506,199,2.506,200,0.912,210,0.761,247,0.966,248,1.292,249,1.292,250,1.292,253,1.219,264,1.219,281,1.723,282,1.626,283,2.069,284,1.292,285,1.723,286,1.292,287,0.966,288,1.292,289,1.024,290,0.966,291,1.723,292,1.292,293,0.912,294,1.292,295,1.64,296,2.014,297,1.292,298,0.966,299,1.723,300,0.966,301,1.219,302,0.966,303,1.292,304,0.966,305,1.292,306,0.966,307,1.448,308,1.292,309,0.966,310,1.085,311,1.292,312,1.292,313,1.292,314,1.292,658,5.161,659,4.569,660,5.194,661,6.629,662,5.68,663,4.299,664,3.223,665,3.223,666,3.223,667,2.853,668,2.853]],["title/components/WCPanelComponent.html",[15,0.128,298,0.902]],["body/components/WCPanelComponent.html",[2,0.224,3,0.198,4,0.198,7,0.897,9,0.462,12,0.915,13,0.023,14,0.224,15,0.22,17,1.384,20,0.224,21,0.173,24,1.099,28,1.153,31,0.824,45,1.192,46,1.438,47,0.733,48,1.008,50,1.432,52,0.251,53,0.688,54,1.432,55,1.706,62,0.897,89,1.304,90,1.518,116,1.008,119,1.299,122,0.015,123,0.015,124,0.784,125,0.731,128,0.926,129,1.384,130,1.484,134,0.731,135,0.731,137,0.731,143,1.829,145,1.352,146,1.07,153,0.873,160,0.981,173,0.688,175,1.432,176,1.964,197,1.153,200,0.824,210,0.688,247,0.873,248,1.167,249,1.167,250,1.167,252,2.677,253,1.101,256,3.673,257,3.358,258,2.697,259,2.344,266,1.488,268,2.13,269,2.329,271,2.329,273,2.13,274,2.329,275,2.912,276,2.935,277,2.912,278,2.912,279,3.21,280,2.912,281,1.609,282,1.518,283,1.984,284,1.167,285,1.609,286,1.167,287,0.873,288,1.167,289,0.926,290,0.873,291,1.609,292,1.167,293,0.824,294,1.167,295,0.926,296,1.039,297,1.167,298,1.484,299,1.609,300,0.873,301,1.101,302,0.873,303,1.167,304,0.873,305,1.167,306,0.873,307,1.352,308,1.167,309,0.873,310,1.547,311,1.167,312,1.167,313,1.167,314,1.167,669,2.912,670,4.014,671,4.014,672,4.713,673,4.713,674,4.713,675,3.42,676,3.42,677,3.42,678,3.42]],["title/components/WCPropertyEditorComponent.html",[15,0.128,53,0.711]],["body/components/WCPropertyEditorComponent.html",[0,0.731,1,1.035,2,0.127,3,0.113,4,0.113,5,3.526,6,3.286,7,1.146,8,1.035,9,0.263,10,2.942,11,3.301,12,0.932,13,0.023,14,0.127,15,0.173,16,2.053,17,0.997,18,1.637,19,1.829,20,0.127,21,0.258,22,0.965,23,2.523,24,1.303,25,1.623,26,1.648,27,1.648,28,1.201,29,1.035,30,2.213,31,0.521,32,0.965,33,1.21,34,1.21,35,2.4,36,1.21,37,1.21,38,1.116,39,0.965,40,1.21,41,3.345,42,1.035,43,1.927,44,3.182,45,1.108,46,1.332,47,0.684,48,0.661,49,1.777,50,0.94,51,1.927,52,0.084,53,0.884,54,0.94,55,1.83,56,2.736,57,2.736,58,2.736,59,2.523,60,0.887,61,2.736,62,0.641,63,2.341,64,1.21,65,1.21,66,1.777,67,1.777,68,2.259,69,1.21,70,1.21,71,2.4,72,1.21,73,1.927,74,1.035,75,0.902,76,1.21,77,3.182,78,1.21,79,2.736,80,1.21,81,1.21,82,1.21,83,1.21,84,1.927,85,1.21,86,1.21,87,1.376,88,3.859,89,1.415,90,0.626,91,1.21,92,1.927,93,1.21,94,1.927,95,1.21,96,1.927,97,1.927,98,1.927,99,1.927,100,1.21,101,1.927,102,1.927,103,1.21,104,1.927,105,3.464,106,1.927,107,2.523,108,1.21,109,1.21,110,1.927,111,1.21,112,1.21,113,1.21,114,1.927,115,1.927,116,0.939,117,1.035,118,1.927,119,1.34,120,1.21,121,0.845,122,0.01,123,0.01,124,0.515,125,0.416,128,0.526,129,1.089,130,1.122,134,0.416,135,0.416,137,0.416,143,1.78,145,1.72,146,1.362,153,0.496,160,0.557,173,0.391,175,0.94,197,0.824,200,0.468,210,0.391,247,0.496,248,0.663,249,0.663,250,0.663,253,0.626,264,0.626,266,0.845,281,1.056,282,0.996,283,1.5,284,0.663,285,1.056,286,0.663,287,0.496,288,0.663,289,0.526,290,0.496,291,1.056,292,0.663,293,0.468,294,0.663,295,0.526,296,0.591,297,0.663,298,0.496,299,1.056,300,0.496,301,0.626,302,0.496,303,0.663,304,0.496,305,0.663,306,0.496,307,0.887,308,0.663,309,0.496,310,0.557,311,0.663,312,0.663,313,0.663,314,0.663,509,2.755,679,3.093,680,3.093,681,3.093,682,3.093,683,3.093,684,3.093,685,3.093,686,3.093,687,2.635,688,2.635,689,3.093,690,1.943,691,1.943,692,1.943,693,1.943,694,1.943,695,1.943,696,1.943,697,1.943,698,1.943,699,1.943,700,1.943,701,1.943,702,1.943,703,1.943,704,1.943,705,1.943,706,1.943,707,1.943,708,3.093,709,3.093]],["title/interfaces/WCPropertyEditorItem.html",[0,0.588,11,1.882]],["body/interfaces/WCPropertyEditorItem.html",[0,0.924,1,1.432,2,0.176,3,0.156,4,0.156,5,1.432,6,1.334,7,0.967,8,1.432,9,0.363,10,3.045,11,3.416,12,0.999,13,0.023,14,0.176,15,0.143,16,2.114,17,0.901,18,1.61,19,1.897,20,0.176,21,0.293,22,1.334,23,3.191,24,1.362,25,1.815,26,2.114,27,2.114,28,0.985,29,2.775,30,3.191,31,0.704,32,2.586,33,3.244,34,3.244,35,3.244,36,3.244,37,3.244,38,2.991,39,2.586,40,3.244,41,3.098,42,1.432,43,2.471,44,3.622,45,0.447,46,0.949,47,0.418,48,0.575,49,1.544,50,0.817,51,1.674,52,0.116,53,0.541,54,0.817,55,1.671,56,1.674,57,1.674,58,1.674,59,2.279,60,1.138,61,2.471,62,0.447,63,1.432,64,1.674,65,1.674,66,1.544,67,1.544,68,2.465,69,1.674,70,1.674,71,2.938,72,1.674,73,2.471,74,1.432,75,1.247,76,1.674,77,3.622,78,1.674,79,2.938,80,1.674,81,1.674,82,1.674,83,1.674,84,2.471,85,1.674,86,1.674,87,1.353,88,3.46,89,1.32,90,0.866,91,1.674,92,2.471,93,1.674,94,1.674,95,1.674,96,2.471,97,1.674,98,1.674,99,2.471,100,1.674,101,2.471,102,1.674,103,1.674,104,2.471,105,2.471,106,1.674,107,2.279,108,1.674,109,1.674,110,1.674,111,1.674,112,1.674,113,1.674,114,1.674,115,1.674,116,0.575,117,1.432,118,1.674,119,0.647,120,1.674,121,1.169,122,0.012,123,0.012,146,1.589]],["title/interfaces/WCPropertyEditorModel.html",[0,0.588,41,1.882]],["body/interfaces/WCPropertyEditorModel.html",[0,0.973,1,1.631,2,0.201,3,0.177,4,0.177,5,1.631,6,1.519,7,1.012,8,1.631,9,0.414,10,3.113,11,3.56,12,0.633,13,0.023,14,0.201,15,0.158,16,2.323,17,0.99,18,1.734,19,1.997,20,0.201,21,0.307,22,1.519,23,2.917,24,1.319,25,1.732,26,2.323,27,2.323,28,0.579,29,1.631,30,2.504,31,0.414,32,1.519,33,1.906,34,1.906,35,1.906,36,1.906,37,1.906,38,1.758,39,1.519,40,1.906,41,3.334,42,1.631,43,2.716,44,3.788,45,0.509,46,1.022,47,0.476,48,0.654,49,1.758,50,0.93,51,1.906,52,0.132,53,0.616,54,0.93,55,1.732,56,1.906,57,1.906,58,1.906,59,2.504,60,1.251,61,2.716,62,0.509,63,1.631,64,1.906,65,1.906,66,1.758,67,1.758,68,2.539,69,1.906,70,1.906,71,3.163,72,1.906,73,2.716,74,1.631,75,1.421,76,1.906,77,3.788,78,1.906,79,3.163,80,1.906,81,1.906,82,1.906,83,1.906,84,2.716,85,1.906,86,1.906,87,1.457,88,3.644,89,1.368,90,0.986,91,1.906,92,2.716,93,1.906,94,1.906,95,1.906,96,2.716,97,1.906,98,1.906,99,2.716,100,1.906,101,2.716,102,1.906,103,1.906,104,2.716,105,2.716,106,1.906,107,2.504,108,1.906,109,1.906,110,1.906,111,1.906,112,1.906,113,1.906,114,1.906,115,1.906,116,0.654,117,1.631,118,1.906,119,0.737,120,1.906,121,1.332,122,0.014,123,0.014]],["title/components/WCSlidePanelComponent.html",[15,0.128,300,0.902]],["body/components/WCSlidePanelComponent.html",[2,0.201,3,0.178,4,0.178,7,0.847,9,0.415,12,0.851,13,0.023,14,0.201,15,0.212,18,1.893,19,2.079,20,0.201,21,0.155,25,1.501,28,1.108,29,1.637,31,0.415,39,3.11,45,1.178,46,1.397,47,0.68,48,0.935,50,1.329,52,0.133,53,0.618,54,1.329,55,0.832,60,1.59,62,0.511,87,1.797,89,1.186,116,0.935,117,1.637,119,1.411,122,0.014,123,0.014,124,0.727,125,0.657,128,0.832,129,1.33,130,1.416,134,0.657,135,0.657,137,0.657,143,1.733,145,1.254,146,0.993,153,0.785,160,0.881,173,0.618,174,1.256,175,1.329,197,1.088,198,2.17,199,2.17,200,0.74,210,0.618,247,0.785,248,1.049,249,1.049,250,1.049,252,2.527,253,0.989,258,2.574,266,1.337,281,1.493,282,1.887,283,1.893,284,1.049,285,1.493,286,1.049,287,0.785,288,1.049,289,0.832,290,0.785,291,1.493,292,1.049,293,0.74,294,1.049,295,0.832,296,0.934,297,1.049,298,0.785,299,1.493,300,1.416,301,2.098,302,0.785,303,1.049,304,0.785,305,1.049,306,0.785,307,1.254,308,1.049,309,0.785,310,2.01,311,1.049,312,1.049,313,1.049,314,1.049,509,2.511,561,2.092,653,2.616,663,2.616,664,2.616,710,5.55,711,4.913,712,5.545,713,5.859,714,5.545,715,5.859,716,4.335,717,3.072,718,6.09,719,4.372,720,3.072,721,4.372,722,3.072,723,4.372,724,3.724,725,2.616,726,4.372,727,4.372,728,3.072,729,3.072,730,3.072,731,3.072,732,3.072,733,3.072,734,3.072,735,3.072,736,3.072,737,3.072,738,4.372]],["title/components/WCSwitchButton.html",[15,0.128,302,0.902]],["body/components/WCSwitchButton.html",[2,0.2,3,0.177,4,0.177,7,0.843,9,0.412,12,0.945,13,0.023,14,0.2,15,0.211,17,1.379,20,0.2,21,0.154,24,1.248,25,1.581,28,1.149,31,0.864,45,1.177,46,1.409,47,0.677,48,0.93,52,0.132,53,0.614,54,1.321,55,1.761,62,0.843,74,1.624,89,1.337,90,1.632,116,1.514,119,1.331,122,0.014,123,0.014,124,0.723,125,0.652,128,0.825,129,1.327,130,1.411,134,0.652,135,0.652,137,0.652,143,1.854,145,1.454,146,1.151,153,0.779,160,0.874,173,0.614,175,1.321,176,1.751,189,3.157,197,1.084,200,0.734,210,0.614,247,0.779,248,1.041,249,1.041,250,1.041,252,2.516,253,0.982,257,3.157,258,2.565,259,2.246,264,0.982,266,1.327,268,1.899,272,1.899,273,1.899,276,2.708,281,1.485,282,1.4,283,1.887,284,1.041,285,1.485,286,1.041,287,0.779,288,1.041,289,0.825,290,0.779,291,1.485,292,1.041,293,0.734,294,1.041,295,0.825,296,0.927,297,1.041,298,0.779,299,1.485,300,0.779,301,0.982,302,1.411,303,1.041,304,0.779,305,1.041,306,0.779,307,1.247,308,1.041,309,0.779,310,0.874,311,1.041,312,1.041,313,1.041,314,1.041,341,2.299,342,2.299,739,5.873,740,2.597,741,2.962,742,4.349,743,5.069,744,4.317,745,5.069,746,4.349,747,4.349,748,4.349,749,4.349,750,3.049,751,3.049,752,3.049,753,3.049,754,2.597,755,3.049,756,3.049,757,3.049,758,3.049,759,3.049,760,3.049,761,2.597,762,2.597,763,3.704,764,3.049,765,3.049,766,4.349,767,3.049]],["title/components/WCSwitchControl.html",[15,0.128,304,0.902]],["body/components/WCSwitchControl.html",[0,0.751,2,0.164,3,0.145,4,0.145,7,0.751,9,0.338,12,0.941,13,0.023,14,0.329,15,0.195,16,2.407,17,0.567,18,1.839,19,2.005,20,0.164,21,0.19,24,0.711,25,1.223,28,1.169,31,0.852,38,1.435,45,1.149,46,1.39,47,0.585,48,0.804,50,1.142,52,0.108,53,0.503,54,1.142,55,1.754,59,2.594,60,1.078,62,0.751,63,2.677,66,1.435,67,1.435,68,1.737,74,2.002,75,1.16,89,1.322,90,1.21,107,2.594,116,1.503,119,1.489,122,0.012,123,0.012,124,0.625,125,0.534,128,0.676,129,1.223,130,1.283,134,0.534,135,0.534,137,0.534,143,1.82,145,1.623,146,1.285,153,0.638,156,2.494,160,0.717,173,0.503,175,1.142,180,2.158,181,1.556,182,2.002,189,1.556,197,0.966,200,0.602,210,0.503,247,0.638,248,0.853,249,0.853,250,0.853,253,0.805,264,1.455,266,2.186,281,1.283,282,1.21,283,1.715,284,0.853,285,1.283,286,0.853,287,0.638,288,0.853,289,0.676,290,0.638,291,1.283,292,0.853,293,0.602,294,0.853,295,0.676,296,0.759,297,0.853,298,0.638,299,1.283,300,0.638,301,0.805,302,0.638,303,0.853,304,1.376,305,0.853,306,0.638,307,1.078,308,0.853,309,0.638,310,0.717,311,0.853,312,0.853,313,0.853,314,0.853,319,3.422,333,1.702,346,3.669,509,2.886,687,3.201,688,3.201,744,3.847,754,2.128,761,2.128,762,2.128,763,3.201,768,5.104,769,1.884,770,3.406,771,3.406,772,3.758,773,3.758,774,5.024,775,5.024,776,3.758,777,3.758,778,3.758,779,3.758,780,2.498,781,2.498,782,2.498,783,2.498,784,2.498,785,3.758,786,2.498,787,5.024,788,3.758,789,2.498,790,3.758,791,2.498,792,2.498,793,2.498,794,3.422,795,4.062,796,2.498,797,2.498,798,2.498,799,2.498,800,4.517,801,2.498,802,3.201,803,3.201,804,2.128,805,2.498,806,2.498,807,2.128,808,2.128,809,3.758,810,2.498,811,2.498,812,2.498,813,2.498,814,2.498,815,2.498,816,2.498,817,2.498,818,2.498,819,2.498,820,2.498,821,2.498,822,4.517,823,2.498,824,2.498]],["title/components/WCTabItemComponent.html",[15,0.128,306,0.902]],["body/components/WCTabItemComponent.html",[2,0.223,3,0.197,4,0.197,7,0.894,9,0.459,10,2.041,12,0.883,13,0.023,14,0.223,15,0.22,17,1.428,20,0.223,21,0.171,24,1.15,28,1.096,31,0.822,39,2.876,45,1.191,46,1.427,47,0.73,48,1.003,52,0.203,53,0.683,54,1.425,62,0.565,87,1.803,89,1.149,116,1.003,119,0.818,122,0.015,123,0.015,124,0.78,125,0.726,128,0.919,129,1.381,130,1.48,134,0.726,135,0.726,137,0.726,143,1.744,145,0.974,146,0.771,153,0.867,160,0.974,173,0.683,175,1.425,197,1.149,200,0.818,210,0.683,247,0.867,248,1.159,249,1.159,250,1.159,252,2.667,253,1.094,258,2.689,259,2.228,264,1.866,272,2.115,281,1.601,282,1.866,283,1.978,284,1.159,285,1.601,286,1.159,287,0.867,288,1.159,289,0.919,290,0.867,291,1.601,292,1.159,293,0.818,294,1.159,295,0.919,296,1.032,297,1.159,298,0.867,299,1.601,300,0.867,301,1.094,302,0.867,303,1.159,304,0.867,305,1.159,306,1.48,307,2.018,308,1.159,309,0.867,310,0.974,311,1.159,312,1.159,313,1.159,314,1.159,561,2.313,668,3.536,825,4.952,826,2.892,827,4.69,828,4.69,829,5.794,830,5.794,831,4.69,832,3.396,833,4.69,834,3.396,835,4.69,836,3.396,837,3.396,838,3.396,839,3.396,840,3.396,841,3.396,842,3.396,843,3.396,844,3.396,845,3.396,846,3.396]],["title/components/WCTabPanelComponent.html",[15,0.128,309,0.902]],["body/components/WCTabPanelComponent.html",[2,0.241,3,0.213,4,0.213,7,0.932,9,0.498,12,0.535,13,0.023,14,0.325,15,0.226,16,2.985,20,0.241,21,0.186,28,1.059,31,0.498,45,1.2,46,1.452,47,0.771,48,1.06,50,1.506,52,0.159,53,0.741,54,1.506,62,0.932,63,3.193,89,0.787,116,1.06,119,0.887,122,0.015,123,0.015,124,0.824,125,0.787,128,0.997,129,1.42,130,1.53,134,0.787,135,0.787,137,0.787,143,1.516,153,0.94,160,1.056,173,0.741,175,1.506,197,1.198,200,0.887,210,0.741,247,0.94,248,1.257,249,1.257,250,1.257,253,1.186,281,1.692,282,1.596,283,2.046,284,1.257,285,1.692,286,1.257,287,0.94,288,1.257,289,0.997,290,0.94,291,1.692,292,1.257,293,0.887,294,1.257,295,0.997,296,1.119,297,1.257,298,0.94,299,1.692,300,0.94,301,1.186,302,0.94,303,1.257,304,0.94,305,1.257,306,1.266,307,2.053,308,1.257,309,1.53,310,1.607,311,1.257,312,1.257,313,1.257,314,1.257,432,1.962,670,4.221,671,4.221,725,3.136,825,4.519,847,3.136,848,4.956,849,3.682,850,5.993,851,4.956,852,3.136,853,3.682,854,3.682,855,3.682,856,3.682,857,3.682,858,4.956]],["title/injectables/WCToasterService.html",[351,1.882,859,2.664]],["body/injectables/WCToasterService.html",[2,0.353,3,0.198,4,0.198,9,0.462,12,0.885,13,0.023,14,0.309,20,0.224,21,0.173,24,1.332,28,1.153,29,3.096,52,0.148,62,0.569,87,2.01,89,1.304,117,3.735,119,1.468,122,0.015,123,0.015,129,0.776,141,4.014,143,1.706,145,1.748,146,1.63,147,5.686,175,1.432,201,3.958,259,2.719,328,3.553,351,2.873,561,2.329,859,3.553,860,2.912,861,4.593,862,4.713,863,3.42,864,4.95,865,3.42,866,5.225,867,3.42,868,3.42,869,3.42,870,5.755,871,6.676,872,5.811,873,3.42,874,3.42,875,3.42,876,3.42,877,3.42,878,3.42,879,3.42,880,3.42,881,3.42,882,3.42,883,5.811,884,3.42,885,3.42,886,3.42,887,3.42,888,3.42,889,3.42,890,3.42,891,3.42,892,3.42]],["title/modules/WCUIKitCoreModule.html",[150,0.956,893,2.201]],["body/modules/WCUIKitCoreModule.html",[2,0.234,3,0.207,4,0.207,6,1.774,7,0.595,13,0.023,14,0.457,15,0.129,20,0.234,21,0.299,52,0.154,53,1.395,116,1.039,122,0.015,123,0.015,129,0.812,150,1.315,152,1.774,153,0.913,154,3.169,155,2.226,156,2.411,161,3.025,162,1.904,163,2.226,166,2.588,167,3.308,168,2.226,247,1.77,298,1.77,300,1.77,302,1.77,304,1.77,306,1.77,307,1.393,309,1.77,310,1.025,711,2.695,771,2.695,804,3.044,852,3.044,864,4.137,866,2.695,893,4.538,894,3.044,895,3.044,896,3.044,897,2.226,898,1.904,899,2.053,900,2.053,901,3.574,902,3.574,903,3.574,904,3.574,905,3.574,906,3.574,907,3.574,908,3.574,909,4.858,910,3.574,911,3.574,912,3.574,913,4.858,914,3.574,915,3.044]],["title/modules/WCUIKitDataModule.html",[150,0.956,916,2.201]],["body/modules/WCUIKitDataModule.html",[2,0.296,3,0.262,4,0.262,13,0.023,14,0.446,20,0.296,21,0.327,52,0.195,122,0.018,123,0.018,150,1.532,151,3.968,152,2.243,153,1.154,154,3.55,155,2.813,156,2.81,161,3.525,162,2.407,163,2.813,166,3.016,167,3.855,168,2.813,287,1.832,289,1.942,897,2.813,898,2.407,899,2.594,900,2.594,916,4.446,917,3.847,918,3.847,919,3.847,920,4.517,921,4.517,922,4.517,923,4.517,924,4.517,925,4.517]],["title/modules/WCUIKitGridModule.html",[150,0.956,926,2.406]],["body/modules/WCUIKitGridModule.html",[2,0.264,3,0.233,4,0.233,13,0.023,14,0.452,15,0.212,20,0.264,21,0.313,47,0.966,52,0.174,122,0.016,123,0.016,150,1.424,152,1.999,153,1.028,154,3.364,155,2.508,156,2.907,161,3.276,162,2.145,163,2.508,166,2.802,167,3.582,168,2.508,172,1.752,173,1.178,197,1.252,200,1.7,290,1.803,293,1.7,295,1.911,296,1.224,352,3.795,354,2.508,355,3.021,627,2.508,628,2.508,659,3.036,660,3.036,915,3.43,926,4.92,927,3.43,928,3.43,929,3.43,930,3.43,931,4.027,932,4.027,933,4.027,934,5.259,935,3.43,936,3.43]],["title/modules/WCUIKitGridsterProviderModule.html",[150,0.956,937,2.406]],["body/modules/WCUIKitGridsterProviderModule.html",[2,0.341,3,0.302,4,0.302,13,0.023,14,0.446,20,0.341,21,0.332,52,0.225,122,0.019,123,0.019,150,1.41,166,3.29,897,3.244,898,2.775,899,2.992,900,2.992,937,4.205,938,5.605,939,4.437,940,4.205,941,4.656,942,6.581]],["title/modules/WCUIKitKendoProviderModule.html",[150,0.956,943,2.406]],["body/modules/WCUIKitKendoProviderModule.html",[2,0.278,3,0.245,4,0.245,13,0.023,14,0.46,20,0.278,21,0.303,52,0.183,122,0.017,123,0.017,150,1.147,166,2.895,197,0.906,741,2.885,897,2.638,898,2.257,899,2.433,900,2.433,939,3.608,940,4.561,943,3.701,944,3.608,945,6,946,5.801,947,3.194,948,6,949,4.236,950,4.236,951,6,952,6,953,6,954,6,955,6,956,6,957,6,958,6,959,3.608,960,6,961,6,962,6,963,6,964,3.194,965,6,966,6,967,6,968,6,969,6,970,6,971,6,972,6,973,6,974,6,975,6,976,3.608,977,5.434,978,3.608]],["title/modules/WCUIKitNgxChartsProviderModule.html",[150,0.956,979,2.406]],["body/modules/WCUIKitNgxChartsProviderModule.html",[2,0.338,3,0.299,4,0.299,13,0.023,14,0.445,20,0.338,21,0.331,52,0.223,122,0.019,123,0.019,150,1.395,154,2.96,156,2.559,166,3.269,897,3.21,898,2.746,899,2.96,900,2.96,979,4.179,980,5.154,981,5.226,982,5.226,983,4.626,984,6.551]],["title/coverage.html",[985,4.105]],["body/coverage.html",[0,1.079,1,1.605,4,0.174,5,3.098,6,2.887,7,0.967,8,3.098,11,1.605,12,0.437,13,0.023,15,0.249,41,1.605,42,1.605,47,1.064,52,0.13,53,0.606,60,0.864,116,1.243,121,3.19,122,0.013,123,0.013,124,0.914,125,0.644,126,3.34,127,3.422,134,0.644,135,0.644,137,0.644,138,2.271,139,2.565,160,0.864,170,1.495,171,2.822,172,2.391,173,1.324,174,2.651,182,2.682,188,1.495,200,0.725,247,0.769,251,2.565,264,0.97,287,0.769,289,0.815,290,0.769,293,0.725,295,0.815,298,0.769,300,0.769,302,0.769,304,0.769,306,0.769,307,1.236,309,0.769,310,0.864,315,2.565,351,2.296,352,1.73,353,4.12,354,3.768,355,3.474,356,4.12,387,2.051,408,2.051,409,2.051,410,2.051,412,2.051,462,2.565,463,2.565,478,3.25,626,1.876,627,3.135,628,3.135,631,1.876,658,2.565,659,2.271,660,2.271,669,2.565,710,2.565,711,2.271,739,2.565,740,2.565,768,4.143,769,4.143,770,2.271,794,3.96,795,2.271,825,3.25,826,2.565,847,2.565,859,2.271,860,2.565,985,2.565,986,3.012,987,3.012,988,3.012,989,5.495,990,3.012,991,3.012,992,4.962,993,7.044,994,4.31,995,5.495,996,4.31,997,4.953,998,2.565,999,2.565,1000,2.565,1001,2.565,1002,2.565,1003,5.495,1004,3.25,1005,3.012,1006,3.012,1007,3.012,1008,3.012,1009,3.012,1010,4.31,1011,3.012,1012,3.012,1013,3.012,1014,3.012]],["title/dependencies.html",[152,2.109,1015,2.952]],["body/dependencies.html",[13,0.023,17,1.013,20,0.292,21,0.225,122,0.017,123,0.017,129,1.013,152,2.214,168,2.778,197,0.954,210,0.897,264,1.436,432,2.376,665,3.798,666,3.798,667,4.234,668,3.363,741,3.037,866,3.363,898,2.376,935,3.798,936,3.798,940,4.877,941,3.363,946,6.147,947,3.363,959,3.798,964,3.363,976,3.798,978,3.798,982,3.798,983,3.363,1016,4.46,1017,6.146,1018,3.798,1019,4.782,1020,4.46,1021,5.615,1022,5.615,1023,4.46,1024,4.46,1025,4.46,1026,4.634,1027,5.615,1028,4.46,1029,4.46,1030,4.46,1031,6.146,1032,4.46,1033,4.46,1034,4.46,1035,4.46,1036,4.46,1037,4.46,1038,4.46,1039,4.46,1040,4.46,1041,4.46,1042,4.46,1043,4.46,1044,4.46,1045,4.46,1046,4.46,1047,4.46,1048,4.46]],["title/miscellaneous/enumerations.html",[1049,1.465,1050,3.619]],["body/miscellaneous/enumerations.html",[5,2.799,6,2.608,7,1.032,8,3.306,9,0.71,13,0.019,23,3.564,24,1.174,25,1.68,26,3.306,27,3.306,31,0.923,47,1.028,122,0.019,123,0.019,171,2.286,172,2.286,173,1.249,174,2.536,183,4.227,184,3.017,185,3.272,186,3.578,187,3.578,1049,2.608,1050,4.475,1051,4.475,1052,4.475]],["title/miscellaneous/functions.html",[794,2.894,1049,1.465]],["body/miscellaneous/functions.html",[9,0.677,12,0.876,13,0.022,28,1.3,31,0.929,122,0.019,123,0.019,145,1.971,146,1.56,794,3.41,997,4.264,998,5.136,999,5.136,1000,5.136,1001,5.136,1002,5.136,1049,2.486,1053,6.872,1054,5.007,1055,6.981,1056,5.136,1057,5.136,1058,5.007,1059,5.007,1060,6.03,1061,5.007,1062,5.007]],["title/index.html",[9,0.399,1063,2.952,1064,2.952]],["body/index.html",[0,0.477,3,0.166,7,0.692,10,2.482,13,0.022,14,0.273,15,0.248,26,1.527,27,2.216,28,0.542,30,1.647,31,0.562,46,0.985,47,0.836,53,0.577,54,1.264,116,1.22,121,2.13,122,0.013,123,0.013,124,0.894,130,1.25,136,3.049,146,1.112,150,1.454,151,1.647,152,2.065,173,0.837,184,2.389,185,1.786,196,1.647,197,1.149,209,2.216,210,0.837,247,1.062,253,2.167,254,4.17,258,1.331,259,1.883,282,1.577,287,0.732,290,0.732,296,1.264,298,1.062,300,0.732,301,1.73,302,1.062,306,0.732,307,1.193,309,0.732,310,1.838,316,2.442,355,2.812,364,3.658,369,2.442,432,2.609,446,2.162,632,1.953,716,2.442,724,4.575,741,3.658,771,2.162,861,3.543,870,2.442,893,2.591,898,2.862,899,3.787,900,3.085,916,1.786,937,1.953,938,4.858,940,2.833,941,3.137,943,1.953,944,4.575,947,2.162,964,2.162,979,1.953,981,3.543,983,4.301,1018,4.575,1019,2.442,1026,4.301,1065,4.16,1066,2.867,1067,4.16,1068,4.16,1069,2.867,1070,2.867,1071,2.867,1072,5.372,1073,4.896,1074,2.867,1075,4.16,1076,2.867,1077,2.867,1078,4.16,1079,2.867,1080,2.867,1081,2.867,1082,5.704,1083,2.867,1084,4.16,1085,4.16,1086,4.16,1087,4.16,1088,2.867,1089,4.16,1090,4.16,1091,2.867,1092,2.867,1093,2.442,1094,4.896,1095,4.16,1096,6.287,1097,2.867,1098,5.067,1099,2.867,1100,5.949,1101,2.867,1102,2.867,1103,2.867,1104,4.896,1105,2.867,1106,5.372,1107,2.867,1108,4.16,1109,2.867,1110,2.867,1111,2.867,1112,2.867,1113,2.867,1114,2.867,1115,2.867,1116,2.867,1117,2.867,1118,2.867,1119,2.867,1120,2.867,1121,2.867,1122,2.867,1123,5.372,1124,2.867,1125,2.867,1126,2.867,1127,2.867,1128,2.867,1129,2.867,1130,4.16,1131,2.867,1132,4.16,1133,2.867,1134,5.372,1135,2.867,1136,2.867,1137,2.867,1138,2.867,1139,2.867,1140,2.867,1141,2.867,1142,2.867,1143,2.867,1144,4.16,1145,4.16,1146,4.16,1147,2.867,1148,2.867,1149,2.867,1150,2.867,1151,2.867,1152,2.867,1153,2.867,1154,2.867,1155,2.867,1156,4.16,1157,3.543,1158,5.704,1159,4.896,1160,2.867,1161,2.867,1162,2.867,1163,4.16,1164,5.372,1165,2.867,1166,2.867,1167,2.867,1168,2.867,1169,2.867,1170,2.867,1171,2.867,1172,5.372,1173,4.896,1174,4.16]],["title/modules.html",[150,1.304]],["body/modules.html",[13,0.019,122,0.019,123,0.019,150,1.444,151,3.064,667,5.17,893,3.322,916,3.322,926,3.633,937,3.633,943,3.633,979,3.633,1093,5.84,1098,5.661,1175,6.857,1176,7.149,1177,6.646]],["title/overview.html",[1178,4.105]],["body/overview.html",[0,0.573,13,0.023,15,0.124,21,0.174,52,0.149,53,1.302,122,0.015,123,0.015,124,0.573,125,1.383,134,1.383,135,1.383,137,1.383,150,1.282,151,4.117,152,1.71,153,0.879,154,1.978,155,2.145,156,1.71,157,2.933,158,2.933,159,2.933,160,1.855,161,2.949,162,1.835,163,2.145,200,1.558,247,1.652,287,1.652,289,1.751,290,1.652,293,1.558,295,1.751,298,1.652,300,1.652,302,1.652,304,1.652,306,1.652,309,1.652,351,1.835,352,3.108,432,1.835,893,4.512,894,2.933,895,2.933,896,2.933,916,4.164,917,2.933,918,2.933,919,2.933,926,4.801,927,2.933,928,2.933,929,2.933,930,2.933,1026,2.597,1178,2.933,1179,3.444,1180,3.444,1181,2.933,1182,3.444]],["title/miscellaneous/typealiases.html",[1049,1.465,1183,4.249]],["body/miscellaneous/typealiases.html",[9,0.741,12,0.795,13,0.022,122,0.02,123,0.02,1004,4.13,1049,2.719,1184,5.477,1185,6.719,1186,5.416,1187,6.719,1188,5.477,1189,4.665,1190,5.477,1191,4.665,1192,5.477]],["title/miscellaneous/variables.html",[992,3.204,1049,1.465]],["body/miscellaneous/variables.html",[9,0.552,10,1.775,12,0.963,13,0.023,24,1.254,31,0.944,47,0.917,75,1.894,116,1.335,121,2.565,122,0.016,123,0.016,156,2.026,171,2.308,172,1.775,173,1.067,174,2.168,180,3.385,182,3.686,210,0.821,264,2.29,304,1.042,353,2.779,354,2.542,355,3.715,356,4.406,364,2.779,372,3.077,408,4.014,409,4.014,410,4.014,411,3.077,412,4.014,413,3.077,414,3.077,432,2.174,478,3.077,768,3.077,769,4.706,770,4.444,795,4.444,802,3.476,803,3.476,807,3.476,808,3.476,992,3.077,1004,3.077,1049,2.026,1051,3.476,1052,5.75,1056,3.476,1057,3.476,1157,3.476,1181,3.476,1186,3.476,1189,3.476,1191,3.476,1193,4.081,1194,5.305,1195,4.081,1196,4.081,1197,4.081,1198,5.305,1199,4.081,1200,4.081,1201,4.081,1202,4.081,1203,4.081,1204,4.081]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":121,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["0.1",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1.0",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["0.3.0",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1008,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1012,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["0/45",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1011,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":432,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCTabPanelComponent.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["1.2.13",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["1/19",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["136",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":1180,"title":{},"body":{"overview.html":{}}}],["150",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1026,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["2.0.0",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["233",{"_index":1170,"title":{},"body":{"index.html":{}}}],["3",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["3.4.4",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["3.5.0",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1181,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1006,"title":{},"body":{"coverage.html":{}}}],["5.7.0",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1179,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1182,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":811,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["_actiondisplay",{"_index":221,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["_buttonclass",{"_index":480,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_buttonclass:str",{"_index":556,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_check",{"_index":743,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["_checked:boolean=fals",{"_index":760,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["_class",{"_index":256,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{}}}],["_class:str",{"_index":274,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{}}}],["_column",{"_index":481,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_column:numb",{"_index":554,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_columnindex",{"_index":482,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_columnindex:numb",{"_index":553,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_counterclass",{"_index":318,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["_counterclass:str",{"_index":340,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["_dataitem",{"_index":483,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_dataitem:ani",{"_index":551,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_disabl",{"_index":222,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["_id",{"_index":744,"title":{},"body":{"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{}}}],["_id:str",{"_index":761,"title":{},"body":{"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{}}}],["_mainclass",{"_index":484,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_mainclass:str",{"_index":555,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_model",{"_index":56,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["_originalmodel",{"_index":57,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["_question",{"_index":485,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_question:str",{"_index":558,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_rowid",{"_index":486,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_rowindex",{"_index":487,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_rowindex:numb",{"_index":552,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["_titl",{"_index":257,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["_title:str",{"_index":273,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["_valu",{"_index":319,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCSwitchControl.html":{}}}],["_value:ani",{"_index":339,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["_value:str",{"_index":557,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["accessor",{"_index":266,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{}}}],["actiondisplay",{"_index":191,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["actionstatuschang",{"_index":219,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["actionstatuschange:eventemitt",{"_index":637,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["actual_compon",{"_index":314,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["add",{"_index":1106,"title":{},"body":{"index.html":{}}}],["additem",{"_index":1151,"title":{},"body":{"index.html":{}}}],["aftercontentinit",{"_index":16,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchControl.html":{},"components/WCTabPanelComponent.html":{}}}],["alert(\"pippo",{"_index":594,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["alias",{"_index":1184,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alignmod",{"_index":207,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["allow",{"_index":1095,"title":{},"body":{"index.html":{}}}],["angular",{"_index":940,"title":{},"body":{"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/common",{"_index":168,"title":{},"body":{"modules/NgxGaugeModule.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"dependencies.html":{}}}],["angular/compiler/src/output/output_ast",{"_index":806,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["angular/cor",{"_index":20,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":804,"title":{},"body":{"components/WCSwitchControl.html":{},"modules/WCUIKitCoreModule.html":{}}}],["angular/platform",{"_index":949,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["angular4",{"_index":1160,"title":{},"body":{"index.html":{}}}],["appcomponent.itemchang",{"_index":1140,"title":{},"body":{"index.html":{}}}],["appcomponent.itemres",{"_index":1142,"title":{},"body":{"index.html":{}}}],["appear",{"_index":1112,"title":{},"body":{"index.html":{}}}],["append",{"_index":131,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{}}}],["append'},{'nam",{"_index":311,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["arch",{"_index":1191,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["arrang",{"_index":1121,"title":{},"body":{"index.html":{}}}],["array",{"_index":632,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"index.html":{}}}],["ask",{"_index":187,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"miscellaneous/enumerations.html":{}}}],["assets/img/icons.svg#ico",{"_index":834,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["assignvalu",{"_index":362,"title":{},"body":{"injectables/WCEditService.html":{}}}],["assignvalues(target",{"_index":374,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["attr.id",{"_index":841,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["automat",{"_index":1122,"title":{},"body":{"index.html":{}}}],["avail",{"_index":1098,"title":{},"body":{"index.html":{},"modules.html":{}}}],["background_color",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":400,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["bodymodul",{"_index":952,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"miscellaneous/enumerations.html":{}}}],["boolean(this.deleteditems.length",{"_index":442,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["bootstrap",{"_index":155,"title":{},"body":{"modules/NgxGaugeModule.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"overview.html":{}}}],["brows",{"_index":1176,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1175,"title":{},"body":{"modules.html":{}}}],["browser/anim",{"_index":950,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["browseranimationsmodul",{"_index":948,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["btn",{"_index":479,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["butt",{"_index":1189,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":741,"title":{},"body":{"components/WCSwitchButton.html":{},"modules/WCUIKitKendoProviderModule.html":{},"dependencies.html":{},"index.html":{}}}],["button'},{'nam",{"_index":303,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["button.compon",{"_index":907,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["button.component.html",{"_index":742,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.t",{"_index":740,"title":{},"body":{"components/WCSwitchButton.html":{},"coverage.html":{}}}],["button.component.ts:10",{"_index":751,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:11",{"_index":752,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:12",{"_index":746,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:16",{"_index":750,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:19",{"_index":753,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:23",{"_index":749,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:27",{"_index":755,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:31",{"_index":748,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:35",{"_index":758,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["button.component.ts:39",{"_index":747,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["buttonclass",{"_index":492,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["buttonclass():str",{"_index":581,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["buttonclass(value:str",{"_index":583,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["buttongroupmodul",{"_index":965,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["buttonmodul",{"_index":966,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["buttonsmodul",{"_index":967,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["buttonwcuikitcoremodul",{"_index":1114,"title":{},"body":{"index.html":{}}}],["calendarmodul",{"_index":968,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["calendarsmodul",{"_index":975,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["call",{"_index":818,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["callback",{"_index":809,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["cancel",{"_index":186,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"miscellaneous/enumerations.html":{}}}],["cancelchang",{"_index":363,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["cap",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categori",{"_index":1071,"title":{},"body":{"index.html":{}}}],["cell",{"_index":1090,"title":{},"body":{"index.html":{}}}],["center",{"_index":208,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["chang",{"_index":107,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchControl.html":{}}}],["changedopt",{"_index":1147,"title":{},"body":{"index.html":{}}}],["chart",{"_index":983,"title":{},"body":{"modules/WCUIKitNgxChartsProviderModule.html":{},"dependencies.html":{},"index.html":{}}}],["charts.module.t",{"_index":980,"title":{},"body":{"modules/WCUIKitNgxChartsProviderModule.html":{}}}],["check",{"_index":745,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["checked():boolean",{"_index":765,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["checked(value:boolean",{"_index":767,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["checktyp",{"_index":58,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["clamp",{"_index":998,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["clamp(valu",{"_index":1054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["class",{"_index":52,"title":{"classes/NgxGaugeError.html":{}},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"coverage.html":{},"overview.html":{}}}],["class():ani",{"_index":278,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCPanelComponent.html":{}}}],["class():str",{"_index":343,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["class(value:ani",{"_index":280,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCPanelComponent.html":{}}}],["class(value:str",{"_index":344,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["clear",{"_index":861,"title":{},"body":{"injectables/WCToasterService.html":{},"index.html":{}}}],["clear():void",{"_index":891,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["click",{"_index":184,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["clonedata",{"_index":412,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clonedata(data",{"_index":423,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["clonedata(this.originaldata",{"_index":456,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["close",{"_index":715,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["cluster_ngxgaugemodul",{"_index":157,"title":{},"body":{"modules/NgxGaugeModule.html":{},"overview.html":{}}}],["cluster_ngxgaugemodule_declar",{"_index":158,"title":{},"body":{"modules/NgxGaugeModule.html":{},"overview.html":{}}}],["cluster_ngxgaugemodule_export",{"_index":159,"title":{},"body":{"modules/NgxGaugeModule.html":{},"overview.html":{}}}],["cluster_wcuikitcoremodul",{"_index":894,"title":{},"body":{"modules/WCUIKitCoreModule.html":{},"overview.html":{}}}],["cluster_wcuikitcoremodule_declar",{"_index":895,"title":{},"body":{"modules/WCUIKitCoreModule.html":{},"overview.html":{}}}],["cluster_wcuikitcoremodule_export",{"_index":896,"title":{},"body":{"modules/WCUIKitCoreModule.html":{},"overview.html":{}}}],["cluster_wcuikitdatamodul",{"_index":917,"title":{},"body":{"modules/WCUIKitDataModule.html":{},"overview.html":{}}}],["cluster_wcuikitdatamodule_declar",{"_index":918,"title":{},"body":{"modules/WCUIKitDataModule.html":{},"overview.html":{}}}],["cluster_wcuikitdatamodule_export",{"_index":919,"title":{},"body":{"modules/WCUIKitDataModule.html":{},"overview.html":{}}}],["cluster_wcuikitgridmodul",{"_index":927,"title":{},"body":{"modules/WCUIKitGridModule.html":{},"overview.html":{}}}],["cluster_wcuikitgridmodule_declar",{"_index":928,"title":{},"body":{"modules/WCUIKitGridModule.html":{},"overview.html":{}}}],["cluster_wcuikitgridmodule_export",{"_index":929,"title":{},"body":{"modules/WCUIKitGridModule.html":{},"overview.html":{}}}],["cluster_wcuikitgridmodule_provid",{"_index":930,"title":{},"body":{"modules/WCUIKitGridModule.html":{},"overview.html":{}}}],["code",{"_index":1103,"title":{},"body":{"index.html":{}}}],["coercebooleanproperti",{"_index":999,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["coercebooleanproperty(valu",{"_index":1058,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coercenumberproperti",{"_index":1000,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["coercenumberproperty(valu",{"_index":1059,"title":{},"body":{"miscellaneous/functions.html":{}}}],["col",{"_index":1144,"title":{},"body":{"index.html":{}}}],["column",{"_index":196,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"index.html":{}}}],["column():numb",{"_index":574,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["column(value:numb",{"_index":576,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["column:numb",{"_index":214,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["columnindex",{"_index":195,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["columnindex():numb",{"_index":571,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["columnindex(value:numb",{"_index":573,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["columnindex:numb",{"_index":213,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["command",{"_index":173,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["command'},{'nam",{"_index":292,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["command/grid",{"_index":172,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["commandcancel",{"_index":218,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["commandcancel:eventemitt",{"_index":636,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["commandclick",{"_index":216,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["commandclick:eventemitt",{"_index":634,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["commandconfirm",{"_index":217,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["commandconfirm:eventemitt",{"_index":635,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["commandicon",{"_index":205,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["commandid",{"_index":206,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["commonmodul",{"_index":167,"title":{},"body":{"modules/NgxGaugeModule.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{}}}],["compat",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":446,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"index.html":{}}}],["completed.push(this.fetch(create_act",{"_index":452,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["completed.push(this.fetch(remove_act",{"_index":449,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["completed.push(this.fetch(update_act",{"_index":451,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["complex",{"_index":1120,"title":{},"body":{"index.html":{}}}],["compon",{"_index":15,"title":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["componen",{"_index":1104,"title":{},"body":{"index.html":{}}}],["component.html",{"_index":199,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCSlidePanelComponent.html":{}}}],["component.scss",{"_index":198,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCSlidePanelComponent.html":{}}}],["component.t",{"_index":174,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCSlidePanelComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["component.ts:102",{"_index":618,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:11",{"_index":664,"title":{},"body":{"components/WCLoadingOverlayComponent.html":{},"components/WCSlidePanelComponent.html":{}}}],["component.ts:116",{"_index":615,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:13",{"_index":663,"title":{},"body":{"components/WCLoadingOverlayComponent.html":{},"components/WCSlidePanelComponent.html":{}}}],["component.ts:130",{"_index":606,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:134",{"_index":622,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:138",{"_index":624,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:14",{"_index":719,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["component.ts:19",{"_index":720,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["component.ts:22",{"_index":729,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["component.ts:24",{"_index":651,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:26",{"_index":653,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCSlidePanelComponent.html":{}}}],["component.ts:27",{"_index":178,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:28",{"_index":650,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:29",{"_index":649,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:30",{"_index":654,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:32",{"_index":652,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:33",{"_index":648,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:34",{"_index":722,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["component.ts:35",{"_index":656,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:36",{"_index":657,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:37",{"_index":655,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:38",{"_index":609,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:39",{"_index":607,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:40",{"_index":603,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:41",{"_index":604,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:42",{"_index":601,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:43",{"_index":602,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:44",{"_index":598,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:46",{"_index":605,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:47",{"_index":608,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:48",{"_index":600,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:49",{"_index":599,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:50",{"_index":610,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:53",{"_index":613,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:54",{"_index":614,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["component.ts:55",{"_index":612,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:56",{"_index":611,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:59",{"_index":620,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:60",{"_index":619,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:61",{"_index":597,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:67",{"_index":616,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component.ts:86",{"_index":617,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["component_templ",{"_index":284,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["components/commons/dashboardheader/wcdashboardheadercompon",{"_index":904,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["components/commons/switchbutton/wc",{"_index":906,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["components/commons/switchcontrol/wc",{"_index":908,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["components/containers/panel/wcpanelcompon",{"_index":903,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["components/containers/slid",{"_index":902,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["components/containers/tabs/wc",{"_index":909,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["components/data/counter/wcdatacountercompon",{"_index":921,"title":{},"body":{"modules/WCUIKitDataModule.html":{}}}],["components/data/gauge/wc",{"_index":922,"title":{},"body":{"modules/WCUIKitDataModule.html":{}}}],["components/data/nxgauge/ngx",{"_index":924,"title":{},"body":{"modules/WCUIKitDataModule.html":{}}}],["components/editors/properti",{"_index":911,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["configur",{"_index":357,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["configuration:wceditserviceconfigur",{"_index":418,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["confirm",{"_index":185,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["confirmationtitl",{"_index":203,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["confirmationtitleprovid",{"_index":204,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["confirmationtitleprovider?:wcconfirmationtitleprovid",{"_index":630,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["consol",{"_index":898,"title":{},"body":{"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"dependencies.html":{},"index.html":{}}}],["console.info('itemchang",{"_index":1135,"title":{},"body":{"index.html":{}}}],["console.info('itemres",{"_index":1137,"title":{},"body":{"index.html":{}}}],["console.log",{"_index":437,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGridButtonEditorComponent.html":{}}}],["console.log(\"tab",{"_index":854,"title":{},"body":{"components/WCTabPanelComponent.html":{}}}],["console.log(\"wcswitchcontrol",{"_index":812,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["console.log('wcpropertyeditorcompon",{"_index":64,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["const",{"_index":68,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchControl.html":{}}}],["constructor",{"_index":62,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"classes/NgxGaugeError.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{}}}],["constructor(el",{"_index":832,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["constructor(elt",{"_index":497,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["constructor(messag",{"_index":142,"title":{},"body":{"classes/NgxGaugeError.html":{}}}],["constructor(priv",{"_index":561,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCTabItemComponent.html":{},"injectables/WCToasterService.html":{}}}],["constructor(renderer2",{"_index":717,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["constructor(toastr",{"_index":863,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["contain",{"_index":1072,"title":{},"body":{"index.html":{}}}],["content",{"_index":1158,"title":{},"body":{"index.html":{}}}],["contentchildren",{"_index":851,"title":{},"body":{"components/WCTabPanelComponent.html":{}}}],["contentchildren(wctabitemcompon",{"_index":853,"title":{},"body":{"components/WCTabPanelComponent.html":{}}}],["contentstyl",{"_index":633,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["control",{"_index":771,"title":{},"body":{"components/WCSwitchControl.html":{},"modules/WCUIKitCoreModule.html":{},"index.html":{}}}],["control'},{'nam",{"_index":305,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["control.html",{"_index":773,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.scss",{"_index":772,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.t",{"_index":769,"title":{},"body":{"components/WCSwitchControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["control.ts:26",{"_index":793,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:27",{"_index":780,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:28",{"_index":781,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:30",{"_index":792,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:34",{"_index":796,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:35",{"_index":779,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:41",{"_index":782,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:45",{"_index":783,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:49",{"_index":784,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:54",{"_index":797,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:59",{"_index":799,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:66",{"_index":801,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:71",{"_index":791,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:78",{"_index":786,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["control.ts:83",{"_index":789,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["controluid",{"_index":220,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["controlvalueaccessor",{"_index":822,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["core",{"_index":1019,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["core.module.t",{"_index":901,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["counter",{"_index":316,"title":{},"body":{"components/WCDataCounterComponent.html":{},"index.html":{}}}],["counter'},{'nam",{"_index":288,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["counter.component.html",{"_index":317,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["counterclass",{"_index":320,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["counterclass():str",{"_index":348,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["counterclass(value:str",{"_index":350,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["coverag",{"_index":985,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":364,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["create(item",{"_index":378,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["create_act",{"_index":408,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createditem",{"_index":358,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["cssunit",{"_index":1001,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cssunit(valu",{"_index":1061,"title":{},"body":{"miscellaneous/functions.html":{}}}],["currentvalu",{"_index":71,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["customiz",{"_index":1091,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":253,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"index.html":{}}}],["dashboardwcuikitgridsterprovidermodul",{"_index":1117,"title":{},"body":{"index.html":{}}}],["data",{"_index":210,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.map(item",{"_index":413,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"miscellaneous/variables.html":{}}}],["data.module.t",{"_index":920,"title":{},"body":{"modules/WCUIKitDataModule.html":{}}}],["dataid",{"_index":831,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["dataid:str",{"_index":845,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["dataitem",{"_index":192,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["dataitem():ani",{"_index":565,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["dataitem(value:ani",{"_index":567,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["dataitem:ani",{"_index":211,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["dateinput",{"_index":976,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{},"dependencies.html":{}}}],["dateinputmodul",{"_index":973,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["dateinputsmodul",{"_index":974,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["datepickermodul",{"_index":969,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["daterangemodul",{"_index":970,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["declar",{"_index":154,"title":{},"body":{"modules/NgxGaugeModule.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"overview.html":{}}}],["decor",{"_index":725,"title":{},"body":{"components/WCSlidePanelComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["default",{"_index":264,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":143,"title":{},"body":{"classes/NgxGaugeError.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{}}}],["deleteditem",{"_index":359,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["depend",{"_index":152,"title":{"dependencies.html":{}},"body":{"modules/NgxGaugeModule.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descirpt",{"_index":1081,"title":{},"body":{"index.html":{}}}],["descript",{"_index":29,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"injectables/WCToasterService.html":{}}}],["destroy",{"_index":411,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":124,"title":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{}},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives.t",{"_index":127,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"coverage.html":{}}}],["dirtyfield",{"_index":459,"title":{},"body":{"interfaces/WCEditServiceConfiguration.html":{}}}],["dirtyfield:str",{"_index":416,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["disabl",{"_index":32,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["disabled(dis",{"_index":245,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["disappear",{"_index":1113,"title":{},"body":{"index.html":{}}}],["display",{"_index":1086,"title":{},"body":{"index.html":{}}}],["divid",{"_index":1069,"title":{},"body":{"index.html":{}}}],["document",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":249,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["down",{"_index":724,"title":{},"body":{"components/WCSlidePanelComponent.html":{},"index.html":{}}}],["drag",{"_index":1123,"title":{},"body":{"index.html":{}}}],["drag/res",{"_index":1166,"title":{},"body":{"index.html":{}}}],["draw",{"_index":978,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{},"dependencies.html":{}}}],["drop",{"_index":1085,"title":{},"body":{"index.html":{}}}],["dropdown",{"_index":959,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{},"dependencies.html":{}}}],["dropdownsmodul",{"_index":958,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["dynam",{"_index":1159,"title":{},"body":{"index.html":{}}}],["easili",{"_index":1119,"title":{},"body":{"index.html":{}}}],["edit",{"_index":355,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["editor",{"_index":47,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["editor'},{'nam",{"_index":291,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["editor.compon",{"_index":912,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["editor.component.html",{"_index":49,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["editor.component.scss",{"_index":51,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["editor.component.t",{"_index":8,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["editor.component.ts:102",{"_index":696,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:111",{"_index":693,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:119",{"_index":698,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:126",{"_index":700,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:135",{"_index":695,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:143",{"_index":697,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":703,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:50",{"_index":704,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:51",{"_index":705,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:53",{"_index":691,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:54",{"_index":689,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:58",{"_index":699,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:62",{"_index":701,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:65",{"_index":702,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:85",{"_index":690,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:89",{"_index":707,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:94",{"_index":694,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor.component.ts:98",{"_index":692,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["editor/wc",{"_index":6,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["editor/wcgridbuttoneditorcompon",{"_index":933,"title":{},"body":{"modules/WCUIKitGridModule.html":{}}}],["editor/wcgridbuttoneditorcomponent.t",{"_index":478,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:102",{"_index":508,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:106",{"_index":514,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:111",{"_index":513,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:116",{"_index":515,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:13",{"_index":519,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:14",{"_index":524,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:15",{"_index":518,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:16",{"_index":517,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:17",{"_index":520,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:18",{"_index":516,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:19",{"_index":525,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:20",{"_index":522,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:21",{"_index":523,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:24",{"_index":510,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:26",{"_index":499,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:32",{"_index":512,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:35",{"_index":511,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:38",{"_index":527,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:42",{"_index":504,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:46",{"_index":530,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:50",{"_index":507,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:54",{"_index":533,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:58",{"_index":503,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:62",{"_index":536,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:66",{"_index":502,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:70",{"_index":540,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:74",{"_index":542,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:78",{"_index":505,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:82",{"_index":545,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:86",{"_index":501,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:90",{"_index":548,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:94",{"_index":506,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["editor/wcgridbuttoneditorcomponent.ts:98",{"_index":550,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["element",{"_index":282,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"index.html":{}}}],["elementref",{"_index":39,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCTabItemComponent.html":{}}}],["elt",{"_index":500,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["elt:elementref",{"_index":562,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["enabl",{"_index":246,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["enable/dis",{"_index":115,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["entrycompon",{"_index":915,"title":{},"body":{"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitGridModule.html":{}}}],["enum",{"_index":22,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["enumer",{"_index":1050,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":141,"title":{},"body":{"classes/NgxGaugeError.html":{},"injectables/WCToasterService.html":{}}}],["error(messag",{"_index":868,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["error(message:str",{"_index":887,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["error.t",{"_index":139,"title":{},"body":{"classes/NgxGaugeError.html":{},"coverage.html":{}}}],["error.ts:1",{"_index":144,"title":{},"body":{"classes/NgxGaugeError.html":{}}}],["etc",{"_index":1073,"title":{},"body":{"index.html":{}}}],["event",{"_index":509,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchControl.html":{}}}],["event.srcelement.getattribute('itemid",{"_index":69,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["event.srcelement.getattribute('minibuttonitemid",{"_index":111,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["event.target.check",{"_index":229,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["eventemitt",{"_index":19,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchControl.html":{}}}],["eventemitter,output",{"_index":730,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["excel",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["excelmodul",{"_index":953,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["export",{"_index":21,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"dependencies.html":{},"overview.html":{}}}],["exporta",{"_index":132,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{}}}],["extend",{"_index":140,"title":{},"body":{"classes/NgxGaugeError.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["facirclenotch",{"_index":661,"title":{},"body":{"components/WCLoadingOverlayComponent.html":{}}}],["fallbackvalu",{"_index":1060,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fals",{"_index":74,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{}}}],["field",{"_index":30,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"coverage.html":{}}}],["filtermenumodul",{"_index":954,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["find",{"_index":1066,"title":{},"body":{"index.html":{}}}],["fn",{"_index":787,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["follow",{"_index":1070,"title":{},"body":{"index.html":{}}}],["fontawesom",{"_index":936,"title":{},"body":{"modules/WCUIKitGridModule.html":{},"dependencies.html":{}}}],["fontawesomemodul",{"_index":934,"title":{},"body":{"modules/WCUIKitGridModule.html":{}}}],["footermodul",{"_index":955,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["foreground_color",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formsmodul",{"_index":913,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["fortawesome/angular",{"_index":935,"title":{},"body":{"modules/WCUIKitGridModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesom",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/fre",{"_index":665,"title":{},"body":{"components/WCLoadingOverlayComponent.html":{},"dependencies.html":{}}}],["forwardref",{"_index":802,"title":{},"body":{"components/WCSwitchControl.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":1190,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["function",{"_index":794,"title":{"miscellaneous/functions.html":{}},"body":{"components/WCSwitchControl.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gaug",{"_index":130,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"index.html":{}}}],["gauge'},{'nam",{"_index":285,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["gauge.compon",{"_index":923,"title":{},"body":{"modules/WCUIKitDataModule.html":{}}}],["gauge.component.html",{"_index":464,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.t",{"_index":463,"title":{},"body":{"components/WCGaugeComponent.html":{},"coverage.html":{}}}],["gauge.component.ts:10",{"_index":473,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:11",{"_index":472,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:12",{"_index":471,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:13",{"_index":465,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:17",{"_index":470,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:20",{"_index":474,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:24",{"_index":468,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:28",{"_index":475,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:32",{"_index":466,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:36",{"_index":476,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:40",{"_index":469,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:44",{"_index":477,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.component.ts:48",{"_index":467,"title":{},"body":{"components/WCGaugeComponent.html":{}}}],["gauge.modul",{"_index":925,"title":{},"body":{"modules/WCUIKitDataModule.html":{}}}],["gauge.module.t",{"_index":165,"title":{},"body":{"modules/NgxGaugeModule.html":{}}}],["gauge/gaug",{"_index":169,"title":{},"body":{"modules/NgxGaugeModule.html":{}}}],["get",{"_index":1063,"title":{"index.html":{}},"body":{}}],["getbuttonclass",{"_index":544,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["getcheck",{"_index":757,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["getclass",{"_index":269,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{}}}],["getcolumn",{"_index":535,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["getcolumnindex",{"_index":532,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["getcounterclass",{"_index":336,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["getcurrentvaluefor",{"_index":679,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["getcurrentvaluefor(propertynam",{"_index":97,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["getdataitem",{"_index":526,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["geten",{"_index":623,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["getid",{"_index":754,"title":{},"body":{"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{}}}],["getisopen",{"_index":728,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["getmainclass",{"_index":541,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["getmodelitemfor",{"_index":680,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["getmodelitemfor(propertynam",{"_index":102,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["getnativeel",{"_index":830,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["getoriginalvaluefor",{"_index":681,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["getoriginalvaluefor(propertynam",{"_index":94,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["getpropertyitem",{"_index":682,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["getpropertyitem(propertynam",{"_index":114,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["getquest",{"_index":547,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["getrowid",{"_index":539,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["getrowindex",{"_index":529,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["gettitl",{"_index":176,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["gettitle(rowdata",{"_index":177,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["getvalu",{"_index":333,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCSwitchControl.html":{}}}],["getvaluefor",{"_index":683,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["getvaluefor(propertynam",{"_index":98,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["graph",{"_index":1177,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":197,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"dependencies.html":{},"index.html":{}}}],["grideditorcommandcomponentev",{"_index":629,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["gridmodul",{"_index":951,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["gridster",{"_index":938,"title":{},"body":{"modules/WCUIKitGridsterProviderModule.html":{},"index.html":{}}}],["gridster2",{"_index":941,"title":{},"body":{"modules/WCUIKitGridsterProviderModule.html":{},"dependencies.html":{},"index.html":{}}}],["gridsterconfig",{"_index":1130,"title":{},"body":{"index.html":{}}}],["gridsteritem",{"_index":1131,"title":{},"body":{"index.html":{}}}],["gridstermodul",{"_index":942,"title":{},"body":{"modules/WCUIKitGridsterProviderModule.html":{}}}],["group",{"_index":628,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{}}}],["group'},{'nam",{"_index":294,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["group/grid",{"_index":627,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{}}}],["groupmodul",{"_index":956,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["guid",{"_index":1128,"title":{},"body":{"index.html":{}}}],["handl",{"_index":78,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["handlelinkeditem",{"_index":684,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["handlelinkeditems(item",{"_index":118,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["haschang",{"_index":365,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["hasconfirm",{"_index":202,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["have",{"_index":1162,"title":{},"body":{"index.html":{}}}],["header",{"_index":254,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"index.html":{}}}],["header'},{'nam",{"_index":286,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["header.component.html",{"_index":255,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["headermodul",{"_index":957,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["help",{"_index":1068,"title":{},"body":{"index.html":{}}}],["here",{"_index":1080,"title":{},"body":{"index.html":{}}}],["host",{"_index":827,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["html",{"_index":281,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["htmlinputtyp",{"_index":33,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["https://github.com/scttcper/ngx",{"_index":871,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["https://github.com/swimlane/ngx",{"_index":1076,"title":{},"body":{"index.html":{}}}],["https://github.com/tiberiuzuld/angular",{"_index":1084,"title":{},"body":{"index.html":{}}}],["https://scttcper.github.io/ngx",{"_index":879,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["https://www.telerik.com/kendo",{"_index":1079,"title":{},"body":{"index.html":{}}}],["icon",{"_index":668,"title":{},"body":{"components/WCLoadingOverlayComponent.html":{},"components/WCTabItemComponent.html":{},"dependencies.html":{}}}],["icon:string=\"assets/img/icons.svg#ico",{"_index":844,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["id",{"_index":189,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{}}}],["id():str",{"_index":762,"title":{},"body":{"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{}}}],["id(value:str",{"_index":764,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["identifi",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["idfield",{"_index":460,"title":{},"body":{"interfaces/WCEditServiceConfiguration.html":{}}}],["idfield:str",{"_index":415,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["idx",{"_index":458,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["if(this.confirmationtitleprovid",{"_index":225,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["ifram",{"_index":1163,"title":{},"body":{"index.html":{}}}],["implement",{"_index":54,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"index.html":{}}}],["import",{"_index":14,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"index.html":{}}}],["includ",{"_index":817,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{}}}],["info(messag",{"_index":873,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["info(message:str",{"_index":885,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["init",{"_index":366,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["initi",{"_index":1129,"title":{},"body":{"index.html":{}}}],["inject",{"_index":351,"title":{"injectables/WCEditService.html":{},"injectables/WCToasterService.html":{}},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"injectables/WCToasterService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":17,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"dependencies.html":{}}}],["insid",{"_index":1065,"title":{},"body":{"index.html":{}}}],["integr",{"_index":1124,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1171,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"interfaces/WCEditServiceConfiguration.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchControl.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["interfer",{"_index":1165,"title":{},"body":{"index.html":{}}}],["intl",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["invas",{"_index":1111,"title":{},"body":{"index.html":{}}}],["isnew",{"_index":367,"title":{},"body":{"injectables/WCEditService.html":{}}}],["isnew(item",{"_index":382,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["isnewfield",{"_index":461,"title":{},"body":{"interfaces/WCEditServiceConfiguration.html":{}}}],["isnewfield:str",{"_index":417,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["isnumb",{"_index":1002,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isnumber(valu",{"_index":1062,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isopen",{"_index":727,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["issu",{"_index":1169,"title":{},"body":{"index.html":{}}}],["it'",{"_index":80,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["item",{"_index":10,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCTabItemComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["item'},{'nam",{"_index":308,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["item.compon",{"_index":852,"title":{},"body":{"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{}}}],["item.component.html",{"_index":828,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["item.component.t",{"_index":826,"title":{},"body":{"components/WCTabItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:17",{"_index":840,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["item.component.ts:18",{"_index":837,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["item.component.ts:19",{"_index":836,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["item.component.ts:20",{"_index":833,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["item.component.ts:26",{"_index":839,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["item.component.ts:30",{"_index":838,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["item.linkto",{"_index":84,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["item.minicommandcapt",{"_index":709,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["item.nam",{"_index":708,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["item.typ",{"_index":82,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["item.valu",{"_index":100,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["item.valuechang",{"_index":109,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["item[this.configuration.dirtyfield",{"_index":426,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["item[this.configuration.isnewfield",{"_index":441,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["itemchange(item",{"_index":1133,"title":{},"body":{"index.html":{}}}],["itemchangecallback",{"_index":1139,"title":{},"body":{"index.html":{}}}],["itemcompon",{"_index":1134,"title":{},"body":{"index.html":{}}}],["itemindex",{"_index":368,"title":{},"body":{"injectables/WCEditService.html":{}}}],["itemindex(item",{"_index":384,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["itemresize(item",{"_index":1136,"title":{},"body":{"index.html":{}}}],["itemresizecallback",{"_index":1141,"title":{},"body":{"index.html":{}}}],["json",{"_index":1088,"title":{},"body":{"index.html":{}}}],["json.parse(json.stringify(model",{"_index":93,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["kendo",{"_index":944,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{},"index.html":{}}}],["kendoui",{"_index":1077,"title":{},"body":{"index.html":{}}}],["kendouidraw",{"_index":977,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["kit",{"_index":900,"title":{},"body":{"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"index.html":{}}}],["l10n",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["label",{"_index":136,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"index.html":{}}}],["label'},{'nam",{"_index":312,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["later",{"_index":810,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["latest",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["layout",{"_index":964,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{},"dependencies.html":{},"index.html":{}}}],["layoutmodul",{"_index":960,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["legend",{"_index":153,"title":{},"body":{"modules/NgxGaugeModule.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"overview.html":{}}}],["librari",{"_index":1094,"title":{},"body":{"index.html":{}}}],["line",{"_index":1074,"title":{},"body":{"index.html":{}}}],["link",{"_index":79,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["linkeditem",{"_index":120,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["linkto",{"_index":40,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["list",{"_index":26,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["listvalu",{"_index":35,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["liter",{"_index":625,"title":{},"body":{"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["load",{"_index":296,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitGridModule.html":{},"index.html":{}}}],["mainclass",{"_index":493,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["mainclass():str",{"_index":578,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["mainclass(value:str",{"_index":580,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["make",{"_index":1102,"title":{},"body":{"index.html":{}}}],["map",{"_index":406,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["markpropertychang",{"_index":685,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["markpropertychanged(propertynam",{"_index":106,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["match",{"_index":123,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1057,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["messag",{"_index":147,"title":{},"body":{"classes/NgxGaugeError.html":{},"injectables/WCToasterService.html":{}}}],["metadata",{"_index":128,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["method",{"_index":175,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{}}}],["metric",{"_index":1087,"title":{},"body":{"index.html":{}}}],["min",{"_index":1056,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["minibuttonclick",{"_index":61,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["minicommand",{"_index":36,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["minicommandcapt",{"_index":37,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["minitbuttonclickev",{"_index":1,"title":{"interfaces/MinitButtonClickEvent.html":{}},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"coverage.html":{}}}],["miscellan",{"_index":1049,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":88,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["model(model",{"_index":91,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["model.items.find(x",{"_index":103,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["modul",{"_index":150,"title":{"modules/NgxGaugeModule.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"modules.html":{}},"body":{"modules/NgxGaugeModule.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":808,"title":{},"body":{"components/WCSwitchControl.html":{},"miscellaneous/variables.html":{}}}],["multipl",{"_index":1092,"title":{},"body":{"index.html":{}}}],["multiviewcalendarmodul",{"_index":972,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["n.d",{"_index":521,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["name",{"_index":28,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"classes/NgxGaugeError.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nedd",{"_index":1115,"title":{},"body":{"index.html":{}}}],["need",{"_index":1100,"title":{},"body":{"index.html":{}}}],["new",{"_index":60,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchControl.html":{},"coverage.html":{}}}],["newvalu",{"_index":43,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["ng",{"_index":1161,"title":{},"body":{"index.html":{}}}],["ng_value_accessor",{"_index":803,"title":{},"body":{"components/WCSwitchControl.html":{},"miscellaneous/variables.html":{}}}],["ngaftercontentinit",{"_index":63,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchControl.html":{},"components/WCTabPanelComponent.html":{}}}],["ngafterviewinit",{"_index":488,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["ngmodul",{"_index":166,"title":{},"body":{"modules/NgxGaugeModule.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{}}}],["ngoninit",{"_index":258,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCTabItemComponent.html":{},"index.html":{}}}],["ngx",{"_index":129,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"dependencies.html":{}}}],["ngxchart",{"_index":981,"title":{},"body":{"modules/WCUIKitNgxChartsProviderModule.html":{},"index.html":{}}}],["ngxchartsmodul",{"_index":984,"title":{},"body":{"modules/WCUIKitNgxChartsProviderModule.html":{}}}],["ngxgaug",{"_index":160,"title":{},"body":{"modules/NgxGaugeModule.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxgaugeappend",{"_index":125,"title":{"directives/NgxGaugeAppend.html":{}},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxgaugecap",{"_index":1185,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngxgaugeerror",{"_index":138,"title":{"classes/NgxGaugeError.html":{}},"body":{"classes/NgxGaugeError.html":{},"coverage.html":{}}}],["ngxgaugelabel",{"_index":137,"title":{"directives/NgxGaugeLabel.html":{}},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxgaugemodul",{"_index":151,"title":{"modules/NgxGaugeModule.html":{}},"body":{"modules/NgxGaugeModule.html":{},"modules/WCUIKitDataModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngxgaugeprepend",{"_index":134,"title":{"directives/NgxGaugePrepend.html":{}},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxgaugetyp",{"_index":1187,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ngxgaugevalu",{"_index":135,"title":{"directives/NgxGaugeValue.html":{}},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["non",{"_index":1110,"title":{},"body":{"index.html":{}}}],["noop",{"_index":795,"title":{},"body":{"components/WCSwitchControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":1153,"title":{},"body":{"index.html":{}}}],["null",{"_index":101,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["number",{"_index":194,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["object",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign",{"_index":414,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"miscellaneous/variables.html":{}}}],["object.assign(target",{"_index":457,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["observ",{"_index":402,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["offici",{"_index":1127,"title":{},"body":{"index.html":{}}}],["on",{"_index":1101,"title":{},"body":{"index.html":{}}}],["on/off",{"_index":1083,"title":{},"body":{"index.html":{}}}],["onactionstatuschang",{"_index":645,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["onactionstatuschange(ev",{"_index":643,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["oncancel",{"_index":495,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{}}}],["oncancel(ev",{"_index":242,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["oncancel:eventemitt",{"_index":560,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["onchang",{"_index":819,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["onchangecallback",{"_index":774,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["oncheckchang",{"_index":595,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["oncheckchange(ev",{"_index":224,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["oncommandcancel",{"_index":646,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["oncommandcancel(ev",{"_index":641,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["oncommandclick",{"_index":596,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["oncommandclick(ev",{"_index":237,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["oncommandconfirm",{"_index":647,"title":{},"body":{"components/WCGridEditorCommandsGroupComponent.html":{}}}],["oncommandconfirm(ev",{"_index":639,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["onconfirm",{"_index":496,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{}}}],["onconfirm(ev",{"_index":240,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["onconfirmation:eventemitt",{"_index":559,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["oninit",{"_index":252,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCTabItemComponent.html":{}}}],["onkopress",{"_index":489,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["onkopressed():void",{"_index":591,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["onminibuttonclick",{"_index":686,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["onminibuttonclick(ev",{"_index":110,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["onmodelchang",{"_index":687,"title":{},"body":{"components/WCPropertyEditorComponent.html":{},"components/WCSwitchControl.html":{}}}],["onmodelchanged(ev",{"_index":66,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchControl.html":{}}}],["onmodelchanged(event:any):void",{"_index":813,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["onokpress",{"_index":490,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["onokpressed():void",{"_index":589,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["onpropertychang",{"_index":688,"title":{},"body":{"components/WCPropertyEditorComponent.html":{},"components/WCSwitchControl.html":{}}}],["onpropertychange(ev",{"_index":67,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchControl.html":{}}}],["onpropertychange(event:any):void",{"_index":815,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["onrendererclick",{"_index":491,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["onrendererclick():void",{"_index":593,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["ontouchedcallback",{"_index":775,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["open",{"_index":716,"title":{},"body":{"components/WCSlidePanelComponent.html":{},"index.html":{}}}],["open_with",{"_index":1174,"title":{},"body":{"index.html":{}}}],["option",{"_index":146,"title":{},"body":{"classes/NgxGaugeError.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"injectables/WCToasterService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options?:any):void",{"_index":883,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["originaldata",{"_index":360,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["originalvalu",{"_index":44,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["out",{"_index":163,"title":{},"body":{"modules/NgxGaugeModule.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"overview.html":{}}}],["output",{"_index":18,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchControl.html":{}}}],["overlay",{"_index":660,"title":{},"body":{"components/WCLoadingOverlayComponent.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{}}}],["overlay'},{'nam",{"_index":297,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["overlay/load",{"_index":659,"title":{},"body":{"components/WCLoadingOverlayComponent.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{}}}],["overview",{"_index":1178,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":1015,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1107,"title":{},"body":{"index.html":{}}}],["panel",{"_index":310,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"index.html":{}}}],["panel'},{'nam",{"_index":299,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["panel.compon",{"_index":910,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["panel.component.css",{"_index":670,"title":{},"body":{"components/WCPanelComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["panel.component.html",{"_index":671,"title":{},"body":{"components/WCPanelComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["panel.component.t",{"_index":847,"title":{},"body":{"components/WCTabPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:13",{"_index":848,"title":{},"body":{"components/WCTabPanelComponent.html":{}}}],["panel.component.ts:17",{"_index":849,"title":{},"body":{"components/WCTabPanelComponent.html":{}}}],["panel/slid",{"_index":711,"title":{},"body":{"components/WCSlidePanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{}}}],["panelbarmodul",{"_index":961,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["panelwcuikitcoremodul",{"_index":1108,"title":{},"body":{"index.html":{}}}],["param",{"_index":117,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"injectables/WCToasterService.html":{}}}],["paramet",{"_index":145,"title":{},"body":{"classes/NgxGaugeError.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"injectables/WCToasterService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":1156,"title":{},"body":{"index.html":{}}}],["peer",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["placehold",{"_index":38,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchControl.html":{}}}],["platform",{"_index":835,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["pleas",{"_index":1168,"title":{},"body":{"index.html":{}}}],["popup",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["prepend",{"_index":133,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{}}}],["prepend'},{'nam",{"_index":313,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["privat",{"_index":55,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{}}}],["progress/kendo",{"_index":946,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{},"dependencies.html":{}}}],["properti",{"_index":7,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["propertychang",{"_index":59,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchControl.html":{}}}],["propertychangeev",{"_index":42,"title":{"interfaces/PropertyChangeEvent.html":{}},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"coverage.html":{}}}],["propertynam",{"_index":105,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["provid",{"_index":156,"title":{},"body":{"modules/NgxGaugeModule.html":{},"components/WCSwitchControl.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":880,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["provider.module.t",{"_index":939,"title":{},"body":{"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{}}}],["public",{"_index":87,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCTabItemComponent.html":{},"injectables/WCToasterService.html":{}}}],["put",{"_index":1105,"title":{},"body":{"index.html":{}}}],["queri",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["querylist",{"_index":850,"title":{},"body":{"components/WCTabPanelComponent.html":{}}}],["question",{"_index":494,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["question():str",{"_index":584,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["question(question:str",{"_index":586,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["quickli",{"_index":1118,"title":{},"body":{"index.html":{}}}],["read",{"_index":369,"title":{},"body":{"injectables/WCEditService.html":{},"index.html":{}}}],["read(data",{"_index":386,"title":{},"body":{"injectables/WCEditService.html":{}}}],["read(data:ani",{"_index":419,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["recommend",{"_index":1125,"title":{},"body":{"index.html":{}}}],["refer",{"_index":1126,"title":{},"body":{"index.html":{}}}],["registeronchang",{"_index":776,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["registeronchange(fn",{"_index":785,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["registerontouch",{"_index":777,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["registerontouched(fn",{"_index":788,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["remov",{"_index":370,"title":{},"body":{"injectables/WCEditService.html":{}}}],["remove(item",{"_index":389,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["remove_act",{"_index":410,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["removeitem(item",{"_index":1149,"title":{},"body":{"index.html":{}}}],["render",{"_index":498,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["renderer2",{"_index":718,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["renderer:render",{"_index":563,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["reset",{"_index":162,"title":{},"body":{"modules/NgxGaugeModule.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"overview.html":{}}}],["result",{"_index":122,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":89,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{}}}],["rgba(0",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":881,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["round",{"_index":1188,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["row",{"_index":209,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"index.html":{}}}],["rowdata",{"_index":179,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["rowid",{"_index":538,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["rowid():str",{"_index":577,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["rowindex",{"_index":193,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["rowindex():numb",{"_index":568,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["rowindex(value:numb",{"_index":570,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["rowindex:numb",{"_index":212,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["rxj",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["rxjs/behaviorsubject",{"_index":401,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["rxjs/observ",{"_index":403,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["rxjs/observable/zip",{"_index":405,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["rxjs/operators/map",{"_index":407,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["savechang",{"_index":371,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["see",{"_index":870,"title":{},"body":{"injectables/WCToasterService.html":{},"index.html":{}}}],["select",{"_index":1173,"title":{},"body":{"index.html":{}}}],["selector",{"_index":45,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["semi",{"_index":1192,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["seri",{"_index":1067,"title":{},"body":{"index.html":{}}}],["servic",{"_index":932,"title":{},"body":{"modules/WCUIKitGridModule.html":{}}}],["service.t",{"_index":356,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["service.ts:120",{"_index":377,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:128",{"_index":375,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:132",{"_index":391,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:139",{"_index":381,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:145",{"_index":385,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:24",{"_index":396,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:25",{"_index":398,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:26",{"_index":395,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:27",{"_index":399,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:28",{"_index":397,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:29",{"_index":373,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:35",{"_index":388,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:44",{"_index":379,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:52",{"_index":394,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:68",{"_index":390,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:87",{"_index":383,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:91",{"_index":380,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service.ts:95",{"_index":392,"title":{},"body":{"injectables/WCEditService.html":{}}}],["service/wc",{"_index":354,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":90,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{}}}],["setbuttonclass(valu",{"_index":546,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["setchecked(valu",{"_index":759,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["setclass(valu",{"_index":271,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{}}}],["setcolumn(valu",{"_index":537,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["setcolumnindex(valu",{"_index":534,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["setcounterclass(valu",{"_index":338,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["setdataitem(valu",{"_index":528,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["setdisabled(dis",{"_index":621,"title":{},"body":{"components/WCGridEditorCommandComponent.html":{}}}],["setid(valu",{"_index":756,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["setmainclass(valu",{"_index":543,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["setmodel(model",{"_index":706,"title":{},"body":{"components/WCPropertyEditorComponent.html":{}}}],["setquestion(quest",{"_index":549,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["setrowindex(valu",{"_index":531,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["settitle(valu",{"_index":268,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["setvalue(v",{"_index":798,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["setvalue(valu",{"_index":335,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{}}}],["show",{"_index":713,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["show(show",{"_index":721,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["show/hid",{"_index":723,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["simpl",{"_index":1082,"title":{},"body":{"index.html":{}}}],["size",{"_index":1157,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["slide",{"_index":301,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"index.html":{}}}],["slidedowncontain",{"_index":712,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["solid",{"_index":666,"title":{},"body":{"components/WCLoadingOverlayComponent.html":{},"dependencies.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"modules/NgxGaugeModule.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"index.html":{}}}],["space",{"_index":1155,"title":{},"body":{"index.html":{}}}],["splittermodul",{"_index":962,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["src/.../gauge.t",{"_index":1186,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../grid",{"_index":1051,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../util.t",{"_index":1053,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../wc",{"_index":1052,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../wcgridbuttoneditorcomponent.t",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.t",{"_index":251,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"coverage.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:10",{"_index":265,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:11",{"_index":260,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:15",{"_index":263,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:18",{"_index":267,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:22",{"_index":262,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:26",{"_index":270,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/dashboardheader/wcdashboardheadercomponent.ts:30",{"_index":261,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{}}}],["src/lib/components/commons/switchbutton/wc",{"_index":739,"title":{},"body":{"components/WCSwitchButton.html":{},"coverage.html":{}}}],["src/lib/components/commons/switchcontrol/wc",{"_index":768,"title":{},"body":{"components/WCSwitchControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.t",{"_index":669,"title":{},"body":{"components/WCPanelComponent.html":{},"coverage.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:10",{"_index":676,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:11",{"_index":672,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:15",{"_index":675,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:18",{"_index":677,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:22",{"_index":674,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:26",{"_index":678,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/panel/wcpanelcomponent.ts:30",{"_index":673,"title":{},"body":{"components/WCPanelComponent.html":{}}}],["src/lib/components/containers/slid",{"_index":710,"title":{},"body":{"components/WCSlidePanelComponent.html":{},"coverage.html":{}}}],["src/lib/components/containers/tabs/wc",{"_index":825,"title":{},"body":{"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"coverage.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.t",{"_index":315,"title":{},"body":{"components/WCDataCounterComponent.html":{},"coverage.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:10",{"_index":330,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:11",{"_index":329,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:12",{"_index":327,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:13",{"_index":321,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:17",{"_index":326,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:20",{"_index":331,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:24",{"_index":324,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:28",{"_index":332,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:32",{"_index":322,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:36",{"_index":334,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:40",{"_index":325,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:44",{"_index":337,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/counter/wcdatacountercomponent.ts:48",{"_index":323,"title":{},"body":{"components/WCDataCounterComponent.html":{}}}],["src/lib/components/data/gauge/wc",{"_index":462,"title":{},"body":{"components/WCGaugeComponent.html":{},"coverage.html":{}}}],["src/lib/components/data/nxgauge/common/util.t",{"_index":997,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/lib/components/data/nxgauge/gauge/gaug",{"_index":126,"title":{},"body":{"directives/NgxGaugeAppend.html":{},"classes/NgxGaugeError.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"coverage.html":{}}}],["src/lib/components/data/nxgauge/gauge/gauge.t",{"_index":1004,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/components/data/nxgauge/ngx",{"_index":164,"title":{},"body":{"modules/NgxGaugeModule.html":{}}}],["src/lib/components/editors/properti",{"_index":5,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/components/grid/edit",{"_index":353,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lib/components/grid/grid",{"_index":171,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/lib/components/grid/load",{"_index":658,"title":{},"body":{"components/WCLoadingOverlayComponent.html":{},"coverage.html":{}}}],["src/lib/components/grid/wcuikitgridmodule.t",{"_index":931,"title":{},"body":{"modules/WCUIKitGridModule.html":{}}}],["src/lib/modules/web",{"_index":897,"title":{},"body":{"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{}}}],["src/lib/services/toaster/wctoasterservice.t",{"_index":860,"title":{},"body":{"injectables/WCToasterService.html":{},"coverage.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:21",{"_index":876,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:31",{"_index":874,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:41",{"_index":869,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:51",{"_index":878,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:61",{"_index":867,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["src/lib/services/toaster/wctoasterservice.ts:9",{"_index":865,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["start",{"_index":1064,"title":{"index.html":{}},"body":{}}],["statement",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1132,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"classes/NgxGaugeError.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"injectables/WCToasterService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["string):ani",{"_index":95,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["style",{"_index":272,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCSwitchButton.html":{},"components/WCTabItemComponent.html":{}}}],["styleurl",{"_index":50,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchControl.html":{},"components/WCTabPanelComponent.html":{}}}],["success",{"_index":862,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["success(messag",{"_index":875,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["success(message:str",{"_index":882,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["suit",{"_index":1078,"title":{},"body":{"index.html":{}}}],["super",{"_index":148,"title":{},"body":{"classes/NgxGaugeError.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["super.next(data",{"_index":424,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["super.next(this.data",{"_index":425,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["support",{"_index":1093,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":667,"title":{},"body":{"components/WCLoadingOverlayComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["swicth",{"_index":81,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["swimlan",{"_index":1075,"title":{},"body":{"index.html":{}}}],["swimlane/ngx",{"_index":982,"title":{},"body":{"modules/WCUIKitNgxChartsProviderModule.html":{},"dependencies.html":{}}}],["switch",{"_index":116,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":307,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"index.html":{}}}],["tab.titl",{"_index":858,"title":{},"body":{"components/WCTabPanelComponent.html":{}}}],["tabid",{"_index":829,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["tabid:str",{"_index":842,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["tabitem.tabid",{"_index":857,"title":{},"body":{"components/WCTabPanelComponent.html":{}}}],["tabl",{"_index":1014,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1013,"title":{},"body":{"coverage.html":{}}}],["tabstripmodul",{"_index":963,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["take",{"_index":1154,"title":{},"body":{"index.html":{}}}],["target",{"_index":376,"title":{},"body":{"injectables/WCEditService.html":{}}}],["templat",{"_index":248,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["templateurl",{"_index":48,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["text",{"_index":27,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["theme",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["thick",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this._actiondisplay",{"_index":228,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this._buttonclass",{"_index":582,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._check",{"_index":766,"title":{},"body":{"components/WCSwitchButton.html":{}}}],["this._class",{"_index":279,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{}}}],["this._column",{"_index":575,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._columnindex",{"_index":572,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._counterclass",{"_index":349,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["this._dataitem",{"_index":566,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._dis",{"_index":244,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this._id",{"_index":763,"title":{},"body":{"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{}}}],["this._mainclass",{"_index":579,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._model",{"_index":77,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this._model.items.find(x",{"_index":108,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this._originalmodel",{"_index":92,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this._quest",{"_index":585,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._rowid",{"_index":564,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._rowindex",{"_index":569,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this._titl",{"_index":276,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{}}}],["this._valu",{"_index":346,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCSwitchControl.html":{}}}],["this.actionstatuschange.emit",{"_index":230,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.actionstatuschange.emit(ev",{"_index":644,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["this.change.emit(ev",{"_index":814,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["this.close.emit(thi",{"_index":737,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["this.column",{"_index":235,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.columnindex",{"_index":234,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.commandcancel.emit",{"_index":243,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.commandcancel.emit(ev",{"_index":642,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["this.commandclick.emit",{"_index":239,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.commandclick.emit(ev",{"_index":638,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["this.commandconfirm.emit",{"_index":241,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.commandconfirm.emit(ev",{"_index":640,"title":{},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["this.commandid",{"_index":231,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.configur",{"_index":420,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.confirmationtitl",{"_index":226,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.confirmationtitleprovider.gettitle(this.dataitem",{"_index":227,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.controluid",{"_index":223,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.createditem",{"_index":439,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.createditems.indexof(item",{"_index":435,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.createditems.length",{"_index":444,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.createditems.push(item",{"_index":427,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.createditems.splice(index",{"_index":436,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.dashboard",{"_index":1143,"title":{},"body":{"index.html":{}}}],["this.dashboard.push",{"_index":1152,"title":{},"body":{"index.html":{}}}],["this.dashboard.splice(this.dashboard.indexof(item",{"_index":1150,"title":{},"body":{"index.html":{}}}],["this.data",{"_index":421,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.data.splice(index",{"_index":438,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.data.unshift(item",{"_index":428,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.dataitem",{"_index":232,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.deleteditem",{"_index":450,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.deleteditems.length",{"_index":448,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.deleteditems.push(item",{"_index":440,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.dis",{"_index":238,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.element.nativeel",{"_index":846,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["this.getcurrentvaluefor(propertychang",{"_index":72,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this.getmodelitemfor(minibuttonclick",{"_index":112,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this.getmodelitemfor(propertychang",{"_index":76,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this.getmodelitemfor(propertynam",{"_index":99,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this.getoriginalvaluefor(propertychang",{"_index":70,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this.getvaluefor(propertynam",{"_index":96,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this.handlelinkeditems(item",{"_index":85,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this.haschang",{"_index":445,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.isnew(item",{"_index":429,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.itemindex(item",{"_index":430,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.markpropertychanged(propertychang",{"_index":73,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this.messag",{"_index":149,"title":{},"body":{"classes/NgxGaugeError.html":{}}}],["this.minibuttonclick.emit",{"_index":113,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this.model",{"_index":65,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this.oncancel.emit",{"_index":592,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this.onchangecallback",{"_index":823,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["this.onchangecallback(v",{"_index":821,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["this.onconfirmation.emit",{"_index":590,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["this.ontouchedcallback",{"_index":824,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["this.open.emit(thi",{"_index":735,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["this.opt",{"_index":1138,"title":{},"body":{"index.html":{}}}],["this.options.api.optionschang",{"_index":1148,"title":{},"body":{"index.html":{}}}],["this.originaldata",{"_index":422,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.propertychange.emit",{"_index":86,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["this.propertychange.emit(ev",{"_index":816,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["this.read",{"_index":455,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.renderer2.addclass(this.slidedowncontainer.nativeel",{"_index":736,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["this.renderer2.removeclass(this.slidedowncontainer.nativeel",{"_index":734,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["this.reset",{"_index":453,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.rowindex",{"_index":233,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this.show(!this.isopen",{"_index":733,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["this.slidedowncontainer.nativeelement.classlist.contains('clos",{"_index":732,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["this.tab",{"_index":855,"title":{},"body":{"components/WCTabPanelComponent.html":{}}}],["this.tabs.foreach(tabitem",{"_index":856,"title":{},"body":{"components/WCTabPanelComponent.html":{}}}],["this.toastr.clear",{"_index":892,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["this.toastr.error(messag",{"_index":888,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["this.toastr.info(messag",{"_index":886,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["this.toastr.success(messag",{"_index":884,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["this.toastr.warning(messag",{"_index":890,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["this.updateditem",{"_index":431,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.updateditems.length",{"_index":443,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.updateditems.push(item",{"_index":434,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.updateditems.splice(index",{"_index":433,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["this.valu",{"_index":236,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["this_expr",{"_index":805,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["timepickermodul",{"_index":971,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["titl",{"_index":259,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCTabItemComponent.html":{},"injectables/WCToasterService.html":{},"index.html":{}}}],["title():ani",{"_index":275,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCPanelComponent.html":{}}}],["title():str",{"_index":341,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCSwitchButton.html":{}}}],["title(value:ani",{"_index":277,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCPanelComponent.html":{}}}],["title(value:str",{"_index":342,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCSwitchButton.html":{}}}],["title:str",{"_index":201,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"injectables/WCToasterService.html":{}}}],["title:string=\"tab",{"_index":843,"title":{},"body":{"components/WCTabItemComponent.html":{}}}],["toastr",{"_index":866,"title":{},"body":{"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{},"dependencies.html":{}}}],["toastrmodul",{"_index":905,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["toastrmodule.forroot",{"_index":914,"title":{},"body":{"modules/WCUIKitCoreModule.html":{}}}],["toastrservic",{"_index":864,"title":{},"body":{"injectables/WCToasterService.html":{},"modules/WCUIKitCoreModule.html":{}}}],["todo",{"_index":447,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["toggl",{"_index":714,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["toolbar",{"_index":947,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{},"dependencies.html":{},"index.html":{}}}],["toolbarmodul",{"_index":945,"title":{},"body":{"modules/WCUIKitKendoProviderModule.html":{}}}],["tree",{"_index":250,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["true",{"_index":75,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSwitchControl.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"classes/NgxGaugeError.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":1183,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":899,"title":{},"body":{"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridsterProviderModule.html":{},"modules/WCUIKitKendoProviderModule.html":{},"modules/WCUIKitNgxChartsProviderModule.html":{},"index.html":{}}}],["uid",{"_index":190,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{}}}],["undefin",{"_index":1055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updat",{"_index":372,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"miscellaneous/variables.html":{}}}],["update(item",{"_index":393,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["update_act",{"_index":409,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updateditem",{"_index":361,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["upload",{"_index":738,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["us",{"_index":1096,"title":{},"body":{"index.html":{}}}],["useexist",{"_index":807,"title":{},"body":{"components/WCSwitchControl.html":{},"miscellaneous/variables.html":{}}}],["uuid",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["uuid/v1",{"_index":181,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCSwitchControl.html":{}}}],["uuidv1",{"_index":182,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCSwitchControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uuidv1_",{"_index":180,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCSwitchControl.html":{},"miscellaneous/variables.html":{}}}],["v",{"_index":800,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["valu",{"_index":31,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"directives/NgxGaugeAppend.html":{},"directives/NgxGaugeLabel.html":{},"directives/NgxGaugePrepend.html":{},"directives/NgxGaugeValue.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value():ani",{"_index":345,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["value():str",{"_index":587,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["value(v",{"_index":820,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["value(value:ani",{"_index":347,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{}}}],["value(value:str",{"_index":588,"title":{},"body":{"components/WCGridButtonEditorComponent.html":{}}}],["value:ani",{"_index":215,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{}}}],["valuechang",{"_index":34,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["var",{"_index":283,"title":{},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{}}}],["variabl",{"_index":992,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variou",{"_index":1097,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":726,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["viewchild('slidedowncontain",{"_index":731,"title":{},"body":{"components/WCSlidePanelComponent.html":{}}}],["visibl",{"_index":662,"title":{},"body":{"components/WCLoadingOverlayComponent.html":{}}}],["visual",{"_index":1089,"title":{},"body":{"index.html":{}}}],["void",{"_index":119,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"injectables/WCToasterService.html":{}}}],["want",{"_index":1116,"title":{},"body":{"index.html":{}}}],["warn",{"_index":328,"title":{},"body":{"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"injectables/WCToasterService.html":{}}}],["warning(messag",{"_index":877,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["warning(message:str",{"_index":889,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["wc",{"_index":46,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"index.html":{}}}],["wc_switch_control_value_accessor",{"_index":770,"title":{},"body":{"components/WCSwitchControl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["wcconfirmationtitleprovid",{"_index":170,"title":{"interfaces/WCConfirmationTitleProvider.html":{}},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"coverage.html":{}}}],["wcdashboardheadercompon",{"_index":247,"title":{"components/WCDashboardHeaderComponent.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["wcdatacountercompon",{"_index":287,"title":{"components/WCDataCounterComponent.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitDataModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["wceditservic",{"_index":352,"title":{"injectables/WCEditService.html":{}},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{},"overview.html":{}}}],["wceditserviceconfigur",{"_index":387,"title":{"interfaces/WCEditServiceConfiguration.html":{}},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{},"coverage.html":{}}}],["wcgaugecompon",{"_index":289,"title":{"components/WCGaugeComponent.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitDataModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcgridbuttoneditorcompon",{"_index":290,"title":{"components/WCGridButtonEditorComponent.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["wcgrideditorcommandcompon",{"_index":200,"title":{"components/WCGridEditorCommandComponent.html":{}},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcgrideditorcommandcomponentev",{"_index":188,"title":{"interfaces/WCGridEditorCommandComponentEvent.html":{}},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"coverage.html":{}}}],["wcgrideditorcommandcomponenteventtyp",{"_index":183,"title":{},"body":{"interfaces/WCConfirmationTitleProvider.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandComponentEvent.html":{},"miscellaneous/enumerations.html":{}}}],["wcgrideditorcommandconfig",{"_index":626,"title":{"interfaces/WCGridEditorCommandConfig.html":{}},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"coverage.html":{}}}],["wcgrideditorcommandsconfig",{"_index":631,"title":{"interfaces/WCGridEditorCommandsConfig.html":{}},"body":{"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"coverage.html":{}}}],["wcgrideditorcommandsgroupcompon",{"_index":293,"title":{"components/WCGridEditorCommandsGroupComponent.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"interfaces/WCGridEditorCommandConfig.html":{},"interfaces/WCGridEditorCommandsConfig.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcloadingoverlaycompon",{"_index":295,"title":{"components/WCLoadingOverlayComponent.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitGridModule.html":{},"coverage.html":{},"overview.html":{}}}],["wcpanelcompon",{"_index":298,"title":{"components/WCPanelComponent.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["wcpropertyeditorcompon",{"_index":53,"title":{"components/WCPropertyEditorComponent.html":{}},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["wcpropertyeditoritem",{"_index":11,"title":{"interfaces/WCPropertyEditorItem.html":{}},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"coverage.html":{}}}],["wcpropertyeditoritemtyp",{"_index":23,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"miscellaneous/enumerations.html":{}}}],["wcpropertyeditoritemtype.boolean",{"_index":83,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["wcpropertyeditormodel",{"_index":41,"title":{"interfaces/WCPropertyEditorModel.html":{}},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{},"coverage.html":{}}}],["wcslidedownpanelcompon",{"_index":1109,"title":{},"body":{"index.html":{}}}],["wcslidepanelcompon",{"_index":300,"title":{"components/WCSlidePanelComponent.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["wcswitchbutton",{"_index":302,"title":{"components/WCSwitchButton.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["wcswitchcontrol",{"_index":304,"title":{"components/WCSwitchControl.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["wctabitemcompon",{"_index":306,"title":{"components/WCTabItemComponent.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["wctabpanelcompon",{"_index":309,"title":{"components/WCTabPanelComponent.html":{}},"body":{"components/WCDashboardHeaderComponent.html":{},"components/WCDataCounterComponent.html":{},"components/WCGaugeComponent.html":{},"components/WCGridButtonEditorComponent.html":{},"components/WCGridEditorCommandComponent.html":{},"components/WCGridEditorCommandsGroupComponent.html":{},"components/WCLoadingOverlayComponent.html":{},"components/WCPanelComponent.html":{},"components/WCPropertyEditorComponent.html":{},"components/WCSlidePanelComponent.html":{},"components/WCSwitchButton.html":{},"components/WCSwitchControl.html":{},"components/WCTabItemComponent.html":{},"components/WCTabPanelComponent.html":{},"modules/WCUIKitCoreModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["wctoasterservic",{"_index":859,"title":{"injectables/WCToasterService.html":{}},"body":{"injectables/WCToasterService.html":{},"coverage.html":{}}}],["wcuikitcoremodul",{"_index":893,"title":{"modules/WCUIKitCoreModule.html":{}},"body":{"modules/WCUIKitCoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["wcuikitdatamodul",{"_index":916,"title":{"modules/WCUIKitDataModule.html":{}},"body":{"modules/WCUIKitDataModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["wcuikitgridmodul",{"_index":926,"title":{"modules/WCUIKitGridModule.html":{}},"body":{"modules/WCUIKitGridModule.html":{},"modules.html":{},"overview.html":{}}}],["wcuikitgridsterprovidermodul",{"_index":937,"title":{"modules/WCUIKitGridsterProviderModule.html":{}},"body":{"modules/WCUIKitGridsterProviderModule.html":{},"index.html":{},"modules.html":{}}}],["wcuikitkendoprovidermodul",{"_index":943,"title":{"modules/WCUIKitKendoProviderModule.html":{}},"body":{"modules/WCUIKitKendoProviderModule.html":{},"index.html":{},"modules.html":{}}}],["wcuikitngxchartsprovidermodul",{"_index":979,"title":{"modules/WCUIKitNgxChartsProviderModule.html":{}},"body":{"modules/WCUIKitNgxChartsProviderModule.html":{},"index.html":{},"modules.html":{}}}],["web",{"_index":1018,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["widget",{"_index":1164,"title":{},"body":{"index.html":{}}}],["wish",{"_index":1099,"title":{},"body":{"index.html":{}}}],["without",{"_index":1172,"title":{},"body":{"index.html":{}}}],["workaround",{"_index":1167,"title":{},"body":{"index.html":{}}}],["writevalu",{"_index":778,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["writevalue(valu",{"_index":790,"title":{},"body":{"components/WCSwitchControl.html":{}}}],["x",{"_index":1146,"title":{},"body":{"index.html":{}}}],["x.field",{"_index":104,"title":{},"body":{"interfaces/MinitButtonClickEvent.html":{},"interfaces/PropertyChangeEvent.html":{},"components/WCPropertyEditorComponent.html":{},"interfaces/WCPropertyEditorItem.html":{},"interfaces/WCPropertyEditorModel.html":{}}}],["y",{"_index":1145,"title":{},"body":{"index.html":{}}}],["ye",{"_index":872,"title":{},"body":{"injectables/WCToasterService.html":{}}}],["zip",{"_index":404,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["zip(...completed).subscrib",{"_index":454,"title":{},"body":{"injectables/WCEditService.html":{},"interfaces/WCEditServiceConfiguration.html":{}}}],["zoom",{"_index":161,"title":{},"body":{"modules/NgxGaugeModule.html":{},"modules/WCUIKitCoreModule.html":{},"modules/WCUIKitDataModule.html":{},"modules/WCUIKitGridModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/MinitButtonClickEvent.html":{"url":"interfaces/MinitButtonClickEvent.html","title":"interface - MinitButtonClickEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MinitButtonClickEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/editors/property-editor/wc-property-editor.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        item\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     WCPropertyEditorItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WCPropertyEditorItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, AfterContentInit, Input, Output, EventEmitter  } from '@angular/core';\n\n\nexport enum WCPropertyEditorItemType {\n  String = 'string',\n  Boolean = 'boolean',\n  List = 'list',\n  Text = 'text'\n}\n\nexport interface  WCPropertyEditorItem {\n  name: string;\n  description?: string;\n  field: string;\n  type: WCPropertyEditorItemType;\n  value?: any;\n  disabled?: boolean;\n  htmlInputType?: string;\n  valueChanged?: boolean;\n  listValues?: string[];\n  miniCommand?: boolean;\n  miniCommandCaption?: string;\n  placeholder?: string;\n  elementRef?: string;\n  linkTo?: string[];\n}\n\nexport interface WCPropertyEditorModel {\n  items: WCPropertyEditorItem[];\n}\n\nexport interface PropertyChangeEvent {\n  item: WCPropertyEditorItem;\n  newValue: any;\n  originalValue: any;\n}\n\nexport interface MinitButtonClickEvent {\n  item: WCPropertyEditorItem;\n}\n\n @Component({\n   selector: 'wc-property-editor',\n   templateUrl: './wc-property-editor.component.html',\n   styleUrls: [ './wc-property-editor.component.scss' ]\n })\n export class WCPropertyEditorComponent implements AfterContentInit {\n\n  private _model: WCPropertyEditorModel;\n  private _originalModel: WCPropertyEditorModel;\n  checkType: any = WCPropertyEditorItemType;\n\n  @Output() propertyChange: EventEmitter = new EventEmitter();\n  @Output() miniButtonClick: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  ngAfterContentInit() {\n    console.log('WCPropertyEditorComponent: ', this.model);\n  }\n\n  onModelChanged(event: any) {\n  }\n\n  onPropertyChange(event: any) {\n    const propertyChanged = event.srcElement.getAttribute('itemId');\n    const originalValue = this.getOriginalValueFor(propertyChanged);\n    const currentValue = this.getCurrentValueFor(propertyChanged);\n    if (originalValue && (originalValue === currentValue)) {\n      this.markPropertyChanged(propertyChanged, false);\n    } else {\n      this.markPropertyChanged(propertyChanged, true);\n    }\n    const item: WCPropertyEditorItem = this.getModelItemFor(propertyChanged, this._model);\n    if ( item ) {\n      // handle linked items if it's a boolean swicth and has a linked items\n      if ((item.type === WCPropertyEditorItemType.Boolean) && (item.linkTo)){\n        this.handleLinkedItems(item);\n      }\n      this.propertyChange.emit({ item: item, newValue: currentValue, originalValue: originalValue });\n    }\n  }\n\n  @Input()\n  public get model() {\n    return this._model;\n  }\n\n  public set model(model: WCPropertyEditorModel) {\n    this._model = model;\n    this._originalModel =  JSON.parse(JSON.stringify(model));\n  }\n\n  private getOriginalValueFor(propertyName: string):any {\n    return this.getValueFor(propertyName, this._originalModel);\n  }\n\n  private getCurrentValueFor(propertyName: string): any {\n    return this.getValueFor(propertyName, this._model);\n  }\n\n  private getValueFor(propertyName: string, model: WCPropertyEditorModel): any {\n    const item =  this.getModelItemFor(propertyName, model);\n    if (item) {\n      return item.value;\n    } else {\n      return null;\n    }\n  }\n\n  private getModelItemFor(propertyName: string, model: WCPropertyEditorModel): WCPropertyEditorItem {\n    const item =  model.items.find(x => x.field === propertyName);\n    if (item) {\n      return item;\n    } else {\n      return null;\n    }\n  }\n  private markPropertyChanged(propertyName: string, changed: boolean) {\n    const item =  this._model.items.find(x => x.field === propertyName);\n    if (item) {\n      item.valueChanged = changed;\n    }\n  }\n\n  onMiniButtonClick(event: any) {\n    const miniButtonClicked = event.srcElement.getAttribute('miniButtonItemId');\n    const item: WCPropertyEditorItem = this.getModelItemFor(miniButtonClicked, this._model);\n    if ( item ) {\n      this.miniButtonClick.emit({ item: item });\n    }\n\n  }\n\n  public getPropertyItem(propertyName: string): WCPropertyEditorItem {\n    return this.getModelItemFor(propertyName, this._model);\n  }\n\n  /**\n   * Enable/disable linked items to a boolean switch field\n   * @param item\n   */\n  private handleLinkedItems(item: WCPropertyEditorItem): void {\n    const linkedItems: string[] = item.linkTo;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxGaugeAppend.html":{"url":"directives/NgxGaugeAppend.html","title":"directive - NgxGaugeAppend","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NgxGaugeAppend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngx-gauge-append\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"ngx-gauge-append\",\n  exportAs: \"ngxGaugeAppend\"\n})\nexport class NgxGaugeAppend {}\n\n@Directive({\n  selector: \"ngx-gauge-prepend\",\n  exportAs: \"ngxGaugePrepend\"\n})\nexport class NgxGaugePrepend {}\n\n@Directive({\n  selector: \"ngx-gauge-value\",\n  exportAs: \"ngxGaugeValue\"\n})\nexport class NgxGaugeValue {}\n\n@Directive({\n  selector: \"ngx-gauge-label\",\n  exportAs: \"ngxGaugeLabel\"\n})\nexport class NgxGaugeLabel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgxGaugeError.html":{"url":"classes/NgxGaugeError.html","title":"class - NgxGaugeError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgxGaugeError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/gauge/gauge-error.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/data/NxGauge/gauge/gauge-error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NgxGaugeError extends Error {\n    constructor(message: string) {\n        super();\n        this.message = message;\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxGaugeLabel.html":{"url":"directives/NgxGaugeLabel.html","title":"directive - NgxGaugeLabel","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NgxGaugeLabel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngx-gauge-label\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"ngx-gauge-append\",\n  exportAs: \"ngxGaugeAppend\"\n})\nexport class NgxGaugeAppend {}\n\n@Directive({\n  selector: \"ngx-gauge-prepend\",\n  exportAs: \"ngxGaugePrepend\"\n})\nexport class NgxGaugePrepend {}\n\n@Directive({\n  selector: \"ngx-gauge-value\",\n  exportAs: \"ngxGaugeValue\"\n})\nexport class NgxGaugeValue {}\n\n@Directive({\n  selector: \"ngx-gauge-label\",\n  exportAs: \"ngxGaugeLabel\"\n})\nexport class NgxGaugeLabel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxGaugeModule.html":{"url":"modules/NgxGaugeModule.html","title":"module - NgxGaugeModule","body":"\n                   \n\n\n\n\n  Modules\n  NgxGaugeModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxGaugeModule\n\n\n\ncluster_NgxGaugeModule_declarations\n\n\n\ncluster_NgxGaugeModule_exports\n\n\n\n\nNgxGauge\n\nNgxGauge\n\n\n\nNgxGaugeModule\n\nNgxGaugeModule\n\nNgxGaugeModule -->\n\nNgxGauge->NgxGaugeModule\n\n\n\n\n\nNgxGaugeAppend\n\nNgxGaugeAppend\n\nNgxGaugeModule -->\n\nNgxGaugeAppend->NgxGaugeModule\n\n\n\n\n\nNgxGaugeLabel\n\nNgxGaugeLabel\n\nNgxGaugeModule -->\n\nNgxGaugeLabel->NgxGaugeModule\n\n\n\n\n\nNgxGaugePrepend\n\nNgxGaugePrepend\n\nNgxGaugeModule -->\n\nNgxGaugePrepend->NgxGaugeModule\n\n\n\n\n\nNgxGaugeValue\n\nNgxGaugeValue\n\nNgxGaugeModule -->\n\nNgxGaugeValue->NgxGaugeModule\n\n\n\n\n\nNgxGauge \n\nNgxGauge \n\nNgxGauge  -->\n\nNgxGaugeModule->NgxGauge \n\n\n\n\n\nNgxGaugeAppend \n\nNgxGaugeAppend \n\nNgxGaugeAppend  -->\n\nNgxGaugeModule->NgxGaugeAppend \n\n\n\n\n\nNgxGaugeLabel \n\nNgxGaugeLabel \n\nNgxGaugeLabel  -->\n\nNgxGaugeModule->NgxGaugeLabel \n\n\n\n\n\nNgxGaugePrepend \n\nNgxGaugePrepend \n\nNgxGaugePrepend  -->\n\nNgxGaugeModule->NgxGaugePrepend \n\n\n\n\n\nNgxGaugeValue \n\nNgxGaugeValue \n\nNgxGaugeValue  -->\n\nNgxGaugeModule->NgxGaugeValue \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/ngx-gauge.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                NgxGauge\n                            \n                            \n                                NgxGaugeAppend\n                            \n                            \n                                NgxGaugeLabel\n                            \n                            \n                                NgxGaugePrepend\n                            \n                            \n                                NgxGaugeValue\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NgxGauge\n                            \n                            \n                                    NgxGaugeAppend\n                            \n                            \n                                    NgxGaugeLabel\n                            \n                            \n                                    NgxGaugePrepend\n                            \n                            \n                                    NgxGaugeValue\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxGauge } from './gauge/gauge';\nimport { NgxGaugeLabel, NgxGaugeValue, NgxGaugePrepend, NgxGaugeAppend } from './gauge/gauge-directives';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\n  exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\n})\nexport class NgxGaugeModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxGaugePrepend.html":{"url":"directives/NgxGaugePrepend.html","title":"directive - NgxGaugePrepend","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NgxGaugePrepend\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngx-gauge-prepend\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"ngx-gauge-append\",\n  exportAs: \"ngxGaugeAppend\"\n})\nexport class NgxGaugeAppend {}\n\n@Directive({\n  selector: \"ngx-gauge-prepend\",\n  exportAs: \"ngxGaugePrepend\"\n})\nexport class NgxGaugePrepend {}\n\n@Directive({\n  selector: \"ngx-gauge-value\",\n  exportAs: \"ngxGaugeValue\"\n})\nexport class NgxGaugeValue {}\n\n@Directive({\n  selector: \"ngx-gauge-label\",\n  exportAs: \"ngxGaugeLabel\"\n})\nexport class NgxGaugeLabel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxGaugeValue.html":{"url":"directives/NgxGaugeValue.html","title":"directive - NgxGaugeValue","body":"\n                   \n\n\n\n\n\n\n  Directives\n  NgxGaugeValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        ngx-gauge-value\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"ngx-gauge-append\",\n  exportAs: \"ngxGaugeAppend\"\n})\nexport class NgxGaugeAppend {}\n\n@Directive({\n  selector: \"ngx-gauge-prepend\",\n  exportAs: \"ngxGaugePrepend\"\n})\nexport class NgxGaugePrepend {}\n\n@Directive({\n  selector: \"ngx-gauge-value\",\n  exportAs: \"ngxGaugeValue\"\n})\nexport class NgxGaugeValue {}\n\n@Directive({\n  selector: \"ngx-gauge-label\",\n  exportAs: \"ngxGaugeLabel\"\n})\nexport class NgxGaugeLabel {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PropertyChangeEvent.html":{"url":"interfaces/PropertyChangeEvent.html","title":"interface - PropertyChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PropertyChangeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/editors/property-editor/wc-property-editor.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        item\n                                \n                                \n                                        newValue\n                                \n                                \n                                        originalValue\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     WCPropertyEditorItem\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WCPropertyEditorItem\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newValue\n                                    \n                                \n                                \n                                    \n                                        newValue:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalValue\n                                    \n                                \n                                \n                                    \n                                        originalValue:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, AfterContentInit, Input, Output, EventEmitter  } from '@angular/core';\n\n\nexport enum WCPropertyEditorItemType {\n  String = 'string',\n  Boolean = 'boolean',\n  List = 'list',\n  Text = 'text'\n}\n\nexport interface  WCPropertyEditorItem {\n  name: string;\n  description?: string;\n  field: string;\n  type: WCPropertyEditorItemType;\n  value?: any;\n  disabled?: boolean;\n  htmlInputType?: string;\n  valueChanged?: boolean;\n  listValues?: string[];\n  miniCommand?: boolean;\n  miniCommandCaption?: string;\n  placeholder?: string;\n  elementRef?: string;\n  linkTo?: string[];\n}\n\nexport interface WCPropertyEditorModel {\n  items: WCPropertyEditorItem[];\n}\n\nexport interface PropertyChangeEvent {\n  item: WCPropertyEditorItem;\n  newValue: any;\n  originalValue: any;\n}\n\nexport interface MinitButtonClickEvent {\n  item: WCPropertyEditorItem;\n}\n\n @Component({\n   selector: 'wc-property-editor',\n   templateUrl: './wc-property-editor.component.html',\n   styleUrls: [ './wc-property-editor.component.scss' ]\n })\n export class WCPropertyEditorComponent implements AfterContentInit {\n\n  private _model: WCPropertyEditorModel;\n  private _originalModel: WCPropertyEditorModel;\n  checkType: any = WCPropertyEditorItemType;\n\n  @Output() propertyChange: EventEmitter = new EventEmitter();\n  @Output() miniButtonClick: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  ngAfterContentInit() {\n    console.log('WCPropertyEditorComponent: ', this.model);\n  }\n\n  onModelChanged(event: any) {\n  }\n\n  onPropertyChange(event: any) {\n    const propertyChanged = event.srcElement.getAttribute('itemId');\n    const originalValue = this.getOriginalValueFor(propertyChanged);\n    const currentValue = this.getCurrentValueFor(propertyChanged);\n    if (originalValue && (originalValue === currentValue)) {\n      this.markPropertyChanged(propertyChanged, false);\n    } else {\n      this.markPropertyChanged(propertyChanged, true);\n    }\n    const item: WCPropertyEditorItem = this.getModelItemFor(propertyChanged, this._model);\n    if ( item ) {\n      // handle linked items if it's a boolean swicth and has a linked items\n      if ((item.type === WCPropertyEditorItemType.Boolean) && (item.linkTo)){\n        this.handleLinkedItems(item);\n      }\n      this.propertyChange.emit({ item: item, newValue: currentValue, originalValue: originalValue });\n    }\n  }\n\n  @Input()\n  public get model() {\n    return this._model;\n  }\n\n  public set model(model: WCPropertyEditorModel) {\n    this._model = model;\n    this._originalModel =  JSON.parse(JSON.stringify(model));\n  }\n\n  private getOriginalValueFor(propertyName: string):any {\n    return this.getValueFor(propertyName, this._originalModel);\n  }\n\n  private getCurrentValueFor(propertyName: string): any {\n    return this.getValueFor(propertyName, this._model);\n  }\n\n  private getValueFor(propertyName: string, model: WCPropertyEditorModel): any {\n    const item =  this.getModelItemFor(propertyName, model);\n    if (item) {\n      return item.value;\n    } else {\n      return null;\n    }\n  }\n\n  private getModelItemFor(propertyName: string, model: WCPropertyEditorModel): WCPropertyEditorItem {\n    const item =  model.items.find(x => x.field === propertyName);\n    if (item) {\n      return item;\n    } else {\n      return null;\n    }\n  }\n  private markPropertyChanged(propertyName: string, changed: boolean) {\n    const item =  this._model.items.find(x => x.field === propertyName);\n    if (item) {\n      item.valueChanged = changed;\n    }\n  }\n\n  onMiniButtonClick(event: any) {\n    const miniButtonClicked = event.srcElement.getAttribute('miniButtonItemId');\n    const item: WCPropertyEditorItem = this.getModelItemFor(miniButtonClicked, this._model);\n    if ( item ) {\n      this.miniButtonClick.emit({ item: item });\n    }\n\n  }\n\n  public getPropertyItem(propertyName: string): WCPropertyEditorItem {\n    return this.getModelItemFor(propertyName, this._model);\n  }\n\n  /**\n   * Enable/disable linked items to a boolean switch field\n   * @param item\n   */\n  private handleLinkedItems(item: WCPropertyEditorItem): void {\n    const linkedItems: string[] = item.linkTo;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WCConfirmationTitleProvider.html":{"url":"interfaces/WCConfirmationTitleProvider.html","title":"interface - WCConfirmationTitleProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WCConfirmationTitleProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getTitle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTitle(rowData: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rowData\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport * as uuidv1_ from 'uuid/v1';\nconst uuidv1 = uuidv1_;\n\nexport enum WCGridEditorCommandComponentEventType {\n    Click,\n    Confirm,\n    Cancel,\n    Ask\n}\n\nexport interface WCGridEditorCommandComponentEvent {\n    id: string;\n    uid: string;\n    actionDisplay?: boolean;\n    rowData: {\n        dataItem?: any;\n        rowIndex?: number;\n        columnIndex?: number;\n        column?: number;\n        value?: any;\n    }\n}\n\nexport interface WCConfirmationTitleProvider {\n    getTitle(rowData): string;\n}\n\n@Component({\n    selector: 'wc-grid-editor-command',\n    styleUrls: [ './grid-editor-command-component.scss' ],\n    templateUrl: './grid-editor-command-component.html'\n})\nexport class WCGridEditorCommandComponent {\n\n    //@Input() disabled: boolean;\n    @Input() title:string;\n    @Input() hasConfirmation: boolean;\n    @Input() confirmationTitle: string;\n    @Input() confirmationTitleProvider: WCConfirmationTitleProvider;\n    @Input() commandIcon: string;\n    @Input() commandId: string;\n    @Input() public alignMode = 'center';\n    // row data\n    @Input() dataItem:any;\n    @Input() rowIndex:number;\n    @Input() columnIndex:number;\n    @Input() column:number;\n    @Input() value:any;\n    \n\n    @Output() commandClick: EventEmitter = new EventEmitter();\n    @Output() commandConfirm: EventEmitter = new EventEmitter();\n    @Output() commandCancel: EventEmitter = new EventEmitter();\n    @Output() actionStatusChange: EventEmitter = new EventEmitter();\n    \n\n    controlUID: string;\n    private _actionDisplayed: boolean;\n    private _disabled: boolean;\n\n    constructor() {\n        this.controlUID = 'wc-grid-editor-command-' + uuidv1();\n    }\n\n    onCheckChange(event){\n        if(this.confirmationTitleProvider){\n            this.confirmationTitle = this.confirmationTitleProvider.getTitle(this.dataItem);\n        }\n        this._actionDisplayed = event.target.checked;\n        this.actionStatusChange.emit({\n            id: this.commandId,\n            uid: this.controlUID,\n            actionDisplay: this._actionDisplayed,\n            rowData: {\n                dataItem: this.dataItem,\n                rowIndex: this.rowIndex,\n                columnIndex: this.columnIndex,\n                column: this.column,\n                value: this.value\n            }\n        })\n    }\n\n    onCommandClick(event) {\n        if (!this.disabled){\n            this.commandClick.emit({\n                id: this.commandId,\n                uid: this.controlUID,\n                rowData: {\n                    dataItem: this.dataItem,\n                    rowIndex: this.rowIndex,\n                    columnIndex: this.columnIndex,\n                    column: this.column,\n                    value: this.value\n                }\n            })\n        }\n    }\n\n    onConfirm(event){\n        this.commandConfirm.emit({\n            id: this.commandId,\n            uid: this.controlUID,\n            rowData: {\n                dataItem: this.dataItem,\n                rowIndex: this.rowIndex,\n                columnIndex: this.columnIndex,\n                column: this.column,\n                value: this.value\n            }\n        })\n    }\n\n    onCancel(event) {\n        this.commandCancel.emit({\n            id: this.commandId,\n            uid: this.controlUID,\n            rowData: {\n                dataItem: this.dataItem,\n                rowIndex: this.rowIndex,\n                columnIndex: this.columnIndex,\n                column: this.column,\n                value: this.value\n            }\n        })\n    }\n\n    @Input() get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(disabled: boolean) {\n        this._disabled = disabled;\n    }\n\n    public get enabled(): boolean {\n        return !this.disabled;\n    }\n    \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCDashboardHeaderComponent.html":{"url":"components/WCDashboardHeaderComponent.html","title":"component - WCDashboardHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCDashboardHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-dashboard-header\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-dashboard-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _class\n                            \n                            \n                                    Private\n                                _title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:18\n                                \n                            \n\n                \n                    \n                        settitle(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n\n                \n                    \n                        getclass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:26\n                                \n                            \n\n                \n                    \n                        setclass(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'wc-dashboard-header',\n  templateUrl: './wc-dashboard-header.component.html',\n  styles: []\n})\nexport class WCDashboardHeaderComponent implements OnInit {\n  \n  private _title:string;\n  private _class:string = \"\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get title():any {\n    return this._title;\n  }\n\n  @Input() set title(value:any) {\n    this._title = value;\n  }\n\n  get class():any {\n    return this._class;\n  }\n\n  @Input() set class(value:any) {\n    this._class = value;\n  }\n\n}\n\n    \n\n    \n        \n  {{title}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{title}}'\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCDashboardHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCDataCounterComponent.html":{"url":"components/WCDataCounterComponent.html","title":"component - WCDataCounterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCDataCounterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/data/Counter/WCDataCounterComponent.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-data-counter\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-data-counter.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _class\n                            \n                            \n                                    Private\n                                _counterClass\n                            \n                            \n                                    Private\n                                _title\n                            \n                            \n                                    Private\n                                _value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                counterClass\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        counterClass\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _counterClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _counterClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"warn\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:20\n                                \n                            \n\n                \n                    \n                        settitle(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n\n                \n                    \n                        getclass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:28\n                                \n                            \n\n                \n                    \n                        setclass(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:36\n                                \n                            \n\n                \n                    \n                        setvalue(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        counterClass\n                    \n                \n\n                \n                    \n                        getcounterClass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:44\n                                \n                            \n\n                \n                    \n                        setcounterClass(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Counter/WCDataCounterComponent.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'wc-data-counter',\n  templateUrl: './wc-data-counter.component.html',\n  styles: []\n})\nexport class WCDataCounterComponent implements OnInit {\n  \n  private _value:any;\n  private _title:string;\n  private _class:string = \"\";\n  private _counterClass:string = \"warn\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get title():string {\n    return this._title;\n  }\n\n  @Input() set title(value:string) {\n    this._title = value;\n  }\n\n  get class():string {\n    return this._class;\n  }\n\n  @Input() set class(value:string) {\n    this._class = value;\n  }\n\n  get value():any {\n    return this._value;\n  }\n\n  @Input() set value(value:any) {\n    this._value = value;\n  }\n\n  get counterClass():string {\n    return this._counterClass;\n  }\n\n  @Input() set counterClass(value:string) {\n    this._counterClass = value;\n  }\n\n}\n\n    \n\n    \n        \n    {{value}}\n    {{title}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{value}}    {{title}}'\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCDataCounterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WCEditService.html":{"url":"injectables/WCEditService.html","title":"injectable - WCEditService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WCEditService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/grid/edit-service/wc-edit-service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configuration\n                            \n                            \n                                    Public\n                                createdItems\n                            \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Public\n                                deletedItems\n                            \n                            \n                                    Private\n                                originalData\n                            \n                            \n                                    Public\n                                updatedItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assignValues\n                            \n                            \n                                    Public\n                                cancelChanges\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                hasChanges\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                    Public\n                                isNew\n                            \n                            \n                                    Private\n                                itemIndex\n                            \n                            \n                                    Public\n                                read\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                saveChanges\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:29\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            assignValues\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        assignValues(target: any, source: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:128\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        source\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cancelChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cancelChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        create(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:139\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isNew\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isNew(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            itemIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        itemIndex(item: any, data: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:145\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            read\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        read(data: any, configuration: WCEditServiceConfiguration)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        configuration\n                                                        \n                                                                    WCEditServiceConfiguration\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        remove(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        update(item: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configuration\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configuration:     WCEditServiceConfiguration\n\n                    \n                \n                    \n                        \n                            Type :     WCEditServiceConfiguration\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createdItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        createdItems:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deletedItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deletedItems:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            originalData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        originalData:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updatedItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        updatedItems:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/edit-service/wc-edit-service.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n/*\nimport { Observable } from 'rxjs/Observable';\nimport { zip } from 'rxjs/observable/zip';\nimport { map } from 'rxjs/operators/map';\n*/\n\nconst CREATE_ACTION = 'create';\nconst UPDATE_ACTION = 'update';\nconst REMOVE_ACTION = 'destroy';\n\nconst cloneData = (data: any[]) => data.map(item => Object.assign({}, item));\n\nexport interface WCEditServiceConfiguration {\n    idField:string,\n    dirtyField:string,\n    isNewField:string\n}\n\n@Injectable()\nexport class WCEditService extends BehaviorSubject {\n    private data: any[] = [];\n    private originalData: any[] = [];\n    public createdItems: any[] = [];\n    public updatedItems: any[] = [];\n    public deletedItems: any[] = [];\n    private configuration:WCEditServiceConfiguration;\n\n    constructor() {\n        super([]);\n    }\n\n    public read(data:any, configuration:WCEditServiceConfiguration) {\n        this.configuration = configuration;\n       \n        this.data = data;\n        this.originalData = cloneData(data);\n        super.next(data);\n        return super.next(this.data);\n    }\n\n    public create(item: any): void {\n        item[this.configuration.dirtyField]= \"true\";\n        this.createdItems.push(item);\n        this.data.unshift(item);\n\n        super.next(this.data);\n    }\n\n    public update(item: any): void {\n        if (!this.isNew(item)) {\n            const index = this.itemIndex(item, this.updatedItems);\n            if (index !== -1) {\n                this.updatedItems.splice(index, 1, item);\n            } else {\n                this.updatedItems.push(item);\n            }\n        } else {\n            const index = this.createdItems.indexOf(item);\n            this.createdItems.splice(index, 1, item);\n            //console.log(\">>>>> update is new index=\", index);\n        }\n        item[this.configuration.dirtyField]= \"true\";\n    }\n\n    public remove(item: any): void {\n        let index = this.itemIndex(item, this.data);\n        this.data.splice(index, 1);\n\n        index = this.itemIndex(item, this.createdItems);\n        if (index >= 0) {\n            this.createdItems.splice(index, 1);\n        } else {\n            this.deletedItems.push(item);\n        }\n\n        index = this.itemIndex(item, this.updatedItems);\n        if (index >= 0) {\n            this.updatedItems.splice(index, 1);\n        }\n\n        super.next(this.data);\n    }\n\n    public isNew(item: any): boolean {\n        return item[this.configuration.isNewField];\n    }\n\n    public hasChanges(): boolean {\n        return Boolean(this.deletedItems.length || this.updatedItems.length || this.createdItems.length);\n    }\n\n    public saveChanges(): void {\n        if (!this.hasChanges()) {\n            return;\n        }\n\n        const completed = [];\n\n        /** TODO!!\n        if (this.deletedItems.length) {\n            completed.push(this.fetch(REMOVE_ACTION, this.deletedItems));\n        }\n\n        if (this.updatedItems.length) {\n            completed.push(this.fetch(UPDATE_ACTION, this.updatedItems));\n        }\n\n        if (this.createdItems.length) {\n            completed.push(this.fetch(CREATE_ACTION, this.createdItems));\n        }\n        **/\n\n        this.reset();\n        //zip(...completed).subscribe(() => this.read());\n    }\n\n    public cancelChanges(): void {\n        this.reset();\n\n        this.data = this.originalData;\n        this.originalData = cloneData(this.originalData);\n        super.next(this.data);\n    }\n\n    public assignValues(target: any, source: any): void {\n        Object.assign(target, source);\n    }\n\n    public reset() {\n        this.data = [];\n        this.deletedItems = [];\n        this.updatedItems = [];\n        this.createdItems = [];\n    }\n\n    public init() {\n        this.reset()\n        this.originalData = [];\n        super.next(this.data);\n    }\n\n    private itemIndex(item: any, data: any[]): number {\n        for (let idx = 0; idx \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WCEditServiceConfiguration.html":{"url":"interfaces/WCEditServiceConfiguration.html","title":"interface - WCEditServiceConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WCEditServiceConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/grid/edit-service/wc-edit-service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dirtyField\n                                \n                                \n                                        idField\n                                \n                                \n                                        isNewField\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dirtyField\n                                    \n                                \n                                \n                                    \n                                        dirtyField:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idField\n                                    \n                                \n                                \n                                    \n                                        idField:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isNewField\n                                    \n                                \n                                \n                                    \n                                        isNewField:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n/*\nimport { Observable } from 'rxjs/Observable';\nimport { zip } from 'rxjs/observable/zip';\nimport { map } from 'rxjs/operators/map';\n*/\n\nconst CREATE_ACTION = 'create';\nconst UPDATE_ACTION = 'update';\nconst REMOVE_ACTION = 'destroy';\n\nconst cloneData = (data: any[]) => data.map(item => Object.assign({}, item));\n\nexport interface WCEditServiceConfiguration {\n    idField:string,\n    dirtyField:string,\n    isNewField:string\n}\n\n@Injectable()\nexport class WCEditService extends BehaviorSubject {\n    private data: any[] = [];\n    private originalData: any[] = [];\n    public createdItems: any[] = [];\n    public updatedItems: any[] = [];\n    public deletedItems: any[] = [];\n    private configuration:WCEditServiceConfiguration;\n\n    constructor() {\n        super([]);\n    }\n\n    public read(data:any, configuration:WCEditServiceConfiguration) {\n        this.configuration = configuration;\n       \n        this.data = data;\n        this.originalData = cloneData(data);\n        super.next(data);\n        return super.next(this.data);\n    }\n\n    public create(item: any): void {\n        item[this.configuration.dirtyField]= \"true\";\n        this.createdItems.push(item);\n        this.data.unshift(item);\n\n        super.next(this.data);\n    }\n\n    public update(item: any): void {\n        if (!this.isNew(item)) {\n            const index = this.itemIndex(item, this.updatedItems);\n            if (index !== -1) {\n                this.updatedItems.splice(index, 1, item);\n            } else {\n                this.updatedItems.push(item);\n            }\n        } else {\n            const index = this.createdItems.indexOf(item);\n            this.createdItems.splice(index, 1, item);\n            //console.log(\">>>>> update is new index=\", index);\n        }\n        item[this.configuration.dirtyField]= \"true\";\n    }\n\n    public remove(item: any): void {\n        let index = this.itemIndex(item, this.data);\n        this.data.splice(index, 1);\n\n        index = this.itemIndex(item, this.createdItems);\n        if (index >= 0) {\n            this.createdItems.splice(index, 1);\n        } else {\n            this.deletedItems.push(item);\n        }\n\n        index = this.itemIndex(item, this.updatedItems);\n        if (index >= 0) {\n            this.updatedItems.splice(index, 1);\n        }\n\n        super.next(this.data);\n    }\n\n    public isNew(item: any): boolean {\n        return item[this.configuration.isNewField];\n    }\n\n    public hasChanges(): boolean {\n        return Boolean(this.deletedItems.length || this.updatedItems.length || this.createdItems.length);\n    }\n\n    public saveChanges(): void {\n        if (!this.hasChanges()) {\n            return;\n        }\n\n        const completed = [];\n\n        /** TODO!!\n        if (this.deletedItems.length) {\n            completed.push(this.fetch(REMOVE_ACTION, this.deletedItems));\n        }\n\n        if (this.updatedItems.length) {\n            completed.push(this.fetch(UPDATE_ACTION, this.updatedItems));\n        }\n\n        if (this.createdItems.length) {\n            completed.push(this.fetch(CREATE_ACTION, this.createdItems));\n        }\n        **/\n\n        this.reset();\n        //zip(...completed).subscribe(() => this.read());\n    }\n\n    public cancelChanges(): void {\n        this.reset();\n\n        this.data = this.originalData;\n        this.originalData = cloneData(this.originalData);\n        super.next(this.data);\n    }\n\n    public assignValues(target: any, source: any): void {\n        Object.assign(target, source);\n    }\n\n    public reset() {\n        this.data = [];\n        this.deletedItems = [];\n        this.updatedItems = [];\n        this.createdItems = [];\n    }\n\n    public init() {\n        this.reset()\n        this.originalData = [];\n        super.next(this.data);\n    }\n\n    private itemIndex(item: any, data: any[]): number {\n        for (let idx = 0; idx \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCGaugeComponent.html":{"url":"components/WCGaugeComponent.html","title":"component - WCGaugeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCGaugeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/data/Gauge/wc-gauge.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-gauge\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-gauge.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _class\n                            \n                            \n                                    Private\n                                _counterClass\n                            \n                            \n                                    Private\n                                _title\n                            \n                            \n                                    Private\n                                _value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                counterClass\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        counterClass\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _counterClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _counterClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"warn\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:20\n                                \n                            \n\n                \n                    \n                        settitle(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n\n                \n                    \n                        getclass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:28\n                                \n                            \n\n                \n                    \n                        setclass(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:32\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:36\n                                \n                            \n\n                \n                    \n                        setvalue(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:40\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        counterClass\n                    \n                \n\n                \n                    \n                        getcounterClass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:44\n                                \n                            \n\n                \n                    \n                        setcounterClass(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/data/Gauge/wc-gauge.component.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'wc-gauge',\n  templateUrl: './wc-gauge.component.html',\n  styles: []\n})\nexport class WCGaugeComponent implements OnInit {\n  \n  private _value:any;\n  private _title:string;\n  private _class:string = \"\";\n  private _counterClass:string = \"warn\";\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get title():string {\n    return this._title;\n  }\n\n  @Input() set title(value:string) {\n    this._title = value;\n  }\n\n  get class():string {\n    return this._class;\n  }\n\n  @Input() set class(value:string) {\n    this._class = value;\n  }\n\n  get value():any {\n    return this._value;\n  }\n\n  @Input() set value(value:any) {\n    this._value = value;\n  }\n\n  get counterClass():string {\n    return this._counterClass;\n  }\n\n  @Input() set counterClass(value:string) {\n    this._counterClass = value;\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                {{value}}%\n            \n        \n        {{title}}\n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{value}}%                            {{title}}    '\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCGaugeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCGridButtonEditorComponent.html":{"url":"components/WCGridButtonEditorComponent.html","title":"component - WCGridButtonEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCGridButtonEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-grid-editor\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-grid-btn-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _buttonClass\n                            \n                            \n                                    Private\n                                _column\n                            \n                            \n                                    Private\n                                _columnIndex\n                            \n                            \n                                    Private\n                                _dataItem\n                            \n                            \n                                    Private\n                                _mainClass\n                            \n                            \n                                    Private\n                                _question\n                            \n                            \n                                    Private\n                                _rowId\n                            \n                            \n                                    Private\n                                _rowIndex\n                            \n                            \n                                    Private\n                                _value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onKOPressed\n                            \n                            \n                                onOKPressed\n                            \n                            \n                                onRendererClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClass\n                            \n                            \n                                column\n                            \n                            \n                                columnIndex\n                            \n                            \n                                dataItem\n                            \n                            \n                                mainClass\n                            \n                            \n                                question\n                            \n                            \n                                rowIndex\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onConfirmation\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elt: ElementRef, renderer: Renderer)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elt\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClass\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        column\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnIndex\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataItem\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mainClass\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:94\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rowIndex\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:102\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onCancel\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onConfirmation\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onKOPressed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonKOPressed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onOKPressed\n                            \n                            \n                        \n                    \n                \n                \n                    \nonOKPressed()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onRendererClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonRendererClick()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _buttonClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _buttonClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _column\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _column:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _columnIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _columnIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _dataItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _dataItem:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _mainClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _mainClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _question\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _question:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"n.d.\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _rowId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rowId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _rowIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _rowIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dataItem\n                    \n                \n\n                \n                    \n                        getdataItem()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:38\n                                \n                            \n\n                \n                    \n                        setdataItem(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:42\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        rowIndex\n                    \n                \n\n                \n                    \n                        getrowIndex()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:46\n                                \n                            \n\n                \n                    \n                        setrowIndex(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:50\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        columnIndex\n                    \n                \n\n                \n                    \n                        getcolumnIndex()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:54\n                                \n                            \n\n                \n                    \n                        setcolumnIndex(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:58\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        column\n                    \n                \n\n                \n                    \n                        getcolumn()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:62\n                                \n                            \n\n                \n                    \n                        setcolumn(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        rowId\n                    \n                \n\n                \n                    \n                        getrowId()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:70\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mainClass\n                    \n                \n\n                \n                    \n                        getmainClass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:74\n                                \n                            \n\n                \n                    \n                        setmainClass(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:78\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonClass\n                    \n                \n\n                \n                    \n                        getbuttonClass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:82\n                                \n                            \n\n                \n                    \n                        setbuttonClass(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:86\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        question\n                    \n                \n\n                \n                    \n                        getquestion()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:90\n                                \n                            \n\n                \n                    \n                        setquestion(question: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:94\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            question\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:98\n                                \n                            \n\n                \n                    \n                        setvalue(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts:102\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, Renderer, ElementRef } from '@angular/core';\nimport * as uuidv1_ from 'uuid/v1';\nconst uuidv1 = uuidv1_;\n\n@Component({\n  selector: 'wc-grid-editor',\n  templateUrl: './wc-grid-btn-editor.component.html'\n})\nexport class WCGridButtonEditorComponent implements OnInit {\n  \n\n\n  private _dataItem:any;\n  private _rowIndex:number;\n  private _columnIndex:number;\n  private _column:number;\n  private _mainClass:string = \"\";\n  private _buttonClass:string = \"\";\n  private _value:string;\n  private _question:string =\"n.d.\";\n  private _rowId: string;\n  \n  @Output() \n  onConfirmation:EventEmitter = new EventEmitter();\n  @Output() \n  onCancel:EventEmitter = new EventEmitter();\n\n  constructor(private elt:ElementRef, private renderer:Renderer) {\n    this._rowId = uuidv1();\n   }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n  }\n\n  get dataItem():any {\n    return this._dataItem;\n  }\n\n  @Input() set dataItem(value:any) {\n    this._dataItem = value;\n  }\n\n  get rowIndex():number {\n    return this._rowIndex;\n  }\n\n  @Input() set rowIndex(value:number) {\n    this._rowIndex = value;\n  }\n\n  get columnIndex():number {\n    return this._columnIndex;\n  }\n\n  @Input() set columnIndex(value:number) {\n    this._columnIndex = value;\n  }\n\n  get column():number {\n    return this._column;\n  }\n\n  @Input() set column(value:number) {\n    this._column = value;\n  }\n\n  get rowId():string {\n    return this._rowId;\n  }\n  \n  get mainClass():string {\n    return this._mainClass;\n  }\n\n  @Input() set mainClass(value:string) {\n    this._mainClass = value;\n  }\n\n  get buttonClass():string {\n    return this._buttonClass;\n  }\n\n  @Input() set buttonClass(value:string) {\n    this._buttonClass = value;\n  }\n\n  get question():string{\n    return this._question;\n  }\n\n  @Input() set question(question:string){\n    this._question = question;\n  }\n\n  get value():string {\n    return this._value;\n  }\n\n  @Input() set value(value:string) {\n    this._value = value;\n  }\n\n  onOKPressed():void {\n     //console.log(\">>>> onOKPressed (on component)\")\n     this.onConfirmation.emit();\n    }\n\n  onKOPressed():void {\n    //console.log(\">>>> onKOPressed (on component)\")\n    this.onCancel.emit();\n  }\n\n  onRendererClick():void {\n    alert(\"pippo clicked!\");\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n      \n  \n\n  \n    {{question}}\n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{question}}                                                          '\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCGridButtonEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCGridEditorCommandComponent.html":{"url":"components/WCGridEditorCommandComponent.html","title":"component - WCGridEditorCommandComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCGridEditorCommandComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-grid-editor-command\n            \n\n            \n                styleUrls\n                grid-editor-command-component.scss\n            \n\n\n\n            \n                templateUrl\n                ./grid-editor-command-component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _actionDisplayed\n                            \n                            \n                                    Private\n                                _disabled\n                            \n                            \n                                controlUID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCancel\n                            \n                            \n                                onCheckChange\n                            \n                            \n                                onCommandClick\n                            \n                            \n                                onConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alignMode\n                            \n                            \n                                column\n                            \n                            \n                                columnIndex\n                            \n                            \n                                commandIcon\n                            \n                            \n                                commandId\n                            \n                            \n                                confirmationTitle\n                            \n                            \n                                confirmationTitleProvider\n                            \n                            \n                                dataItem\n                            \n                            \n                                disabled\n                            \n                            \n                                hasConfirmation\n                            \n                            \n                                rowIndex\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionStatusChange\n                            \n                            \n                                commandCancel\n                            \n                            \n                                commandClick\n                            \n                            \n                                commandConfirm\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:61\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alignMode\n                    \n                    \n                        \n                            Default value: 'center'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        column\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnIndex\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        commandIcon\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        commandId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmationTitle\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        confirmationTitleProvider\n                    \n                    \n                            \n                            Type:    WCConfirmationTitleProvider\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataItem\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:130\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hasConfirmation\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rowIndex\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:50\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        actionStatusChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        commandCancel\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        commandClick\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        commandConfirm\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:54\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCancel(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCheckChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCheckChange(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCommandClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCommandClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \nonConfirm(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _actionDisplayed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _actionDisplayed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controlUID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        controlUID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:59\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n\n\n                \n                    \n                        setdisabled(disabled: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:134\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            disabled\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        enabled\n                    \n                \n\n                \n                    \n                        getenabled()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts:138\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport * as uuidv1_ from 'uuid/v1';\nconst uuidv1 = uuidv1_;\n\nexport enum WCGridEditorCommandComponentEventType {\n    Click,\n    Confirm,\n    Cancel,\n    Ask\n}\n\nexport interface WCGridEditorCommandComponentEvent {\n    id: string;\n    uid: string;\n    actionDisplay?: boolean;\n    rowData: {\n        dataItem?: any;\n        rowIndex?: number;\n        columnIndex?: number;\n        column?: number;\n        value?: any;\n    }\n}\n\nexport interface WCConfirmationTitleProvider {\n    getTitle(rowData): string;\n}\n\n@Component({\n    selector: 'wc-grid-editor-command',\n    styleUrls: [ './grid-editor-command-component.scss' ],\n    templateUrl: './grid-editor-command-component.html'\n})\nexport class WCGridEditorCommandComponent {\n\n    //@Input() disabled: boolean;\n    @Input() title:string;\n    @Input() hasConfirmation: boolean;\n    @Input() confirmationTitle: string;\n    @Input() confirmationTitleProvider: WCConfirmationTitleProvider;\n    @Input() commandIcon: string;\n    @Input() commandId: string;\n    @Input() public alignMode = 'center';\n    // row data\n    @Input() dataItem:any;\n    @Input() rowIndex:number;\n    @Input() columnIndex:number;\n    @Input() column:number;\n    @Input() value:any;\n    \n\n    @Output() commandClick: EventEmitter = new EventEmitter();\n    @Output() commandConfirm: EventEmitter = new EventEmitter();\n    @Output() commandCancel: EventEmitter = new EventEmitter();\n    @Output() actionStatusChange: EventEmitter = new EventEmitter();\n    \n\n    controlUID: string;\n    private _actionDisplayed: boolean;\n    private _disabled: boolean;\n\n    constructor() {\n        this.controlUID = 'wc-grid-editor-command-' + uuidv1();\n    }\n\n    onCheckChange(event){\n        if(this.confirmationTitleProvider){\n            this.confirmationTitle = this.confirmationTitleProvider.getTitle(this.dataItem);\n        }\n        this._actionDisplayed = event.target.checked;\n        this.actionStatusChange.emit({\n            id: this.commandId,\n            uid: this.controlUID,\n            actionDisplay: this._actionDisplayed,\n            rowData: {\n                dataItem: this.dataItem,\n                rowIndex: this.rowIndex,\n                columnIndex: this.columnIndex,\n                column: this.column,\n                value: this.value\n            }\n        })\n    }\n\n    onCommandClick(event) {\n        if (!this.disabled){\n            this.commandClick.emit({\n                id: this.commandId,\n                uid: this.controlUID,\n                rowData: {\n                    dataItem: this.dataItem,\n                    rowIndex: this.rowIndex,\n                    columnIndex: this.columnIndex,\n                    column: this.column,\n                    value: this.value\n                }\n            })\n        }\n    }\n\n    onConfirm(event){\n        this.commandConfirm.emit({\n            id: this.commandId,\n            uid: this.controlUID,\n            rowData: {\n                dataItem: this.dataItem,\n                rowIndex: this.rowIndex,\n                columnIndex: this.columnIndex,\n                column: this.column,\n                value: this.value\n            }\n        })\n    }\n\n    onCancel(event) {\n        this.commandCancel.emit({\n            id: this.commandId,\n            uid: this.controlUID,\n            rowData: {\n                dataItem: this.dataItem,\n                rowIndex: this.rowIndex,\n                columnIndex: this.columnIndex,\n                column: this.column,\n                value: this.value\n            }\n        })\n    }\n\n    @Input() get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(disabled: boolean) {\n        this._disabled = disabled;\n    }\n\n    public get enabled(): boolean {\n        return !this.disabled;\n    }\n    \n}\n\n    \n\n    \n        \n\n    \n        \n        \n            \n            \n        \n        \n            {{confirmationTitle}}\n            \n                 \n            \n            \n                \n            \n        \n    \n\n    \n        \n        \n            \n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        {{confirmationTitle}}                                                                                                                                         '\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCGridEditorCommandComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WCGridEditorCommandComponentEvent.html":{"url":"interfaces/WCGridEditorCommandComponentEvent.html","title":"interface - WCGridEditorCommandComponentEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WCGridEditorCommandComponentEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        actionDisplay\n                                \n                                \n                                        id\n                                \n                                \n                                        rowData\n                                \n                                \n                                        uid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionDisplay\n                                    \n                                \n                                \n                                    \n                                        actionDisplay:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rowData\n                                    \n                                \n                                \n                                    \n                                        rowData:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport * as uuidv1_ from 'uuid/v1';\nconst uuidv1 = uuidv1_;\n\nexport enum WCGridEditorCommandComponentEventType {\n    Click,\n    Confirm,\n    Cancel,\n    Ask\n}\n\nexport interface WCGridEditorCommandComponentEvent {\n    id: string;\n    uid: string;\n    actionDisplay?: boolean;\n    rowData: {\n        dataItem?: any;\n        rowIndex?: number;\n        columnIndex?: number;\n        column?: number;\n        value?: any;\n    }\n}\n\nexport interface WCConfirmationTitleProvider {\n    getTitle(rowData): string;\n}\n\n@Component({\n    selector: 'wc-grid-editor-command',\n    styleUrls: [ './grid-editor-command-component.scss' ],\n    templateUrl: './grid-editor-command-component.html'\n})\nexport class WCGridEditorCommandComponent {\n\n    //@Input() disabled: boolean;\n    @Input() title:string;\n    @Input() hasConfirmation: boolean;\n    @Input() confirmationTitle: string;\n    @Input() confirmationTitleProvider: WCConfirmationTitleProvider;\n    @Input() commandIcon: string;\n    @Input() commandId: string;\n    @Input() public alignMode = 'center';\n    // row data\n    @Input() dataItem:any;\n    @Input() rowIndex:number;\n    @Input() columnIndex:number;\n    @Input() column:number;\n    @Input() value:any;\n    \n\n    @Output() commandClick: EventEmitter = new EventEmitter();\n    @Output() commandConfirm: EventEmitter = new EventEmitter();\n    @Output() commandCancel: EventEmitter = new EventEmitter();\n    @Output() actionStatusChange: EventEmitter = new EventEmitter();\n    \n\n    controlUID: string;\n    private _actionDisplayed: boolean;\n    private _disabled: boolean;\n\n    constructor() {\n        this.controlUID = 'wc-grid-editor-command-' + uuidv1();\n    }\n\n    onCheckChange(event){\n        if(this.confirmationTitleProvider){\n            this.confirmationTitle = this.confirmationTitleProvider.getTitle(this.dataItem);\n        }\n        this._actionDisplayed = event.target.checked;\n        this.actionStatusChange.emit({\n            id: this.commandId,\n            uid: this.controlUID,\n            actionDisplay: this._actionDisplayed,\n            rowData: {\n                dataItem: this.dataItem,\n                rowIndex: this.rowIndex,\n                columnIndex: this.columnIndex,\n                column: this.column,\n                value: this.value\n            }\n        })\n    }\n\n    onCommandClick(event) {\n        if (!this.disabled){\n            this.commandClick.emit({\n                id: this.commandId,\n                uid: this.controlUID,\n                rowData: {\n                    dataItem: this.dataItem,\n                    rowIndex: this.rowIndex,\n                    columnIndex: this.columnIndex,\n                    column: this.column,\n                    value: this.value\n                }\n            })\n        }\n    }\n\n    onConfirm(event){\n        this.commandConfirm.emit({\n            id: this.commandId,\n            uid: this.controlUID,\n            rowData: {\n                dataItem: this.dataItem,\n                rowIndex: this.rowIndex,\n                columnIndex: this.columnIndex,\n                column: this.column,\n                value: this.value\n            }\n        })\n    }\n\n    onCancel(event) {\n        this.commandCancel.emit({\n            id: this.commandId,\n            uid: this.controlUID,\n            rowData: {\n                dataItem: this.dataItem,\n                rowIndex: this.rowIndex,\n                columnIndex: this.columnIndex,\n                column: this.column,\n                value: this.value\n            }\n        })\n    }\n\n    @Input() get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(disabled: boolean) {\n        this._disabled = disabled;\n    }\n\n    public get enabled(): boolean {\n        return !this.disabled;\n    }\n    \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WCGridEditorCommandConfig.html":{"url":"interfaces/WCGridEditorCommandConfig.html","title":"interface - WCGridEditorCommandConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WCGridEditorCommandConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commandIcon\n                                \n                                \n                                        commandId\n                                \n                                \n                                            Optional\n                                        confirmationTitle\n                                \n                                \n                                            Optional\n                                        confirmationTitleProvider\n                                \n                                \n                                            Optional\n                                        hasConfirmation\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commandIcon\n                                    \n                                \n                                \n                                    \n                                        commandIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commandId\n                                    \n                                \n                                \n                                    \n                                        commandId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmationTitle\n                                    \n                                \n                                \n                                    \n                                        confirmationTitle:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmationTitleProvider\n                                    \n                                \n                                \n                                    \n                                        confirmationTitleProvider:     WCConfirmationTitleProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WCConfirmationTitleProvider\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasConfirmation\n                                    \n                                \n                                \n                                    \n                                        hasConfirmation:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { WCGridEditorCommandComponentEvent, WCConfirmationTitleProvider } from '../grid-editor-command/grid-editor-command-component';\n\n//export { GridEditorCommandComponentEvent, ConfirmationTitleProvider } from '../grid-editor-command/grid-editor-command-component';\n\nexport interface WCGridEditorCommandConfig {\n    commandId: string;\n    commandIcon: string;\n    title?: string;\n    hasConfirmation?: boolean;\n    confirmationTitle?: string;\n    confirmationTitleProvider?:WCConfirmationTitleProvider;\n}\n\nexport interface WCGridEditorCommandsConfig extends Array{}\n\n@Component({\n    selector: 'wc-grid-editor-commands-group',\n    styleUrls: [ './grid-editor-commands-group-component.scss' ],\n    templateUrl: './grid-editor-commands-group-component.html'\n})\nexport class WCGridEditorCommandsGroupComponent {\n\n    @Input() commands: WCGridEditorCommandsConfig;\n    // row data\n    @Input() dataItem:any;\n    @Input() rowIndex:number;\n    @Input() columnIndex:number;\n    @Input() column:number;\n    @Input() value:any;\n\n    @Input() public contentStyle: string;\n    @Input() public alignMode = 'center';\n\n    @Output() commandClick:EventEmitter = new EventEmitter();\n    @Output() commandConfirm:EventEmitter = new EventEmitter();\n    @Output() commandCancel:EventEmitter = new EventEmitter();\n    @Output() actionStatusChange:EventEmitter = new EventEmitter();\n\n    constructor() {}\n\n    onCommandClick(event: WCGridEditorCommandComponentEvent) {\n        this.commandClick.emit(event);\n    }\n\n    onCommandConfirm(event: WCGridEditorCommandComponentEvent) {\n        this.commandConfirm.emit(event);\n    }\n\n    onCommandCancel(event: WCGridEditorCommandComponentEvent) {\n        this.commandCancel.emit(event);\n    }\n\n    onActionStatusChange(event: WCGridEditorCommandComponentEvent) {\n        this.actionStatusChange.emit(event);\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WCGridEditorCommandsConfig.html":{"url":"interfaces/WCGridEditorCommandsConfig.html","title":"interface - WCGridEditorCommandsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WCGridEditorCommandsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Array\n            \n\n\n\n\n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { WCGridEditorCommandComponentEvent, WCConfirmationTitleProvider } from '../grid-editor-command/grid-editor-command-component';\n\n//export { GridEditorCommandComponentEvent, ConfirmationTitleProvider } from '../grid-editor-command/grid-editor-command-component';\n\nexport interface WCGridEditorCommandConfig {\n    commandId: string;\n    commandIcon: string;\n    title?: string;\n    hasConfirmation?: boolean;\n    confirmationTitle?: string;\n    confirmationTitleProvider?:WCConfirmationTitleProvider;\n}\n\nexport interface WCGridEditorCommandsConfig extends Array{}\n\n@Component({\n    selector: 'wc-grid-editor-commands-group',\n    styleUrls: [ './grid-editor-commands-group-component.scss' ],\n    templateUrl: './grid-editor-commands-group-component.html'\n})\nexport class WCGridEditorCommandsGroupComponent {\n\n    @Input() commands: WCGridEditorCommandsConfig;\n    // row data\n    @Input() dataItem:any;\n    @Input() rowIndex:number;\n    @Input() columnIndex:number;\n    @Input() column:number;\n    @Input() value:any;\n\n    @Input() public contentStyle: string;\n    @Input() public alignMode = 'center';\n\n    @Output() commandClick:EventEmitter = new EventEmitter();\n    @Output() commandConfirm:EventEmitter = new EventEmitter();\n    @Output() commandCancel:EventEmitter = new EventEmitter();\n    @Output() actionStatusChange:EventEmitter = new EventEmitter();\n\n    constructor() {}\n\n    onCommandClick(event: WCGridEditorCommandComponentEvent) {\n        this.commandClick.emit(event);\n    }\n\n    onCommandConfirm(event: WCGridEditorCommandComponentEvent) {\n        this.commandConfirm.emit(event);\n    }\n\n    onCommandCancel(event: WCGridEditorCommandComponentEvent) {\n        this.commandCancel.emit(event);\n    }\n\n    onActionStatusChange(event: WCGridEditorCommandComponentEvent) {\n        this.actionStatusChange.emit(event);\n    }\n\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCGridEditorCommandsGroupComponent.html":{"url":"components/WCGridEditorCommandsGroupComponent.html","title":"component - WCGridEditorCommandsGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCGridEditorCommandsGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-grid-editor-commands-group\n            \n\n            \n                styleUrls\n                grid-editor-commands-group-component.scss\n            \n\n\n\n            \n                templateUrl\n                ./grid-editor-commands-group-component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onActionStatusChange\n                            \n                            \n                                onCommandCancel\n                            \n                            \n                                onCommandClick\n                            \n                            \n                                onCommandConfirm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                alignMode\n                            \n                            \n                                column\n                            \n                            \n                                columnIndex\n                            \n                            \n                                commands\n                            \n                            \n                                contentStyle\n                            \n                            \n                                dataItem\n                            \n                            \n                                rowIndex\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionStatusChange\n                            \n                            \n                                commandCancel\n                            \n                            \n                                commandClick\n                            \n                            \n                                commandConfirm\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:38\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        alignMode\n                    \n                    \n                        \n                            Default value: 'center'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        column\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnIndex\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        commands\n                    \n                    \n                            \n                            Type:    WCGridEditorCommandsConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        contentStyle\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataItem\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rowIndex\n                    \n                    \n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        actionStatusChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        commandCancel\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        commandClick\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        commandConfirm\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onActionStatusChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonActionStatusChange(event: WCGridEditorCommandComponentEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    WCGridEditorCommandComponentEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCommandCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCommandCancel(event: WCGridEditorCommandComponentEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    WCGridEditorCommandComponentEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCommandClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCommandClick(event: WCGridEditorCommandComponentEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    WCGridEditorCommandComponentEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onCommandConfirm\n                            \n                            \n                        \n                    \n                \n                \n                    \nonCommandConfirm(event: WCGridEditorCommandComponentEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    WCGridEditorCommandComponentEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { WCGridEditorCommandComponentEvent, WCConfirmationTitleProvider } from '../grid-editor-command/grid-editor-command-component';\n\n//export { GridEditorCommandComponentEvent, ConfirmationTitleProvider } from '../grid-editor-command/grid-editor-command-component';\n\nexport interface WCGridEditorCommandConfig {\n    commandId: string;\n    commandIcon: string;\n    title?: string;\n    hasConfirmation?: boolean;\n    confirmationTitle?: string;\n    confirmationTitleProvider?:WCConfirmationTitleProvider;\n}\n\nexport interface WCGridEditorCommandsConfig extends Array{}\n\n@Component({\n    selector: 'wc-grid-editor-commands-group',\n    styleUrls: [ './grid-editor-commands-group-component.scss' ],\n    templateUrl: './grid-editor-commands-group-component.html'\n})\nexport class WCGridEditorCommandsGroupComponent {\n\n    @Input() commands: WCGridEditorCommandsConfig;\n    // row data\n    @Input() dataItem:any;\n    @Input() rowIndex:number;\n    @Input() columnIndex:number;\n    @Input() column:number;\n    @Input() value:any;\n\n    @Input() public contentStyle: string;\n    @Input() public alignMode = 'center';\n\n    @Output() commandClick:EventEmitter = new EventEmitter();\n    @Output() commandConfirm:EventEmitter = new EventEmitter();\n    @Output() commandCancel:EventEmitter = new EventEmitter();\n    @Output() actionStatusChange:EventEmitter = new EventEmitter();\n\n    constructor() {}\n\n    onCommandClick(event: WCGridEditorCommandComponentEvent) {\n        this.commandClick.emit(event);\n    }\n\n    onCommandConfirm(event: WCGridEditorCommandComponentEvent) {\n        this.commandConfirm.emit(event);\n    }\n\n    onCommandCancel(event: WCGridEditorCommandComponentEvent) {\n        this.commandCancel.emit(event);\n    }\n\n    onActionStatusChange(event: WCGridEditorCommandComponentEvent) {\n        this.actionStatusChange.emit(event);\n    }\n\n\n}\n\n    \n\n    \n        \n\n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCGridEditorCommandsGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCLoadingOverlayComponent.html":{"url":"components/WCLoadingOverlayComponent.html","title":"component - WCLoadingOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCLoadingOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/grid/loading-overlay/loading-overlay-component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-loading-overlay\n            \n\n            \n                styleUrls\n                loading-overlay-component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading-overlay-component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                faCircleNotch\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/grid/loading-overlay/loading-overlay-component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        visible\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/grid/loading-overlay/loading-overlay-component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            faCircleNotch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faCircleNotch:     \n\n                    \n                \n                    \n                        \n                            Default value : faCircleNotch\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/grid/loading-overlay/loading-overlay-component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n    selector: 'wc-loading-overlay',\n    styleUrls: [ './loading-overlay-component.scss' ],\n    templateUrl: './loading-overlay-component.html'\n})\nexport class WCLoadingOverlayComponent {\n\n    faCircleNotch = faCircleNotch;\n\n    @Input() public visible: boolean;\n\n    constructor() {}\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCLoadingOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCPanelComponent.html":{"url":"components/WCPanelComponent.html","title":"component - WCPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/containers/panel/WCPanelComponent.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-panel\n            \n\n            \n                styleUrls\n                wc-panel.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wc-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _class\n                            \n                            \n                                    Private\n                                _title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/panel/WCPanelComponent.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:18\n                                \n                            \n\n                \n                    \n                        settitle(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        class\n                    \n                \n\n                \n                    \n                        getclass()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:26\n                                \n                            \n\n                \n                    \n                        setclass(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/containers/panel/WCPanelComponent.ts:30\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'wc-panel',\n  templateUrl: './wc-panel.component.html',\n  styleUrls: [ './wc-panel.component.css' ]\n})\nexport class WCPanelComponent implements OnInit {\n  \n  private _title:string;\n  private _class:string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get title():any {\n    return this._title;\n  }\n\n  @Input() set title(value:any) {\n    this._title = value;\n  }\n\n  get class():any {\n    return this._class;\n  }\n\n  @Input() set class(value:any) {\n    this._class = value;\n  }\n\n}\n\n    \n\n    \n        \n  {{title}}\n  \n      \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{title}}          '\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCPropertyEditorComponent.html":{"url":"components/WCPropertyEditorComponent.html","title":"component - WCPropertyEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCPropertyEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/editors/property-editor/wc-property-editor.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-property-editor\n            \n\n            \n                styleUrls\n                wc-property-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wc-property-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _model\n                            \n                            \n                                    Private\n                                _originalModel\n                            \n                            \n                                checkType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getCurrentValueFor\n                            \n                            \n                                    Private\n                                getModelItemFor\n                            \n                            \n                                    Private\n                                getOriginalValueFor\n                            \n                            \n                                    Public\n                                getPropertyItem\n                            \n                            \n                                    Private\n                                getValueFor\n                            \n                            \n                                    Private\n                                handleLinkedItems\n                            \n                            \n                                    Private\n                                markPropertyChanged\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                onMiniButtonClick\n                            \n                            \n                                onModelChanged\n                            \n                            \n                                onPropertyChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                miniButtonClick\n                            \n                            \n                                propertyChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:54\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:85\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        miniButtonClick\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        propertyChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:53\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getCurrentValueFor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCurrentValueFor(propertyName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getModelItemFor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getModelItemFor(propertyName: string, model: WCPropertyEditorModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        model\n                                                        \n                                                                    WCPropertyEditorModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     WCPropertyEditorItem\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getOriginalValueFor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOriginalValueFor(propertyName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPropertyItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPropertyItem(propertyName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:135\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     WCPropertyEditorItem\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getValueFor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getValueFor(propertyName: string, model: WCPropertyEditorModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        model\n                                                        \n                                                                    WCPropertyEditorModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleLinkedItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleLinkedItems(item: WCPropertyEditorItem)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Enable/disable linked items to a boolean switch field\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    WCPropertyEditorItem\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            markPropertyChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        markPropertyChanged(propertyName: string, changed: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:119\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        changed\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onMiniButtonClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonMiniButtonClick(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:126\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onModelChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \nonModelChanged(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onPropertyChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonPropertyChange(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _model:     WCPropertyEditorModel\n\n                    \n                \n                    \n                        \n                            Type :     WCPropertyEditorModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _originalModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _originalModel:     WCPropertyEditorModel\n\n                    \n                \n                    \n                        \n                            Type :     WCPropertyEditorModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        checkType:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : WCPropertyEditorItemType\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n\n                \n                    \n                        setmodel(model: )\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/editors/property-editor/wc-property-editor.component.ts:89\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            model\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, AfterContentInit, Input, Output, EventEmitter  } from '@angular/core';\n\n\nexport enum WCPropertyEditorItemType {\n  String = 'string',\n  Boolean = 'boolean',\n  List = 'list',\n  Text = 'text'\n}\n\nexport interface  WCPropertyEditorItem {\n  name: string;\n  description?: string;\n  field: string;\n  type: WCPropertyEditorItemType;\n  value?: any;\n  disabled?: boolean;\n  htmlInputType?: string;\n  valueChanged?: boolean;\n  listValues?: string[];\n  miniCommand?: boolean;\n  miniCommandCaption?: string;\n  placeholder?: string;\n  elementRef?: string;\n  linkTo?: string[];\n}\n\nexport interface WCPropertyEditorModel {\n  items: WCPropertyEditorItem[];\n}\n\nexport interface PropertyChangeEvent {\n  item: WCPropertyEditorItem;\n  newValue: any;\n  originalValue: any;\n}\n\nexport interface MinitButtonClickEvent {\n  item: WCPropertyEditorItem;\n}\n\n @Component({\n   selector: 'wc-property-editor',\n   templateUrl: './wc-property-editor.component.html',\n   styleUrls: [ './wc-property-editor.component.scss' ]\n })\n export class WCPropertyEditorComponent implements AfterContentInit {\n\n  private _model: WCPropertyEditorModel;\n  private _originalModel: WCPropertyEditorModel;\n  checkType: any = WCPropertyEditorItemType;\n\n  @Output() propertyChange: EventEmitter = new EventEmitter();\n  @Output() miniButtonClick: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  ngAfterContentInit() {\n    console.log('WCPropertyEditorComponent: ', this.model);\n  }\n\n  onModelChanged(event: any) {\n  }\n\n  onPropertyChange(event: any) {\n    const propertyChanged = event.srcElement.getAttribute('itemId');\n    const originalValue = this.getOriginalValueFor(propertyChanged);\n    const currentValue = this.getCurrentValueFor(propertyChanged);\n    if (originalValue && (originalValue === currentValue)) {\n      this.markPropertyChanged(propertyChanged, false);\n    } else {\n      this.markPropertyChanged(propertyChanged, true);\n    }\n    const item: WCPropertyEditorItem = this.getModelItemFor(propertyChanged, this._model);\n    if ( item ) {\n      // handle linked items if it's a boolean swicth and has a linked items\n      if ((item.type === WCPropertyEditorItemType.Boolean) && (item.linkTo)){\n        this.handleLinkedItems(item);\n      }\n      this.propertyChange.emit({ item: item, newValue: currentValue, originalValue: originalValue });\n    }\n  }\n\n  @Input()\n  public get model() {\n    return this._model;\n  }\n\n  public set model(model: WCPropertyEditorModel) {\n    this._model = model;\n    this._originalModel =  JSON.parse(JSON.stringify(model));\n  }\n\n  private getOriginalValueFor(propertyName: string):any {\n    return this.getValueFor(propertyName, this._originalModel);\n  }\n\n  private getCurrentValueFor(propertyName: string): any {\n    return this.getValueFor(propertyName, this._model);\n  }\n\n  private getValueFor(propertyName: string, model: WCPropertyEditorModel): any {\n    const item =  this.getModelItemFor(propertyName, model);\n    if (item) {\n      return item.value;\n    } else {\n      return null;\n    }\n  }\n\n  private getModelItemFor(propertyName: string, model: WCPropertyEditorModel): WCPropertyEditorItem {\n    const item =  model.items.find(x => x.field === propertyName);\n    if (item) {\n      return item;\n    } else {\n      return null;\n    }\n  }\n  private markPropertyChanged(propertyName: string, changed: boolean) {\n    const item =  this._model.items.find(x => x.field === propertyName);\n    if (item) {\n      item.valueChanged = changed;\n    }\n  }\n\n  onMiniButtonClick(event: any) {\n    const miniButtonClicked = event.srcElement.getAttribute('miniButtonItemId');\n    const item: WCPropertyEditorItem = this.getModelItemFor(miniButtonClicked, this._model);\n    if ( item ) {\n      this.miniButtonClick.emit({ item: item });\n    }\n\n  }\n\n  public getPropertyItem(propertyName: string): WCPropertyEditorItem {\n    return this.getModelItemFor(propertyName, this._model);\n  }\n\n  /**\n   * Enable/disable linked items to a boolean switch field\n   * @param item\n   */\n  private handleLinkedItems(item: WCPropertyEditorItem): void {\n    const linkedItems: string[] = item.linkTo;\n    for (let i = 0; i \n    \n\n    \n              \n\n        \n                \n                        {{item.name}}\n                        \n                        \n                        \n\n\n                        \n                                \n                                \n                        \n\n\n                        \n                                {{listValue}}\n                        \n                \n                {{item.miniCommandCaption}}\n        \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                      {{item.name}}                                                                                                                                                                                                                                                {{listValue}}                                                        {{item.miniCommandCaption}}        '\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCPropertyEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WCPropertyEditorItem.html":{"url":"interfaces/WCPropertyEditorItem.html","title":"interface - WCPropertyEditorItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WCPropertyEditorItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/editors/property-editor/wc-property-editor.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        description\n                                \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        elementRef\n                                \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        htmlInputType\n                                \n                                \n                                            Optional\n                                        linkTo\n                                \n                                \n                                            Optional\n                                        listValues\n                                \n                                \n                                            Optional\n                                        miniCommand\n                                \n                                \n                                            Optional\n                                        miniCommandCaption\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                        type\n                                \n                                \n                                            Optional\n                                        value\n                                \n                                \n                                            Optional\n                                        valueChanged\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elementRef\n                                    \n                                \n                                \n                                    \n                                        elementRef:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        htmlInputType\n                                    \n                                \n                                \n                                    \n                                        htmlInputType:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linkTo\n                                    \n                                \n                                \n                                    \n                                        linkTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listValues\n                                    \n                                \n                                \n                                    \n                                        listValues:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        miniCommand\n                                    \n                                \n                                \n                                    \n                                        miniCommand:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        miniCommandCaption\n                                    \n                                \n                                \n                                    \n                                        miniCommandCaption:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     WCPropertyEditorItemType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WCPropertyEditorItemType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueChanged\n                                    \n                                \n                                \n                                    \n                                        valueChanged:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, AfterContentInit, Input, Output, EventEmitter  } from '@angular/core';\n\n\nexport enum WCPropertyEditorItemType {\n  String = 'string',\n  Boolean = 'boolean',\n  List = 'list',\n  Text = 'text'\n}\n\nexport interface  WCPropertyEditorItem {\n  name: string;\n  description?: string;\n  field: string;\n  type: WCPropertyEditorItemType;\n  value?: any;\n  disabled?: boolean;\n  htmlInputType?: string;\n  valueChanged?: boolean;\n  listValues?: string[];\n  miniCommand?: boolean;\n  miniCommandCaption?: string;\n  placeholder?: string;\n  elementRef?: string;\n  linkTo?: string[];\n}\n\nexport interface WCPropertyEditorModel {\n  items: WCPropertyEditorItem[];\n}\n\nexport interface PropertyChangeEvent {\n  item: WCPropertyEditorItem;\n  newValue: any;\n  originalValue: any;\n}\n\nexport interface MinitButtonClickEvent {\n  item: WCPropertyEditorItem;\n}\n\n @Component({\n   selector: 'wc-property-editor',\n   templateUrl: './wc-property-editor.component.html',\n   styleUrls: [ './wc-property-editor.component.scss' ]\n })\n export class WCPropertyEditorComponent implements AfterContentInit {\n\n  private _model: WCPropertyEditorModel;\n  private _originalModel: WCPropertyEditorModel;\n  checkType: any = WCPropertyEditorItemType;\n\n  @Output() propertyChange: EventEmitter = new EventEmitter();\n  @Output() miniButtonClick: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  ngAfterContentInit() {\n    console.log('WCPropertyEditorComponent: ', this.model);\n  }\n\n  onModelChanged(event: any) {\n  }\n\n  onPropertyChange(event: any) {\n    const propertyChanged = event.srcElement.getAttribute('itemId');\n    const originalValue = this.getOriginalValueFor(propertyChanged);\n    const currentValue = this.getCurrentValueFor(propertyChanged);\n    if (originalValue && (originalValue === currentValue)) {\n      this.markPropertyChanged(propertyChanged, false);\n    } else {\n      this.markPropertyChanged(propertyChanged, true);\n    }\n    const item: WCPropertyEditorItem = this.getModelItemFor(propertyChanged, this._model);\n    if ( item ) {\n      // handle linked items if it's a boolean swicth and has a linked items\n      if ((item.type === WCPropertyEditorItemType.Boolean) && (item.linkTo)){\n        this.handleLinkedItems(item);\n      }\n      this.propertyChange.emit({ item: item, newValue: currentValue, originalValue: originalValue });\n    }\n  }\n\n  @Input()\n  public get model() {\n    return this._model;\n  }\n\n  public set model(model: WCPropertyEditorModel) {\n    this._model = model;\n    this._originalModel =  JSON.parse(JSON.stringify(model));\n  }\n\n  private getOriginalValueFor(propertyName: string):any {\n    return this.getValueFor(propertyName, this._originalModel);\n  }\n\n  private getCurrentValueFor(propertyName: string): any {\n    return this.getValueFor(propertyName, this._model);\n  }\n\n  private getValueFor(propertyName: string, model: WCPropertyEditorModel): any {\n    const item =  this.getModelItemFor(propertyName, model);\n    if (item) {\n      return item.value;\n    } else {\n      return null;\n    }\n  }\n\n  private getModelItemFor(propertyName: string, model: WCPropertyEditorModel): WCPropertyEditorItem {\n    const item =  model.items.find(x => x.field === propertyName);\n    if (item) {\n      return item;\n    } else {\n      return null;\n    }\n  }\n  private markPropertyChanged(propertyName: string, changed: boolean) {\n    const item =  this._model.items.find(x => x.field === propertyName);\n    if (item) {\n      item.valueChanged = changed;\n    }\n  }\n\n  onMiniButtonClick(event: any) {\n    const miniButtonClicked = event.srcElement.getAttribute('miniButtonItemId');\n    const item: WCPropertyEditorItem = this.getModelItemFor(miniButtonClicked, this._model);\n    if ( item ) {\n      this.miniButtonClick.emit({ item: item });\n    }\n\n  }\n\n  public getPropertyItem(propertyName: string): WCPropertyEditorItem {\n    return this.getModelItemFor(propertyName, this._model);\n  }\n\n  /**\n   * Enable/disable linked items to a boolean switch field\n   * @param item\n   */\n  private handleLinkedItems(item: WCPropertyEditorItem): void {\n    const linkedItems: string[] = item.linkTo;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WCPropertyEditorModel.html":{"url":"interfaces/WCPropertyEditorModel.html","title":"interface - WCPropertyEditorModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WCPropertyEditorModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/components/editors/property-editor/wc-property-editor.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     WCPropertyEditorItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WCPropertyEditorItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, AfterContentInit, Input, Output, EventEmitter  } from '@angular/core';\n\n\nexport enum WCPropertyEditorItemType {\n  String = 'string',\n  Boolean = 'boolean',\n  List = 'list',\n  Text = 'text'\n}\n\nexport interface  WCPropertyEditorItem {\n  name: string;\n  description?: string;\n  field: string;\n  type: WCPropertyEditorItemType;\n  value?: any;\n  disabled?: boolean;\n  htmlInputType?: string;\n  valueChanged?: boolean;\n  listValues?: string[];\n  miniCommand?: boolean;\n  miniCommandCaption?: string;\n  placeholder?: string;\n  elementRef?: string;\n  linkTo?: string[];\n}\n\nexport interface WCPropertyEditorModel {\n  items: WCPropertyEditorItem[];\n}\n\nexport interface PropertyChangeEvent {\n  item: WCPropertyEditorItem;\n  newValue: any;\n  originalValue: any;\n}\n\nexport interface MinitButtonClickEvent {\n  item: WCPropertyEditorItem;\n}\n\n @Component({\n   selector: 'wc-property-editor',\n   templateUrl: './wc-property-editor.component.html',\n   styleUrls: [ './wc-property-editor.component.scss' ]\n })\n export class WCPropertyEditorComponent implements AfterContentInit {\n\n  private _model: WCPropertyEditorModel;\n  private _originalModel: WCPropertyEditorModel;\n  checkType: any = WCPropertyEditorItemType;\n\n  @Output() propertyChange: EventEmitter = new EventEmitter();\n  @Output() miniButtonClick: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  ngAfterContentInit() {\n    console.log('WCPropertyEditorComponent: ', this.model);\n  }\n\n  onModelChanged(event: any) {\n  }\n\n  onPropertyChange(event: any) {\n    const propertyChanged = event.srcElement.getAttribute('itemId');\n    const originalValue = this.getOriginalValueFor(propertyChanged);\n    const currentValue = this.getCurrentValueFor(propertyChanged);\n    if (originalValue && (originalValue === currentValue)) {\n      this.markPropertyChanged(propertyChanged, false);\n    } else {\n      this.markPropertyChanged(propertyChanged, true);\n    }\n    const item: WCPropertyEditorItem = this.getModelItemFor(propertyChanged, this._model);\n    if ( item ) {\n      // handle linked items if it's a boolean swicth and has a linked items\n      if ((item.type === WCPropertyEditorItemType.Boolean) && (item.linkTo)){\n        this.handleLinkedItems(item);\n      }\n      this.propertyChange.emit({ item: item, newValue: currentValue, originalValue: originalValue });\n    }\n  }\n\n  @Input()\n  public get model() {\n    return this._model;\n  }\n\n  public set model(model: WCPropertyEditorModel) {\n    this._model = model;\n    this._originalModel =  JSON.parse(JSON.stringify(model));\n  }\n\n  private getOriginalValueFor(propertyName: string):any {\n    return this.getValueFor(propertyName, this._originalModel);\n  }\n\n  private getCurrentValueFor(propertyName: string): any {\n    return this.getValueFor(propertyName, this._model);\n  }\n\n  private getValueFor(propertyName: string, model: WCPropertyEditorModel): any {\n    const item =  this.getModelItemFor(propertyName, model);\n    if (item) {\n      return item.value;\n    } else {\n      return null;\n    }\n  }\n\n  private getModelItemFor(propertyName: string, model: WCPropertyEditorModel): WCPropertyEditorItem {\n    const item =  model.items.find(x => x.field === propertyName);\n    if (item) {\n      return item;\n    } else {\n      return null;\n    }\n  }\n  private markPropertyChanged(propertyName: string, changed: boolean) {\n    const item =  this._model.items.find(x => x.field === propertyName);\n    if (item) {\n      item.valueChanged = changed;\n    }\n  }\n\n  onMiniButtonClick(event: any) {\n    const miniButtonClicked = event.srcElement.getAttribute('miniButtonItemId');\n    const item: WCPropertyEditorItem = this.getModelItemFor(miniButtonClicked, this._model);\n    if ( item ) {\n      this.miniButtonClick.emit({ item: item });\n    }\n\n  }\n\n  public getPropertyItem(propertyName: string): WCPropertyEditorItem {\n    return this.getModelItemFor(propertyName, this._model);\n  }\n\n  /**\n   * Enable/disable linked items to a boolean switch field\n   * @param item\n   */\n  private handleLinkedItems(item: WCPropertyEditorItem): void {\n    const linkedItems: string[] = item.linkTo;\n    for (let i = 0; i \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCSlidePanelComponent.html":{"url":"components/WCSlidePanelComponent.html","title":"component - WCSlidePanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCSlidePanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/containers/slide-panel/slide-panel-component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-slide-panel\n            \n\n            \n                styleUrls\n                slide-panel-component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slide-panel-component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                slideDownContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer2: Renderer2, element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/slide-panel/slide-panel-component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer2\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/containers/slide-panel/slide-panel-component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        open\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/containers/slide-panel/slide-panel-component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/slide-panel/slide-panel-component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(show: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/slide-panel/slide-panel-component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        show\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Show/Hide the new Slide down panel\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/slide-panel/slide-panel-component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slideDownContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        slideDownContainer:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/slide-panel/slide-panel-component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n\n                \n                    \n                        getisOpen()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/containers/slide-panel/slide-panel-component.ts:22\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ElementRef, Renderer2, ViewChild, EventEmitter,Output } from '@angular/core';\n\n @Component({\n   selector: 'wc-slide-panel',\n   templateUrl: './slide-panel-component.html',\n   styleUrls: [ './slide-panel-component.scss' ]\n })\n export class WCSlidePanelComponent implements OnInit {\n\n   @ViewChild('slideDownContainer') slideDownContainer: ElementRef;\n\n    @Output() close: EventEmitter = new EventEmitter();\n    @Output() open: EventEmitter = new EventEmitter();\n\n   constructor(private renderer2: Renderer2, \n    private element: ElementRef) { }\n \n   ngOnInit() {\n   }\n\n   public get isOpen(): boolean {\n        return !this.slideDownContainer.nativeElement.classList.contains('closed'); \n   }\n\n   public toggle(): void {\n    this.show(!this.isOpen);\n   }\n\n    /**\n     *\n     * @param show Show/Hide the new Slide down panel\n     */\n    public show(show: boolean): void {\n        if (show) {\n            this.renderer2.removeClass(this.slideDownContainer.nativeElement, 'closed');\n            this.open.emit(this);\n        } else {\n            this.renderer2.addClass(this.slideDownContainer.nativeElement, 'closed');\n            this.close.emit(this);\n        }\n    }\n\n }\n \n    \n\n    \n        \n\n        \n    \n            \n                    \n            \n        \n\n        \n            Do Upload?\n            \n                \n                    \n                \n            \n            \n                \n                    \n                \n            \n        \n-->\n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Do Upload?                                                                                                                                                                -->    '\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCSlidePanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCSwitchButton.html":{"url":"components/WCSwitchButton.html","title":"component - WCSwitchButton","body":"\n                   \n\n\n\n\n\n  Components\n  WCSwitchButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/commons/SwitchButton/wc-switch-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-switch-button\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-switch-button.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _checked\n                            \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _checked\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _checked:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n\n                \n                    \n                        gettitle()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:19\n                                \n                            \n\n                \n                    \n                        settitle(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:27\n                                \n                            \n\n                \n                    \n                        setid(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n\n                \n                    \n                        getchecked()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:35\n                                \n                            \n\n                \n                    \n                        setchecked(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchButton/wc-switch-button.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'wc-switch-button',\n  templateUrl: './wc-switch-button.component.html',\n  styles: []\n})\nexport class WCSwitchButton implements OnInit {\n  \n  private _checked:boolean=false;\n  private _id:string;\n  private _title:string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  get title():string {\n    return this._title;\n  }\n\n  @Input() set title(value:string) {\n    this._title = value;\n  }\n\n  get id():string {\n    return this._id;\n  }\n\n  @Input() set id(value:string) {\n    this._id = value;\n  }\n\n  get checked():boolean {\n    return this._checked;\n  }\n\n  @Input() set checked(value:boolean) {\n    this._checked = value;\n  }\n\n\n}\n\n    \n\n    \n        {{title}}\n\n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}        '\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCSwitchButton'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCSwitchControl.html":{"url":"components/WCSwitchControl.html","title":"component - WCSwitchControl","body":"\n                   \n\n\n\n\n\n  Components\n  WCSwitchControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/commons/SwitchControl/wc-switch-control.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            WC_SWITCH_CONTROL_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                wc-switch-control\n            \n\n            \n                styleUrls\n                wc-switch-control.scss\n            \n\n\n\n            \n                templateUrl\n                ./wc-switch-control.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _id\n                            \n                            \n                                    Private\n                                _value\n                            \n                            \n                                    Private\n                                onChangeCallback\n                            \n                            \n                                    Private\n                                onTouchedCallback\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                onModelChanged\n                            \n                            \n                                onPropertyChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                propertyChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:35\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        propertyChange\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:28\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onModelChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \nonModelChanged(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onPropertyChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonPropertyChange(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched(fn: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _value:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onChangeCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onChangeCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onTouchedCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onTouchedCallback:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                    \n                        \n                            Default value : noop\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:34\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:54\n                                \n                            \n\n                \n                    \n                        setvalue(v: any)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:59\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            v\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/components/commons/SwitchControl/wc-switch-control.ts:66\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, AfterContentInit, Input, Output, EventEmitter, forwardRef  } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as uuidv1_ from 'uuid/v1';\nconst uuidv1 = uuidv1_;\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\nconst noop = () => {\n};\n\nexport const WC_SWITCH_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => WCSwitchControl),\n    multi: true\n};\n\n\n@Component({\n    selector: 'wc-switch-control',\n    templateUrl: './wc-switch-control.html',\n    styleUrls: [ './wc-switch-control.scss' ],\n    providers: [WC_SWITCH_CONTROL_VALUE_ACCESSOR]\n  })\nexport class WCSwitchControl implements AfterContentInit {\n    \n    private _value : boolean = false;\n    @Output() change: EventEmitter = new EventEmitter();\n    @Output() propertyChange: EventEmitter = new EventEmitter();\n\n    private _id:string;\n\n    //Placeholders for the callbacks which are later provided\n    //by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n\n    constructor(){\n        this._id = \"wc-switch-\" + uuidv1();\n    }\n\n    ngAfterContentInit(){\n      console.log(\"WCSwitchControl\");\n    }\n\n    onModelChanged(event:any):void {\n        this.change.emit(event);\n    }\n\n    onPropertyChange(event:any):void {\n        this.propertyChange.emit(event);\n    }\n\n      //get accessor\n    get value(): any {\n        return this._value;\n    };\n\n    //set accessor including call the onchange callback\n    set value(v: any) {\n        if (v !== this._value) {\n            this._value = v;\n            this.onChangeCallback(v);\n        }\n    }\n\n    get id():string {\n        return this._id;\n    }\n\n    //From ControlValueAccessor interface\n    writeValue(value: any) {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n\n    //From ControlValueAccessor interface\n    registerOnChange(fn: any) {\n        this.onChangeCallback = fn;\n    }\n\n    //From ControlValueAccessor interface\n    registerOnTouched(fn: any) {\n        this.onTouchedCallback = fn;\n    }\n\n} \n    \n\n    \n        \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCSwitchControl'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCTabItemComponent.html":{"url":"components/WCTabItemComponent.html","title":"component - WCTabItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCTabItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/containers/tabs/wc-tab-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                wc-tab-item\n            \n\n\n\n\n            \n                templateUrl\n                ./wc-tab-item.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tabId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNativeElement\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataId\n                            \n                            \n                                icon\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/tabs/wc-tab-item.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataId\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: \"\"\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/containers/tabs/wc-tab-item.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: \"assets/img/icons.svg#ico-platform\"\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/containers/tabs/wc-tab-item.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                        \n                            Default value: \"Tab Title\"\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/components/containers/tabs/wc-tab-item.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNativeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNativeElement()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/tabs/wc-tab-item.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/tabs/wc-tab-item.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tabId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/tabs/wc-tab-item.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ElementRef } from '@angular/core';\n\n @Component({\n   selector: 'wc-tab-item',\n   templateUrl: './wc-tab-item.component.html',\n   styles: [\n   ],\n   host: {\n    'class': \"tab\",\n    '[attr.id]': 'tabId'\n  }\n\n })\n export class WCTabItemComponent implements OnInit {\n\n  public tabId:string = \"\"\n  @Input() title:string=\"Tab Title\"\n  @Input() icon:string=\"assets/img/icons.svg#ico-platform\";\n  @Input() dataId:string=\"\";\n\n  constructor(private element: ElementRef){\n\n  }\n\n  ngOnInit(){\n  \n  }\n\n  public getNativeElement(){\n    return this.element.nativeElement;\n  }\n\n} \n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCTabItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WCTabPanelComponent.html":{"url":"components/WCTabPanelComponent.html","title":"component - WCTabPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WCTabPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/components/containers/tabs/wc-tab-panel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                wc-tab-panel\n            \n\n            \n                styleUrls\n                wc-tab-panel.component.css\n            \n\n\n\n            \n                templateUrl\n                ./wc-tab-panel.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/components/containers/tabs/wc-tab-panel.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/components/containers/tabs/wc-tab-panel.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabs:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChildren\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/components/containers/tabs/wc-tab-panel.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, AfterContentInit, ContentChildren, QueryList  } from '@angular/core';\n\n import { WCTabItemComponent } from './wc-tab-item.component'\n\n @Component({\n   selector: 'wc-tab-panel',\n   templateUrl: './wc-tab-panel.component.html',\n   styleUrls: [ './wc-tab-panel.component.css' ]\n })\n export class WCTabPanelComponent implements AfterContentInit {\n\n  @ContentChildren(WCTabItemComponent) tabs: QueryList;\n\n  constructor(){}\n\n  ngAfterContentInit(){\n    console.log(\"Tabs: \", this.tabs)\n    let i = 1;\n    this.tabs.forEach(tabItem =>  {\n      tabItem.tabId = \"tab-\"+(i)\n      i++;\n    });\n  }\n\n} \n    \n\n    \n        \n\n    \n     \n    \n        \n            \n            {{tab.title}}\n        \n    \n\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                             {{tab.title}}                '\n    var COMPONENTS = [{'name': 'NgxGauge', 'selector': 'ngx-gauge'},{'name': 'WCDashboardHeaderComponent', 'selector': 'wc-dashboard-header'},{'name': 'WCDataCounterComponent', 'selector': 'wc-data-counter'},{'name': 'WCGaugeComponent', 'selector': 'wc-gauge'},{'name': 'WCGridButtonEditorComponent', 'selector': 'wc-grid-editor'},{'name': 'WCGridEditorCommandComponent', 'selector': 'wc-grid-editor-command'},{'name': 'WCGridEditorCommandsGroupComponent', 'selector': 'wc-grid-editor-commands-group'},{'name': 'WCLoadingOverlayComponent', 'selector': 'wc-loading-overlay'},{'name': 'WCPanelComponent', 'selector': 'wc-panel'},{'name': 'WCPropertyEditorComponent', 'selector': 'wc-property-editor'},{'name': 'WCSlidePanelComponent', 'selector': 'wc-slide-panel'},{'name': 'WCSwitchButton', 'selector': 'wc-switch-button'},{'name': 'WCSwitchControl', 'selector': 'wc-switch-control'},{'name': 'WCTabItemComponent', 'selector': 'wc-tab-item'},{'name': 'WCTabPanelComponent', 'selector': 'wc-tab-panel'}];\n    var DIRECTIVES = [{'name': 'NgxGaugeAppend', 'selector': 'ngx-gauge-append'},{'name': 'NgxGaugeLabel', 'selector': 'ngx-gauge-label'},{'name': 'NgxGaugePrepend', 'selector': 'ngx-gauge-prepend'},{'name': 'NgxGaugeValue', 'selector': 'ngx-gauge-value'}];\n    var ACTUAL_COMPONENT = {'name': 'WCTabPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WCToasterService.html":{"url":"injectables/WCToasterService.html","title":"injectable - WCToasterService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WCToasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/services/Toaster/WCToasterService.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Public\n                                success\n                            \n                            \n                                    Public\n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/services/Toaster/WCToasterService.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/services/Toaster/WCToasterService.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        error(message: string, title: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/services/Toaster/WCToasterService.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                See https://github.com/scttcper/ngx-toastr\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        info(message: string, title: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/services/Toaster/WCToasterService.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                See https://github.com/scttcper/ngx-toastr\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            success\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        success(message: string, title: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/services/Toaster/WCToasterService.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                See https://github.com/scttcper/ngx-toastr\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            warning\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        warning(message: string, title: string, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/lib/services/Toaster/WCToasterService.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                See https://github.com/scttcper/ngx-toastr\n\n                                                        \n                                                \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable} from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n//See https://scttcper.github.io/ngx-toastr/\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WCToasterService {\n\n\n  constructor(private toastr: ToastrService) {\n  }\n\n  /**\n   * \n   * @param message See https://github.com/scttcper/ngx-toastr\n   * @param title \n   * @param options \n   */\n  public success(message:string, title:string, options?:any):void {\n    this.toastr.success(message, title, options);\n  }\n\n  /**\n   * \n   * @param message See https://github.com/scttcper/ngx-toastr\n   * @param title \n   * @param options \n   */\n  public info(message:string, title:string, options?:any):void {\n    this.toastr.info(message, title, options);\n  }\n\n    /**\n   * \n   * @param message See https://github.com/scttcper/ngx-toastr\n   * @param title \n   * @param options \n   */\n  public error(message:string, title:string, options?:any):void {\n    this.toastr.error(message, title, options);\n  }\n\n    /**\n   * \n   * @param message See https://github.com/scttcper/ngx-toastr\n   * @param title \n   * @param options \n   */\n  public warning(message:string, title:string, options?:any):void {\n    this.toastr.warning(message, title, options);\n  }\n\n  /**\n   * \n   * @param message See https://github.com/scttcper/ngx-toastr\n   * @param title \n   * @param options \n   */\n  public clear():void {\n    this.toastr.clear();\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WCUIKitCoreModule.html":{"url":"modules/WCUIKitCoreModule.html","title":"module - WCUIKitCoreModule","body":"\n                   \n\n\n\n\n  Modules\n  WCUIKitCoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WCUIKitCoreModule\n\n\n\ncluster_WCUIKitCoreModule_declarations\n\n\n\ncluster_WCUIKitCoreModule_exports\n\n\n\n\nWCDashboardHeaderComponent\n\nWCDashboardHeaderComponent\n\n\n\nWCUIKitCoreModule\n\nWCUIKitCoreModule\n\nWCUIKitCoreModule -->\n\nWCDashboardHeaderComponent->WCUIKitCoreModule\n\n\n\n\n\nWCPanelComponent\n\nWCPanelComponent\n\nWCUIKitCoreModule -->\n\nWCPanelComponent->WCUIKitCoreModule\n\n\n\n\n\nWCPropertyEditorComponent\n\nWCPropertyEditorComponent\n\nWCUIKitCoreModule -->\n\nWCPropertyEditorComponent->WCUIKitCoreModule\n\n\n\n\n\nWCSlidePanelComponent\n\nWCSlidePanelComponent\n\nWCUIKitCoreModule -->\n\nWCSlidePanelComponent->WCUIKitCoreModule\n\n\n\n\n\nWCSwitchButton\n\nWCSwitchButton\n\nWCUIKitCoreModule -->\n\nWCSwitchButton->WCUIKitCoreModule\n\n\n\n\n\nWCSwitchControl\n\nWCSwitchControl\n\nWCUIKitCoreModule -->\n\nWCSwitchControl->WCUIKitCoreModule\n\n\n\n\n\nWCTabItemComponent\n\nWCTabItemComponent\n\nWCUIKitCoreModule -->\n\nWCTabItemComponent->WCUIKitCoreModule\n\n\n\n\n\nWCTabPanelComponent\n\nWCTabPanelComponent\n\nWCUIKitCoreModule -->\n\nWCTabPanelComponent->WCUIKitCoreModule\n\n\n\n\n\nWCDashboardHeaderComponent \n\nWCDashboardHeaderComponent \n\nWCDashboardHeaderComponent  -->\n\nWCUIKitCoreModule->WCDashboardHeaderComponent \n\n\n\n\n\nWCPanelComponent \n\nWCPanelComponent \n\nWCPanelComponent  -->\n\nWCUIKitCoreModule->WCPanelComponent \n\n\n\n\n\nWCPropertyEditorComponent \n\nWCPropertyEditorComponent \n\nWCPropertyEditorComponent  -->\n\nWCUIKitCoreModule->WCPropertyEditorComponent \n\n\n\n\n\nWCSlidePanelComponent \n\nWCSlidePanelComponent \n\nWCSlidePanelComponent  -->\n\nWCUIKitCoreModule->WCSlidePanelComponent \n\n\n\n\n\nWCSwitchButton \n\nWCSwitchButton \n\nWCSwitchButton  -->\n\nWCUIKitCoreModule->WCSwitchButton \n\n\n\n\n\nWCSwitchControl \n\nWCSwitchControl \n\nWCSwitchControl  -->\n\nWCUIKitCoreModule->WCSwitchControl \n\n\n\n\n\nWCTabItemComponent \n\nWCTabItemComponent \n\nWCTabItemComponent  -->\n\nWCUIKitCoreModule->WCTabItemComponent \n\n\n\n\n\nWCTabPanelComponent \n\nWCTabPanelComponent \n\nWCTabPanelComponent  -->\n\nWCUIKitCoreModule->WCTabPanelComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/web-console-ui-kit-core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WCDashboardHeaderComponent\n                            \n                            \n                                WCPanelComponent\n                            \n                            \n                                WCPropertyEditorComponent\n                            \n                            \n                                WCSlidePanelComponent\n                            \n                            \n                                WCSwitchButton\n                            \n                            \n                                WCSwitchControl\n                            \n                            \n                                WCTabItemComponent\n                            \n                            \n                                WCTabPanelComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WCDashboardHeaderComponent\n                            \n                            \n                                    WCPanelComponent\n                            \n                            \n                                    WCPropertyEditorComponent\n                            \n                            \n                                    WCSlidePanelComponent\n                            \n                            \n                                    WCSwitchButton\n                            \n                            \n                                    WCSwitchControl\n                            \n                            \n                                    WCTabItemComponent\n                            \n                            \n                                    WCTabPanelComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { WCSlidePanelComponent } from './../components/containers/slide-panel/slide-panel-component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WCPanelComponent } from '../components/containers/panel/WCPanelComponent'\nimport { WCDashboardHeaderComponent } from '../components/commons/DashboardHeader/WCDashboardHeaderComponent'\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\nimport { WCSwitchButton } from '../components/commons/SwitchButton/wc-switch-button.component'\nimport { WCSwitchControl } from '../components/commons/SwitchControl/wc-switch-control'\nimport { WCTabItemComponent } from '../components/containers/tabs/wc-tab-item.component'\nimport { WCTabPanelComponent } from '../components/containers/tabs/wc-tab-panel.component'\nimport { WCPropertyEditorComponent } from '../components/editors/property-editor/wc-property-editor.component'\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule, ToastrModule.forRoot(), FormsModule\n  ],\n  declarations: [\n    WCPanelComponent,\n    WCDashboardHeaderComponent,\n    WCSwitchButton,\n    WCSwitchControl,\n    WCSlidePanelComponent,\n    WCTabItemComponent,\n    WCTabPanelComponent,\n    WCPropertyEditorComponent\n  ],\n  exports: [\n    WCPanelComponent,\n    WCDashboardHeaderComponent,\n    WCSwitchButton,\n    WCSwitchControl,\n    WCSlidePanelComponent,\n    WCTabItemComponent,\n    WCTabPanelComponent,\n    WCPropertyEditorComponent  ],\n  entryComponents: [  ],\n  providers : [\n    ToastrService\n  ]\n})\nexport class WCUIKitCoreModule { } \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WCUIKitDataModule.html":{"url":"modules/WCUIKitDataModule.html","title":"module - WCUIKitDataModule","body":"\n                   \n\n\n\n\n  Modules\n  WCUIKitDataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WCUIKitDataModule\n\n\n\ncluster_WCUIKitDataModule_declarations\n\n\n\ncluster_WCUIKitDataModule_exports\n\n\n\n\nWCDataCounterComponent\n\nWCDataCounterComponent\n\n\n\nWCUIKitDataModule\n\nWCUIKitDataModule\n\nWCUIKitDataModule -->\n\nWCDataCounterComponent->WCUIKitDataModule\n\n\n\n\n\nWCGaugeComponent\n\nWCGaugeComponent\n\nWCUIKitDataModule -->\n\nWCGaugeComponent->WCUIKitDataModule\n\n\n\n\n\nNgxGaugeModule \n\nNgxGaugeModule \n\nNgxGaugeModule  -->\n\nWCUIKitDataModule->NgxGaugeModule \n\n\n\n\n\nWCDataCounterComponent \n\nWCDataCounterComponent \n\nWCDataCounterComponent  -->\n\nWCUIKitDataModule->WCDataCounterComponent \n\n\n\n\n\nWCGaugeComponent \n\nWCGaugeComponent \n\nWCGaugeComponent  -->\n\nWCUIKitDataModule->WCGaugeComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/web-console-ui-kit-data.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WCDataCounterComponent\n                            \n                            \n                                WCGaugeComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    NgxGaugeModule\n                            \n                            \n                                    WCDataCounterComponent\n                            \n                            \n                                    WCGaugeComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WCDataCounterComponent } from '../components/data/Counter/WCDataCounterComponent'\nimport { WCGaugeComponent } from '../components/data/Gauge/wc-gauge.component'\nimport { NgxGaugeModule } from '../components/data/NxGauge/ngx-gauge.module'\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ WCDataCounterComponent, WCGaugeComponent ],\n  exports: [ WCDataCounterComponent, WCGaugeComponent, NgxGaugeModule ],\n  providers : [\n  ]\n})\nexport class WCUIKitDataModule { } \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WCUIKitGridModule.html":{"url":"modules/WCUIKitGridModule.html","title":"module - WCUIKitGridModule","body":"\n                   \n\n\n\n\n  Modules\n  WCUIKitGridModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WCUIKitGridModule\n\n\n\ncluster_WCUIKitGridModule_declarations\n\n\n\ncluster_WCUIKitGridModule_exports\n\n\n\ncluster_WCUIKitGridModule_providers\n\n\n\n\nWCGridButtonEditorComponent\n\nWCGridButtonEditorComponent\n\n\n\nWCUIKitGridModule\n\nWCUIKitGridModule\n\nWCUIKitGridModule -->\n\nWCGridButtonEditorComponent->WCUIKitGridModule\n\n\n\n\n\nWCGridEditorCommandComponent\n\nWCGridEditorCommandComponent\n\nWCUIKitGridModule -->\n\nWCGridEditorCommandComponent->WCUIKitGridModule\n\n\n\n\n\nWCGridEditorCommandsGroupComponent\n\nWCGridEditorCommandsGroupComponent\n\nWCUIKitGridModule -->\n\nWCGridEditorCommandsGroupComponent->WCUIKitGridModule\n\n\n\n\n\nWCLoadingOverlayComponent\n\nWCLoadingOverlayComponent\n\nWCUIKitGridModule -->\n\nWCLoadingOverlayComponent->WCUIKitGridModule\n\n\n\n\n\nWCGridButtonEditorComponent \n\nWCGridButtonEditorComponent \n\nWCGridButtonEditorComponent  -->\n\nWCUIKitGridModule->WCGridButtonEditorComponent \n\n\n\n\n\nWCGridEditorCommandComponent \n\nWCGridEditorCommandComponent \n\nWCGridEditorCommandComponent  -->\n\nWCUIKitGridModule->WCGridEditorCommandComponent \n\n\n\n\n\nWCGridEditorCommandsGroupComponent \n\nWCGridEditorCommandsGroupComponent \n\nWCGridEditorCommandsGroupComponent  -->\n\nWCUIKitGridModule->WCGridEditorCommandsGroupComponent \n\n\n\n\n\nWCLoadingOverlayComponent \n\nWCLoadingOverlayComponent \n\nWCLoadingOverlayComponent  -->\n\nWCUIKitGridModule->WCLoadingOverlayComponent \n\n\n\n\n\nWCEditService\n\nWCEditService\n\nWCUIKitGridModule -->\n\nWCEditService->WCUIKitGridModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/components/grid/WCUIKitGridModule.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WCGridButtonEditorComponent\n                            \n                            \n                                WCGridEditorCommandComponent\n                            \n                            \n                                WCGridEditorCommandsGroupComponent\n                            \n                            \n                                WCLoadingOverlayComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     WCEditService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WCGridButtonEditorComponent\n                            \n                            \n                                    WCGridEditorCommandComponent\n                            \n                            \n                                    WCGridEditorCommandsGroupComponent\n                            \n                            \n                                    WCLoadingOverlayComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { WCLoadingOverlayComponent } from './loading-overlay/loading-overlay-component';\nimport { WCEditService } from './edit-service/wc-edit-service';\nimport { NgModule } from '@angular/core';\nimport { WCGridEditorCommandsGroupComponent } from './grid-editor-commands-group/grid-editor-commands-group-component';\nimport { WCGridEditorCommandComponent } from './grid-editor-command/grid-editor-command-component';\nimport { WCGridButtonEditorComponent } from './grid-editor/WCGridButtonEditorComponent';\nimport { CommonModule } from \"@angular/common\";\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FontAwesomeModule\n    ],\n    entryComponents: [\n    ],\n    declarations: [\n        WCGridEditorCommandsGroupComponent, \n        WCGridEditorCommandComponent, \n        WCGridButtonEditorComponent,\n        WCLoadingOverlayComponent\n    ],\n    exports: [ \n        WCGridEditorCommandsGroupComponent, \n        WCGridEditorCommandComponent, \n        WCGridButtonEditorComponent,\n        WCLoadingOverlayComponent\n    ],\n    providers: [\n        WCEditService\n    ]\n\n  })\n  export class WCUIKitGridModule { }\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WCUIKitGridsterProviderModule.html":{"url":"modules/WCUIKitGridsterProviderModule.html","title":"module - WCUIKitGridsterProviderModule","body":"\n                   \n\n\n\n\n  Modules\n  WCUIKitGridsterProviderModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/web-console-ui-kit-gridster-provider.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core'\n\nimport * as Gridster from  'angular-gridster2'\nexport { Gridster }\n\nimport { GridsterModule } from 'angular-gridster2'\n\n@NgModule({\n    imports:[ GridsterModule ],\n    exports:[ GridsterModule ]\n})\nexport class WCUIKitGridsterProviderModule {\n    \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WCUIKitKendoProviderModule.html":{"url":"modules/WCUIKitKendoProviderModule.html","title":"module - WCUIKitKendoProviderModule","body":"\n                   \n\n\n\n\n  Modules\n  WCUIKitKendoProviderModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/web-console-ui-kit-kendo-provider.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { ToolBarModule } from '@progress/kendo-angular-toolbar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GridModule, BodyModule, ExcelModule, FilterMenuModule, FooterModule, GroupModule, HeaderModule } from '@progress/kendo-angular-grid';\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\nimport { LayoutModule, PanelBarModule, SplitterModule, TabStripModule } from '@progress/kendo-angular-layout';\nimport { ButtonGroupModule, ButtonModule, ButtonsModule  } from '@progress/kendo-angular-buttons'\nimport { CalendarModule, DatePickerModule, DateRangeModule, TimePickerModule, MultiViewCalendarModule, DateInputModule, DateInputsModule, CalendarsModule } from '@progress/kendo-angular-dateinputs';\n\nimport * as KendoUIDrawing from '@progress/kendo-drawing';\nexport { KendoUIDrawing } \n\n@NgModule({\n    imports:[ \n        BrowserAnimationsModule, \n        ToolBarModule, \n        GridModule, BodyModule, ExcelModule, FilterMenuModule, FooterModule, GroupModule, HeaderModule, \n        DropDownsModule,\n        LayoutModule, PanelBarModule, SplitterModule, TabStripModule,\n        ButtonGroupModule, ButtonModule, ButtonsModule,\n        CalendarModule, DatePickerModule, DateRangeModule, TimePickerModule, MultiViewCalendarModule, DateInputModule, DateInputsModule, CalendarsModule\n    ],\n    exports:[ \n        BrowserAnimationsModule, \n        ToolBarModule, \n        GridModule, BodyModule, ExcelModule, FilterMenuModule, FooterModule, GroupModule, HeaderModule, \n        DropDownsModule,\n        LayoutModule, PanelBarModule, SplitterModule, TabStripModule,\n        ButtonGroupModule, ButtonModule, ButtonsModule,\n        CalendarModule, DatePickerModule, DateRangeModule, TimePickerModule, MultiViewCalendarModule, DateInputModule, DateInputsModule, CalendarsModule\n    ]\n})\nexport class WCUIKitKendoProviderModule {\n    \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WCUIKitNgxChartsProviderModule.html":{"url":"modules/WCUIKitNgxChartsProviderModule.html","title":"module - WCUIKitNgxChartsProviderModule","body":"\n                   \n\n\n\n\n  Modules\n  WCUIKitNgxChartsProviderModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/modules/web-console-ui-kit-charts.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        \nimport { NgModule } from '@angular/core';\n\nimport * as NgxCharts from '@swimlane/ngx-charts';\nexport { NgxCharts }; \n\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n\n@NgModule({\n    imports: [ NgxChartsModule],\n    exports: [ NgxChartsModule ],\n    declarations: [],\n    providers : []\n})\nexport class WCUIKitNgxChartsProviderModule { } \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/lib/components/commons/DashboardHeader/WCDashboardHeaderComponent.ts\n            \n            \n                component\n            \n            \n                WCDashboardHeaderComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/lib/components/commons/SwitchButton/wc-switch-button.component.ts\n            \n            \n                component\n            \n            \n                WCSwitchButton\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/lib/components/commons/SwitchControl/wc-switch-control.ts\n            \n            \n                component\n            \n            \n                WCSwitchControl\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/lib/components/commons/SwitchControl/wc-switch-control.ts\n            \n            \n                variable\n            \n            \n                noop\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/commons/SwitchControl/wc-switch-control.ts\n            \n            \n                variable\n            \n            \n                uuidv1\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/commons/SwitchControl/wc-switch-control.ts\n            \n            \n                variable\n            \n            \n                WC_SWITCH_CONTROL_VALUE_ACCESSOR\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/panel/WCPanelComponent.ts\n            \n            \n                component\n            \n            \n                WCPanelComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/slide-panel/slide-panel-component.ts\n            \n            \n                component\n            \n            \n                WCSlidePanelComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/tabs/wc-tab-item.component.ts\n            \n            \n                component\n            \n            \n                WCTabItemComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/lib/components/containers/tabs/wc-tab-panel.component.ts\n            \n            \n                component\n            \n            \n                WCTabPanelComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/components/data/Counter/WCDataCounterComponent.ts\n            \n            \n                component\n            \n            \n                WCDataCounterComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/lib/components/data/Gauge/wc-gauge.component.ts\n            \n            \n                component\n            \n            \n                WCGaugeComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/common/util.ts\n            \n            \n                function\n            \n            \n                clamp\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/common/util.ts\n            \n            \n                function\n            \n            \n                coerceBooleanProperty\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/common/util.ts\n            \n            \n                function\n            \n            \n                coerceNumberProperty\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/common/util.ts\n            \n            \n                function\n            \n            \n                cssUnit\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/common/util.ts\n            \n            \n                function\n            \n            \n                isNumber\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n            \n            \n                directive\n            \n            \n                NgxGaugeAppend\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n            \n            \n                directive\n            \n            \n                NgxGaugeLabel\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n            \n            \n                directive\n            \n            \n                NgxGaugePrepend\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge-directives.ts\n            \n            \n                directive\n            \n            \n                NgxGaugeValue\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge-error.ts\n            \n            \n                class\n            \n            \n                NgxGaugeError\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge.ts\n            \n            \n                component\n            \n            \n                NgxGauge\n            \n            \n                0 %\n                (0/45)\n            \n        \n        \n            \n                \n                    src/lib/components/data/NxGauge/gauge/gauge.ts\n            \n            \n                variable\n            \n            \n                DEFAULTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/editors/property-editor/wc-property-editor.component.ts\n            \n            \n                component\n            \n            \n                WCPropertyEditorComponent\n            \n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                    src/lib/components/editors/property-editor/wc-property-editor.component.ts\n            \n            \n                interface\n            \n            \n                MinitButtonClickEvent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/components/editors/property-editor/wc-property-editor.component.ts\n            \n            \n                interface\n            \n            \n                PropertyChangeEvent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/components/editors/property-editor/wc-property-editor.component.ts\n            \n            \n                interface\n            \n            \n                WCPropertyEditorItem\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/lib/components/editors/property-editor/wc-property-editor.component.ts\n            \n            \n                interface\n            \n            \n                WCPropertyEditorModel\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/edit-service/wc-edit-service.ts\n            \n            \n                injectable\n            \n            \n                WCEditService\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/edit-service/wc-edit-service.ts\n            \n            \n                interface\n            \n            \n                WCEditServiceConfiguration\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/edit-service/wc-edit-service.ts\n            \n            \n                variable\n            \n            \n                cloneData\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/edit-service/wc-edit-service.ts\n            \n            \n                variable\n            \n            \n                CREATE_ACTION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/edit-service/wc-edit-service.ts\n            \n            \n                variable\n            \n            \n                REMOVE_ACTION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/edit-service/wc-edit-service.ts\n            \n            \n                variable\n            \n            \n                UPDATE_ACTION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts\n            \n            \n                component\n            \n            \n                WCGridEditorCommandComponent\n            \n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts\n            \n            \n                interface\n            \n            \n                WCConfirmationTitleProvider\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts\n            \n            \n                interface\n            \n            \n                WCGridEditorCommandComponentEvent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts\n            \n            \n                variable\n            \n            \n                uuidv1\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts\n            \n            \n                component\n            \n            \n                WCGridEditorCommandsGroupComponent\n            \n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts\n            \n            \n                interface\n            \n            \n                WCGridEditorCommandConfig\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/grid-editor-commands-group/grid-editor-commands-group-component.ts\n            \n            \n                interface\n            \n            \n                WCGridEditorCommandsConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts\n            \n            \n                component\n            \n            \n                WCGridButtonEditorComponent\n            \n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts\n            \n            \n                variable\n            \n            \n                uuidv1\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/lib/components/grid/loading-overlay/loading-overlay-component.ts\n            \n            \n                component\n            \n            \n                WCLoadingOverlayComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/lib/services/Toaster/WCToasterService.ts\n            \n            \n                injectable\n            \n            \n                WCToasterService\n            \n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer Dependencies\n    \n    \n        \n            @angular/common : ^7.0.0\n        \n            @angular/core : ^7.0.0\n        \n            web-console-core : ^0.1.0\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : ^6.0.0\n        \n            @progress/kendo-angular-buttons : ^4.0.0\n        \n            @progress/kendo-angular-dateinputs : ^3.4.4\n        \n            @progress/kendo-angular-dropdowns : 2 - 3\n        \n            @progress/kendo-angular-excel-export : 1 - 2\n        \n            @progress/kendo-angular-grid : ^3.5.0\n        \n            @progress/kendo-angular-inputs : 2 - 3\n        \n            @progress/kendo-angular-intl : ^1.0.0\n        \n            @progress/kendo-angular-l10n : ^1.1.0\n        \n            @progress/kendo-angular-popup : ^2.0.0\n        \n            @progress/kendo-angular-toolbar : ^0.3.1\n        \n            @progress/kendo-data-query : ^1.0.0\n        \n            @progress/kendo-drawing : ^1.0.0\n        \n            @progress/kendo-theme-default : latest\n        \n            @progress/kendo-angular-layout : ^3.1.2\n        \n            ngx-toastr : ^9.0.0\n        \n            @swimlane/ngx-charts : ^10.0.0\n        \n            angular-gridster2 : ^7.0.0\n        \n            uuid : ^3.3.2\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.13\n        \n            @fortawesome/free-solid-svg-icons : ^5.7.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WCGridEditorCommandComponentEventType   (src/.../grid-editor-command-component.ts)\n                        \n                        \n                            WCPropertyEditorItemType   (src/.../wc-property-editor.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts\n    \n        \n            \n                \n                    \n                        \n                        WCGridEditorCommandComponentEventType\n                    \n                \n                        \n                            \n                                 Click\n                            \n                        \n                        \n                            \n                                 Confirm\n                            \n                        \n                        \n                            \n                                 Cancel\n                            \n                        \n                        \n                            \n                                 Ask\n                            \n                        \n            \n        \n\n    src/lib/components/editors/property-editor/wc-property-editor.component.ts\n    \n        \n            \n                \n                    \n                        \n                        WCPropertyEditorItemType\n                    \n                \n                        \n                            \n                                 String\n                            \n                        \n                        \n                            \n                                Value: string\n                            \n                        \n                        \n                            \n                                 Boolean\n                            \n                        \n                        \n                            \n                                Value: boolean\n                            \n                        \n                        \n                            \n                                 List\n                            \n                        \n                        \n                            \n                                Value: list\n                            \n                        \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                Value: text\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clamp   (src/.../util.ts)\n                        \n                        \n                            coerceBooleanProperty   (src/.../util.ts)\n                        \n                        \n                            coerceNumberProperty   (src/.../util.ts)\n                        \n                        \n                            cssUnit   (src/.../util.ts)\n                        \n                        \n                            isNumber   (src/.../util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/components/data/NxGauge/common/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clamp\n                            \n                            \n                        \n                    \n                \n                \n                    \nclamp(value: undefined, min: undefined, max: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        min\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        max\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coerceBooleanProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \ncoerceBooleanProperty(value: any)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coerceNumberProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \ncoerceNumberProperty(value: any, fallbackValue: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fallbackValue\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cssUnit\n                            \n                            \n                        \n                    \n                \n                \n                    \ncssUnit(value: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nisNumber(value: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n# \nWeb Console UI Kit\nInside the UI Kit you can find a series of components that will help you in creating the UI of your web-console.\nThe components are divided into the following categories:\n\nCore (Containers, Panels, Edit Controls, etc...)\n\nData (Gauges, Lines, Dashboard Labels, etc...)\n\nCharts (Swimlane NgxCharts: https://github.com/swimlane/ngx-charts)\n\nKendo (the complete KendoUI suite: https://www.telerik.com/kendo-angular-ui/)\n\n\nHere is a list:\n\n\n\nComponent Name\nDescirption\n\n\n\n\nSwitch Button\nA simple switch ON/OFF button\n\n\nDashboard Header\nA label for a dashboard item title\n\n\nDashboard\nA dashboard component (see: https://github.com/tiberiuzuld/angular-gridster2)\n\n\nPanel\nA simple panel container\n\n\nSlide Panel\nA drop down panel for editing UI\n\n\nTabs\nA Tab component\n\n\nCounter\nA simple value display for metrics\n\n\nGauge\nA gauge value display for metrics\n\n\nProperty Editor\nA JSON visual property editor\n\n\nGrid Cell Editor\nA cell editor customizable for the grid\n\n\nKendo Components\nAll Kendo UI components for Angular\n\n\nCharts\nA charts suite from Swimlane Charts\n\n\nGrid Commands\nA toolbar for grid column for multiple commands with confirmation support\n\n\n\nLibrary Modules\nThe UI Kit library contains a series of modules that allow you to use the various components available: depending on the components you wish to use in your UI, you will need to import one of these modules to make them available in your code.\n\n\n\nModule\nComponents\n\n\n\n\nWCUIKitCoreModule\n\n\n\n\nWCGridButtonEditorComponent\n\n\n\nWCPanelComponent\n\n\n\nWCDashboardHeaderComponent\n\n\n\nWCSwitchButton\n\n\n\nWCSlidePanelComponent\n\n\n\nWCTabItemComponent\n\n\n\nWCTabPanelComponent\n\n\n\nWCPropertyEditorComponent\n\n\nWCUIKitDataModule\n\n\n\n\nWCDataCounterComponent\n\n\n\nNgxGaugeModule\n\n\nWCUIKitNgxChartsProviderModule\n\n\n\n\nAll NgxCharts available componenents\n\n\nWCUIKitGridsterProviderModule\n\n\n\n\nAll Gridster available componenents\n\n\nWCUIKitKendoProviderModule\n\n\n\n\nAll Kendo UI available componenents\n\n\n\n\n\n\nDashboard Header WCUIKitCoreModule\nThe WCDashboardHeaderComponent is a label that you can put as a title for every element of your dashboard:\n\nTo add a dashboard header in your page you need to use this directive:\n \nSlide Down PanelWCUIKitCoreModule\nWith the WCSlideDownPanelComponent you can create non-invasive interface elements that can appear and disappear when needed:\n\nTo add a slide down panel you need to use the wc-slide-down-panel directive:\n\n    \n        \n        \n        \n        \n        \n            \n                 \n            \n            \n                \n            \n        \n    \nSwitch ButtonWCUIKitCoreModule\nWith the WCSwitchButton you can implement an ON / OFF editing field:\n\nTo add a switch button you nedd to use the wc-switch-button directive:\n``PanelWCUIKitCoreModule\nThe WCPanelComponent is a simple UI container with a title.\n\nTo create a panel you need to use the wc-panel directive:\n\n    \nIf you want to add into a dashboard item:\n\n    \n         \n     \nDashboardWCUIKitGridsterProviderModule\nThe dashboard is a component that allows you to quickly and easily create complex data visualizations arranged in elements with automatic layout, drag & drop, etc.\n\nThe Web Console integrates the open source Gridster component (https://github.com/tiberiuzuld/angular-gridster2) to implement its own dashboard. \nWe recommend that you refer to the official gridster guide for its use.\nHow to use\n\n  \n    \n  \nInitialize a simple dashboard:\n   import { GridsterConfig, GridsterItem }  from 'web-console-ui-kit';\n   options: GridsterConfig;\n   dashboard: Array;\n\n   static itemChange(item, itemComponent) {\n     console.info('itemChanged', item, itemComponent);\n   }\n\n   static itemResize(item, itemComponent) {\n     console.info('itemResized', item, itemComponent);\n   }\n\n   ngOnInit() {\n     this.options = {\n       itemChangeCallback: AppComponent.itemChange,\n       itemResizeCallback: AppComponent.itemResize,\n     };\n\n     this.dashboard = [\n       {cols: 2, rows: 1, y: 0, x: 0},\n       {cols: 2, rows: 2, y: 0, x: 2}\n     ];\n   }\n\n   changedOptions() {\n     this.options.api.optionsChanged();\n   }\n\n   removeItem(item) {\n     this.dashboard.splice(this.dashboard.indexOf(item), 1);\n   }\n\n   addItem() {\n     this.dashboard.push({});\n   }Note: The gridster will take all the available space from the parent. It will not size depending on content. The parent of the component needs to have a size.\nLoad dynamic components inside the gridster-item\nYou can load dynamic components in Angular4+ with the help of ng-dynamic-component library\nHaving iFrame in widgets content\niFrames can interfere with drag/resize of widgets. For a workaround please read this issue #233\nInteract with content without dragging\nOption 1 (without text selection):\n\n   \n     Some content to click without dragging the widget\n   \n   \n     \n         open_with\n     \n     \n       clear\n     \n   \nOption 2 (with text selection):\n\n  \n      Some content to select and click without dragging the widget\n  \n  \n    \n      open_with\n    \n    \n      clear\n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxGaugeModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WCUIKitCoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WCUIKitDataModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WCUIKitGridModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WCUIKitGridsterProviderModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WCUIKitKendoProviderModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WCUIKitNgxChartsProviderModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxGaugeModule\n\n\n\ncluster_NgxGaugeModule_declarations\n\n\n\ncluster_NgxGaugeModule_exports\n\n\n\ncluster_WCUIKitCoreModule\n\n\n\ncluster_WCUIKitCoreModule_declarations\n\n\n\ncluster_WCUIKitCoreModule_exports\n\n\n\ncluster_WCUIKitDataModule\n\n\n\ncluster_WCUIKitDataModule_declarations\n\n\n\ncluster_WCUIKitDataModule_exports\n\n\n\ncluster_WCUIKitGridModule\n\n\n\ncluster_WCUIKitGridModule_declarations\n\n\n\ncluster_WCUIKitGridModule_exports\n\n\n\ncluster_WCUIKitGridModule_providers\n\n\n\n\nNgxGauge\n\nNgxGauge\n\n\n\nNgxGaugeModule\n\nNgxGaugeModule\n\nNgxGaugeModule -->\n\nNgxGauge->NgxGaugeModule\n\n\n\n\n\nNgxGaugeAppend\n\nNgxGaugeAppend\n\nNgxGaugeModule -->\n\nNgxGaugeAppend->NgxGaugeModule\n\n\n\n\n\nNgxGaugeLabel\n\nNgxGaugeLabel\n\nNgxGaugeModule -->\n\nNgxGaugeLabel->NgxGaugeModule\n\n\n\n\n\nNgxGaugePrepend\n\nNgxGaugePrepend\n\nNgxGaugeModule -->\n\nNgxGaugePrepend->NgxGaugeModule\n\n\n\n\n\nNgxGaugeValue\n\nNgxGaugeValue\n\nNgxGaugeModule -->\n\nNgxGaugeValue->NgxGaugeModule\n\n\n\n\n\nNgxGauge \n\nNgxGauge \n\nNgxGauge  -->\n\nNgxGaugeModule->NgxGauge \n\n\n\n\n\nNgxGaugeAppend \n\nNgxGaugeAppend \n\nNgxGaugeAppend  -->\n\nNgxGaugeModule->NgxGaugeAppend \n\n\n\n\n\nNgxGaugeLabel \n\nNgxGaugeLabel \n\nNgxGaugeLabel  -->\n\nNgxGaugeModule->NgxGaugeLabel \n\n\n\n\n\nNgxGaugePrepend \n\nNgxGaugePrepend \n\nNgxGaugePrepend  -->\n\nNgxGaugeModule->NgxGaugePrepend \n\n\n\n\n\nNgxGaugeValue \n\nNgxGaugeValue \n\nNgxGaugeValue  -->\n\nNgxGaugeModule->NgxGaugeValue \n\n\n\n\n\nWCDashboardHeaderComponent\n\nWCDashboardHeaderComponent\n\n\n\nWCUIKitCoreModule\n\nWCUIKitCoreModule\n\nWCUIKitCoreModule -->\n\nWCDashboardHeaderComponent->WCUIKitCoreModule\n\n\n\n\n\nWCPanelComponent\n\nWCPanelComponent\n\nWCUIKitCoreModule -->\n\nWCPanelComponent->WCUIKitCoreModule\n\n\n\n\n\nWCPropertyEditorComponent\n\nWCPropertyEditorComponent\n\nWCUIKitCoreModule -->\n\nWCPropertyEditorComponent->WCUIKitCoreModule\n\n\n\n\n\nWCSlidePanelComponent\n\nWCSlidePanelComponent\n\nWCUIKitCoreModule -->\n\nWCSlidePanelComponent->WCUIKitCoreModule\n\n\n\n\n\nWCSwitchButton\n\nWCSwitchButton\n\nWCUIKitCoreModule -->\n\nWCSwitchButton->WCUIKitCoreModule\n\n\n\n\n\nWCSwitchControl\n\nWCSwitchControl\n\nWCUIKitCoreModule -->\n\nWCSwitchControl->WCUIKitCoreModule\n\n\n\n\n\nWCTabItemComponent\n\nWCTabItemComponent\n\nWCUIKitCoreModule -->\n\nWCTabItemComponent->WCUIKitCoreModule\n\n\n\n\n\nWCTabPanelComponent\n\nWCTabPanelComponent\n\nWCUIKitCoreModule -->\n\nWCTabPanelComponent->WCUIKitCoreModule\n\n\n\n\n\nWCDashboardHeaderComponent \n\nWCDashboardHeaderComponent \n\nWCDashboardHeaderComponent  -->\n\nWCUIKitCoreModule->WCDashboardHeaderComponent \n\n\n\n\n\nWCPanelComponent \n\nWCPanelComponent \n\nWCPanelComponent  -->\n\nWCUIKitCoreModule->WCPanelComponent \n\n\n\n\n\nWCPropertyEditorComponent \n\nWCPropertyEditorComponent \n\nWCPropertyEditorComponent  -->\n\nWCUIKitCoreModule->WCPropertyEditorComponent \n\n\n\n\n\nWCSlidePanelComponent \n\nWCSlidePanelComponent \n\nWCSlidePanelComponent  -->\n\nWCUIKitCoreModule->WCSlidePanelComponent \n\n\n\n\n\nWCSwitchButton \n\nWCSwitchButton \n\nWCSwitchButton  -->\n\nWCUIKitCoreModule->WCSwitchButton \n\n\n\n\n\nWCSwitchControl \n\nWCSwitchControl \n\nWCSwitchControl  -->\n\nWCUIKitCoreModule->WCSwitchControl \n\n\n\n\n\nWCTabItemComponent \n\nWCTabItemComponent \n\nWCTabItemComponent  -->\n\nWCUIKitCoreModule->WCTabItemComponent \n\n\n\n\n\nWCTabPanelComponent \n\nWCTabPanelComponent \n\nWCTabPanelComponent  -->\n\nWCUIKitCoreModule->WCTabPanelComponent \n\n\n\n\n\nWCDataCounterComponent\n\nWCDataCounterComponent\n\n\n\nWCUIKitDataModule\n\nWCUIKitDataModule\n\nWCUIKitDataModule -->\n\nWCDataCounterComponent->WCUIKitDataModule\n\n\n\n\n\nWCGaugeComponent\n\nWCGaugeComponent\n\nWCUIKitDataModule -->\n\nWCGaugeComponent->WCUIKitDataModule\n\n\n\n\n\nNgxGaugeModule \n\nNgxGaugeModule \n\nNgxGaugeModule  -->\n\nWCUIKitDataModule->NgxGaugeModule \n\n\n\n\n\nWCDataCounterComponent \n\nWCDataCounterComponent \n\nWCDataCounterComponent  -->\n\nWCUIKitDataModule->WCDataCounterComponent \n\n\n\n\n\nWCGaugeComponent \n\nWCGaugeComponent \n\nWCGaugeComponent  -->\n\nWCUIKitDataModule->WCGaugeComponent \n\n\n\n\n\nWCGridButtonEditorComponent\n\nWCGridButtonEditorComponent\n\n\n\nWCUIKitGridModule\n\nWCUIKitGridModule\n\nWCUIKitGridModule -->\n\nWCGridButtonEditorComponent->WCUIKitGridModule\n\n\n\n\n\nWCGridEditorCommandComponent\n\nWCGridEditorCommandComponent\n\nWCUIKitGridModule -->\n\nWCGridEditorCommandComponent->WCUIKitGridModule\n\n\n\n\n\nWCGridEditorCommandsGroupComponent\n\nWCGridEditorCommandsGroupComponent\n\nWCUIKitGridModule -->\n\nWCGridEditorCommandsGroupComponent->WCUIKitGridModule\n\n\n\n\n\nWCLoadingOverlayComponent\n\nWCLoadingOverlayComponent\n\nWCUIKitGridModule -->\n\nWCLoadingOverlayComponent->WCUIKitGridModule\n\n\n\n\n\nWCGridButtonEditorComponent \n\nWCGridButtonEditorComponent \n\nWCGridButtonEditorComponent  -->\n\nWCUIKitGridModule->WCGridButtonEditorComponent \n\n\n\n\n\nWCGridEditorCommandComponent \n\nWCGridEditorCommandComponent \n\nWCGridEditorCommandComponent  -->\n\nWCUIKitGridModule->WCGridEditorCommandComponent \n\n\n\n\n\nWCGridEditorCommandsGroupComponent \n\nWCGridEditorCommandsGroupComponent \n\nWCGridEditorCommandsGroupComponent  -->\n\nWCUIKitGridModule->WCGridEditorCommandsGroupComponent \n\n\n\n\n\nWCLoadingOverlayComponent \n\nWCLoadingOverlayComponent \n\nWCLoadingOverlayComponent  -->\n\nWCUIKitGridModule->WCLoadingOverlayComponent \n\n\n\n\n\nWCEditService\n\nWCEditService\n\nWCUIKitGridModule -->\n\nWCEditService->WCUIKitGridModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            7 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        15 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgxGaugeCap   (src/.../gauge.ts)\n                        \n                        \n                            NgxGaugeType   (src/.../gauge.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/components/data/NxGauge/gauge/gauge.ts\n    \n        \n            \n                \n                    \n                        \n                        NgxGaugeCap\n                    \n                \n                \n                    \n                        NgxGaugeCap:     \"round\" | \"butt\"\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        NgxGaugeType\n                    \n                \n                \n                    \n                        NgxGaugeType:     \"full\" | \"arch\" | \"semi\"\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cloneData   (src/.../wc-edit-service.ts)\n                        \n                        \n                            CREATE_ACTION   (src/.../wc-edit-service.ts)\n                        \n                        \n                            DEFAULTS   (src/.../gauge.ts)\n                        \n                        \n                            noop   (src/.../wc-switch-control.ts)\n                        \n                        \n                            REMOVE_ACTION   (src/.../wc-edit-service.ts)\n                        \n                        \n                            UPDATE_ACTION   (src/.../wc-edit-service.ts)\n                        \n                        \n                            uuidv1   (src/.../wc-switch-control.ts)\n                        \n                        \n                            uuidv1   (src/.../WCGridButtonEditorComponent.ts)\n                        \n                        \n                            uuidv1   (src/.../grid-editor-command-component.ts)\n                        \n                        \n                            WC_SWITCH_CONTROL_VALUE_ACCESSOR   (src/.../wc-switch-control.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/components/grid/edit-service/wc-edit-service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloneData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cloneData:     \n\n                    \n                \n                    \n                        \n                            Default value : (data: any[]) => data.map(item => Object.assign({}, item))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CREATE_ACTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CREATE_ACTION:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'create'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REMOVE_ACTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        REMOVE_ACTION:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'destroy'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_ACTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UPDATE_ACTION:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'update'\n                        \n                    \n\n\n            \n        \n\n    src/lib/components/data/NxGauge/gauge/gauge.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DEFAULTS:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    MIN: 0,\n    MAX: 100,\n    TYPE: 'arch',\n    THICK: 4,\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\n    CAP: 'butt',\n    SIZE: 200\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/components/commons/SwitchControl/wc-switch-control.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            noop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noop:     \n\n                    \n                \n                    \n                        \n                            Default value : () => {\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uuidv1:     \n\n                    \n                \n                    \n                        \n                            Default value : uuidv1_\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WC_SWITCH_CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        WC_SWITCH_CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => WCSwitchControl),\n    multi: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/lib/components/grid/grid-editor/WCGridButtonEditorComponent.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uuidv1:     \n\n                    \n                \n                    \n                        \n                            Default value : uuidv1_\n                        \n                    \n\n\n            \n        \n\n    src/lib/components/grid/grid-editor-command/grid-editor-command-component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uuidv1\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uuidv1:     \n\n                    \n                \n                    \n                        \n                            Default value : uuidv1_\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
